android.content.pm.IPackageDataObserver -> android.content.pm.IPackageDataObserver:
    void onRemoveCompleted(java.lang.String,boolean) -> onRemoveCompleted
android.content.pm.IPackageDataObserver$Stub -> android.content.pm.a:
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.content.pm.IPackageStatsObserver -> android.content.pm.IPackageStatsObserver:
    void onGetStatsCompleted(android.content.pm.PackageStats,boolean) -> onGetStatsCompleted
android.content.pm.IPackageStatsObserver$Stub -> android.content.pm.b:
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> b
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> P
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> u
    android.support.v4.app.Fragment mParentFragment -> v
    int mFragmentId -> w
    int mContainerId -> x
    java.lang.String mTag -> y
    boolean mHidden -> z
    boolean mDetached -> A
    boolean mRetainInstance -> B
    boolean mRetaining -> C
    boolean mHasMenu -> D
    boolean mMenuVisible -> E
    boolean mCalled -> F
    int mNextAnim -> G
    android.view.ViewGroup mContainer -> H
    android.view.View mView -> I
    android.view.View mInnerView -> J
    boolean mDeferStart -> K
    boolean mUserVisibleHint -> L
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> M
    boolean mLoadersStarted -> N
    boolean mCheckedForLoaderManager -> O
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    void restoreViewState(android.os.Bundle) -> a
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.support.v4.app.FragmentActivity getActivity() -> b
    android.content.res.Resources getResources() -> c
    boolean isDetached() -> d
    void onHiddenChanged(boolean) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> d
    void onViewStateRestored(android.os.Bundle) -> e
    void onStart() -> e
    void onResume() -> f
    void onSaveInstanceState(android.os.Bundle) -> f
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> g
    void onStop() -> h
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> i
    void onDestroy() -> j
    void initState() -> k
    void onDetach() -> l
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> m
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void instantiateChildFragmentManager() -> n
    void performCreate(android.os.Bundle) -> g
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    void performActivityCreated(android.os.Bundle) -> h
    void performStart() -> o
    void performResume() -> p
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> q
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    boolean performPrepareOptionsMenu(android.view.Menu) -> c
    boolean performOptionsItemSelected(android.view.MenuItem) -> c
    boolean performContextItemSelected(android.view.MenuItem) -> d
    void performOptionsMenuClosed(android.view.Menu) -> d
    void performSaveInstanceState(android.os.Bundle) -> i
    void performPause() -> r
    void performStop() -> s
    void performReallyStop() -> t
    void performDestroyView() -> u
    void performDestroy() -> v
android.support.v4.app.Fragment$1 -> android.support.v4.app.e:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.f:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.g:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.h:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    java.util.HashMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.i:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.j:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    java.util.HashMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.k:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.l:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.m:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.n:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> t
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroyView() -> q
    void dispatchDestroy() -> r
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> s
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.o:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.p:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.q:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.r:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.s:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.t:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.u:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.v:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    int commit() -> a
android.support.v4.app.LoaderManager -> android.support.v4.app.w:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.x:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.y:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.z:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.aa:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.ab:
android.support.v4.content.Loader -> android.support.v4.a.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.b:
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.a:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.b:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.c:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    void gc() -> c
    int size() -> a
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> b
    int idealByteArraySize(int) -> c
    int idealIntArraySize(int) -> d
android.support.v4.view.KeyEventCompat -> android.support.v4.view.a:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.b:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.c:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.d:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.e:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> a
android.support.v4.view.MotionEventCompat -> android.support.v4.view.f:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionIndex(android.view.MotionEvent) -> a
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.g:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.h:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.i:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.j:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.PagerAdapter -> android.support.v4.view.k:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    float getPageWidth(int) -> a
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.l:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.m:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.n:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.o:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.p:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.ViewCompat -> android.support.v4.view.q:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.r:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.s:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.t:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.u:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.v:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.w:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.x:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.y:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.z:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.aa:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ab:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    java.util.Comparator COMPARATOR -> b
    android.view.animation.Interpolator sInterpolator -> c
    java.util.ArrayList mItems -> d
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> e
    android.graphics.Rect mTempRect -> f
    android.support.v4.view.PagerAdapter mAdapter -> g
    int mCurItem -> h
    int mRestoredCurItem -> i
    android.os.Parcelable mRestoredAdapterState -> j
    java.lang.ClassLoader mRestoredClassLoader -> k
    android.widget.Scroller mScroller -> l
    android.support.v4.view.ViewPager$PagerObserver mObserver -> m
    int mPageMargin -> n
    android.graphics.drawable.Drawable mMarginDrawable -> o
    int mTopPageBounds -> p
    int mBottomPageBounds -> q
    float mFirstOffset -> r
    float mLastOffset -> s
    int mChildWidthMeasureSpec -> t
    int mChildHeightMeasureSpec -> u
    boolean mInLayout -> v
    boolean mScrollingCacheEnabled -> w
    boolean mPopulatePending -> x
    int mOffscreenPageLimit -> y
    boolean mIsBeingDragged -> z
    boolean mIsUnableToDrag -> A
    int mDefaultGutterSize -> B
    int mGutterSize -> C
    int mTouchSlop -> D
    float mInitialMotionX -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    int mActivePointerId -> H
    android.view.VelocityTracker mVelocityTracker -> I
    int mMinimumVelocity -> J
    int mMaximumVelocity -> K
    int mFlingDistance -> L
    int mCloseEnough -> M
    int mSeenPositionMin -> N
    int mSeenPositionMax -> O
    boolean mFakeDragging -> P
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> Q
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> R
    boolean mFirstLayout -> S
    boolean mNeedCalculatePageOffsets -> T
    boolean mCalledSuper -> U
    int mDecorChildCount -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> Z
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> aa
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ab
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ac
    int mDrawingOrder -> ad
    java.util.ArrayList mDrawingOrderedChildren -> ae
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> af
    java.lang.Runnable mEndScrollRunnable -> ag
    int mScrollState -> ah
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> f
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> a
    void populate() -> b
    void populate(int) -> a
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> g
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> h
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> c
    boolean pageRight() -> d
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int[] access$400() -> e
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ac:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ad:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ae:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.af:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ag:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ah:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ai:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.aj:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ak:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.al:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.am:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.widget.CursorAdapter -> android.support.v4.d.a:
    boolean mDataValid -> a
    boolean mAutoRequery -> b
    android.database.Cursor mCursor -> c
    android.content.Context mContext -> d
    int mRowIDColumn -> e
    android.support.v4.widget.CursorAdapter$ChangeObserver mChangeObserver -> f
    android.database.DataSetObserver mDataSetObserver -> g
    android.support.v4.widget.CursorFilter mCursorFilter -> h
    android.widget.FilterQueryProvider mFilterQueryProvider -> i
    void init(android.content.Context,android.database.Cursor,int) -> a
    android.database.Cursor getCursor() -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> a
    android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> b
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> a
    void changeCursor(android.database.Cursor) -> a
    android.database.Cursor swapCursor(android.database.Cursor) -> b
    java.lang.CharSequence convertToString(android.database.Cursor) -> c
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> a
    android.widget.Filter getFilter() -> getFilter
    void onContentChanged() -> b
android.support.v4.widget.CursorAdapter$1 -> android.support.v4.d.b:
android.support.v4.widget.CursorAdapter$ChangeObserver -> android.support.v4.d.c:
    android.support.v4.widget.CursorAdapter this$0 -> a
    boolean deliverSelfNotifications() -> deliverSelfNotifications
    void onChange(boolean) -> onChange
android.support.v4.widget.CursorAdapter$MyDataSetObserver -> android.support.v4.d.d:
    android.support.v4.widget.CursorAdapter this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.widget.CursorFilter -> android.support.v4.d.e:
    android.support.v4.widget.CursorFilter$CursorFilterClient mClient -> a
    java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
android.support.v4.widget.CursorFilter$CursorFilterClient -> android.support.v4.d.f:
    java.lang.CharSequence convertToString(android.database.Cursor) -> c
    android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> a
    android.database.Cursor getCursor() -> a
    void changeCursor(android.database.Cursor) -> a
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.d.g:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.d.h:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.d.i:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.d.j:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.d.k:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
com.android.internal.telephony.ITelephony -> com.android.internal.telephony.ITelephony:
    void dial(java.lang.String) -> dial
    void call(java.lang.String) -> call
    boolean showCallScreen() -> showCallScreen
    boolean showCallScreenWithDialpad(boolean) -> showCallScreenWithDialpad
    boolean endCall() -> endCall
    void answerRingingCall() -> answerRingingCall
    void silenceRinger() -> silenceRinger
    boolean isOffhook() -> isOffhook
    boolean isRinging() -> isRinging
    boolean isIdle() -> isIdle
    boolean isRadioOn() -> isRadioOn
    boolean isSimPinEnabled() -> isSimPinEnabled
    void cancelMissedCallsNotification() -> cancelMissedCallsNotification
    boolean supplyPin(java.lang.String) -> supplyPin
    boolean handlePinMmi(java.lang.String) -> handlePinMmi
    void toggleRadioOnOff() -> toggleRadioOnOff
    boolean setRadio(boolean) -> setRadio
    void updateServiceLocation() -> updateServiceLocation
    void enableLocationUpdates() -> enableLocationUpdates
    void disableLocationUpdates() -> disableLocationUpdates
    int enableApnType(java.lang.String) -> enableApnType
    int disableApnType(java.lang.String) -> disableApnType
    boolean enableDataConnectivity() -> enableDataConnectivity
    boolean disableDataConnectivity() -> disableDataConnectivity
    boolean isDataConnectivityPossible() -> isDataConnectivityPossible
    android.os.Bundle getCellLocation() -> getCellLocation
    java.util.List getNeighboringCellInfo() -> getNeighboringCellInfo
    int getCallState() -> getCallState
    int getDataActivity() -> getDataActivity
    int getDataState() -> getDataState
    int getActivePhoneType() -> getActivePhoneType
    int getCdmaEriIconIndex() -> getCdmaEriIconIndex
    int getCdmaEriIconMode() -> getCdmaEriIconMode
    java.lang.String getCdmaEriText() -> getCdmaEriText
    boolean getCdmaNeedsProvisioning() -> getCdmaNeedsProvisioning
    int getVoiceMessageCount() -> getVoiceMessageCount
    int getNetworkType() -> getNetworkType
    boolean hasIccCard() -> hasIccCard
com.android.internal.telephony.ITelephony$Stub -> com.android.internal.telephony.a:
    com.android.internal.telephony.ITelephony asInterface(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.android.internal.telephony.ITelephony$Stub$Proxy -> com.android.internal.telephony.b:
    android.os.IBinder mRemote -> a
    android.os.IBinder asBinder() -> asBinder
    void dial(java.lang.String) -> dial
    void call(java.lang.String) -> call
    boolean showCallScreen() -> showCallScreen
    boolean showCallScreenWithDialpad(boolean) -> showCallScreenWithDialpad
    boolean endCall() -> endCall
    void answerRingingCall() -> answerRingingCall
    void silenceRinger() -> silenceRinger
    boolean isOffhook() -> isOffhook
    boolean isRinging() -> isRinging
    boolean isIdle() -> isIdle
    boolean isRadioOn() -> isRadioOn
    boolean isSimPinEnabled() -> isSimPinEnabled
    void cancelMissedCallsNotification() -> cancelMissedCallsNotification
    boolean supplyPin(java.lang.String) -> supplyPin
    boolean handlePinMmi(java.lang.String) -> handlePinMmi
    void toggleRadioOnOff() -> toggleRadioOnOff
    boolean setRadio(boolean) -> setRadio
    void updateServiceLocation() -> updateServiceLocation
    void enableLocationUpdates() -> enableLocationUpdates
    void disableLocationUpdates() -> disableLocationUpdates
    int enableApnType(java.lang.String) -> enableApnType
    int disableApnType(java.lang.String) -> disableApnType
    boolean enableDataConnectivity() -> enableDataConnectivity
    boolean disableDataConnectivity() -> disableDataConnectivity
    boolean isDataConnectivityPossible() -> isDataConnectivityPossible
    android.os.Bundle getCellLocation() -> getCellLocation
    java.util.List getNeighboringCellInfo() -> getNeighboringCellInfo
    int getCallState() -> getCallState
    int getDataActivity() -> getDataActivity
    int getDataState() -> getDataState
    int getActivePhoneType() -> getActivePhoneType
    int getCdmaEriIconIndex() -> getCdmaEriIconIndex
    int getCdmaEriIconMode() -> getCdmaEriIconMode
    java.lang.String getCdmaEriText() -> getCdmaEriText
    boolean getCdmaNeedsProvisioning() -> getCdmaNeedsProvisioning
    int getVoiceMessageCount() -> getVoiceMessageCount
    int getNetworkType() -> getNetworkType
    boolean hasIccCard() -> hasIccCard
com.github.lzyzsd.circleprogress.ArcProgress -> com.github.lzyzsd.circleprogress.ArcProgress:
    android.graphics.Paint paint -> b
    android.graphics.Paint textPaint -> a
    android.graphics.RectF rectF -> c
    float strokeWidth -> d
    float suffixTextSize -> e
    float bottomTextSize -> f
    java.lang.String bottomText -> g
    float textSize -> h
    int textColor -> i
    int progress -> j
    int max -> k
    int finishedStrokeColor -> l
    int unfinishedStrokeColor -> m
    float arcAngle -> n
    java.lang.String suffixText -> o
    float suffixTextPadding -> p
    float arcBottomHeight -> q
    int default_finished_color -> r
    int default_unfinished_color -> s
    int default_text_color -> t
    float default_suffix_text_size -> u
    float default_suffix_padding -> v
    float default_bottom_text_size -> w
    float default_stroke_width -> x
    java.lang.String default_suffix_text -> y
    int default_max -> z
    float default_arc_angle -> A
    float default_text_size -> B
    int min_size -> C
    void initByAttributes(android.content.res.TypedArray) -> a
    void initPainters() -> a
    void invalidate() -> invalidate
    float getStrokeWidth() -> getStrokeWidth
    void setStrokeWidth(float) -> setStrokeWidth
    float getSuffixTextSize() -> getSuffixTextSize
    void setSuffixTextSize(float) -> setSuffixTextSize
    java.lang.String getBottomText() -> getBottomText
    void setBottomText(java.lang.String) -> setBottomText
    int getProgress() -> getProgress
    void setProgress(int) -> setProgress
    int getMax() -> getMax
    void setMax(int) -> setMax
    float getBottomTextSize() -> getBottomTextSize
    void setBottomTextSize(float) -> setBottomTextSize
    float getTextSize() -> getTextSize
    void setTextSize(float) -> setTextSize
    int getTextColor() -> getTextColor
    void setTextColor(int) -> setTextColor
    int getFinishedStrokeColor() -> getFinishedStrokeColor
    void setFinishedStrokeColor(int) -> setFinishedStrokeColor
    int getUnfinishedStrokeColor() -> getUnfinishedStrokeColor
    void setUnfinishedStrokeColor(int) -> setUnfinishedStrokeColor
    float getArcAngle() -> getArcAngle
    void setArcAngle(float) -> setArcAngle
    java.lang.String getSuffixText() -> getSuffixText
    void setSuffixText(java.lang.String) -> setSuffixText
    float getSuffixTextPadding() -> getSuffixTextPadding
    void setSuffixTextPadding(float) -> setSuffixTextPadding
    int getSuggestedMinimumHeight() -> getSuggestedMinimumHeight
    int getSuggestedMinimumWidth() -> getSuggestedMinimumWidth
    void onMeasure(int,int) -> onMeasure
    void onDraw(android.graphics.Canvas) -> onDraw
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
com.github.lzyzsd.circleprogress.R -> com.github.lzyzsd.circleprogress.a:
com.github.lzyzsd.circleprogress.R$styleable -> com.github.lzyzsd.circleprogress.b:
    int CircleProgress_circle_unfinished_color -> CircleProgress_circle_unfinished_color
    int ArcProgress_arc_suffix_text_size -> ArcProgress_arc_suffix_text_size
    int DonutProgress_donut_inner_bottom_text_size -> DonutProgress_donut_inner_bottom_text_size
    int ArcProgress_arc_unfinished_color -> ArcProgress_arc_unfinished_color
    int ArcProgress_arc_bottom_text_size -> ArcProgress_arc_bottom_text_size
    int DonutProgress_donut_suffix_text -> DonutProgress_donut_suffix_text
    int DonutProgress_donut_unfinished_stroke_width -> DonutProgress_donut_unfinished_stroke_width
    int ArcProgress_arc_finished_color -> ArcProgress_arc_finished_color
    int DonutProgress_donut_background_color -> DonutProgress_donut_background_color
    int CircleProgress_circle_progress -> CircleProgress_circle_progress
    int ArcProgress_arc_stroke_width -> ArcProgress_arc_stroke_width
    int[] DonutProgress -> DonutProgress
    int CircleProgress_circle_prefix_text -> CircleProgress_circle_prefix_text
    int DonutProgress_donut_text_size -> DonutProgress_donut_text_size
    int CircleProgress_circle_suffix_text -> CircleProgress_circle_suffix_text
    int ArcProgress_arc_angle -> ArcProgress_arc_angle
    int CircleProgress_circle_max -> CircleProgress_circle_max
    int CircleProgress_circle_finished_color -> CircleProgress_circle_finished_color
    int CircleProgress_circle_text_size -> CircleProgress_circle_text_size
    int DonutProgress_donut_unfinished_color -> DonutProgress_donut_unfinished_color
    int[] CircleProgress -> CircleProgress
    int ArcProgress_arc_text_size -> ArcProgress_arc_text_size
    int ArcProgress_arc_suffix_text_padding -> ArcProgress_arc_suffix_text_padding
    int Themes_donutProgressStyle -> Themes_donutProgressStyle
    int CircleProgress_circle_text_color -> CircleProgress_circle_text_color
    int DonutProgress_donut_finished_stroke_width -> DonutProgress_donut_finished_stroke_width
    int ArcProgress_arc_suffix_text -> ArcProgress_arc_suffix_text
    int ArcProgress_arc_progress -> ArcProgress_arc_progress
    int DonutProgress_donut_text_color -> DonutProgress_donut_text_color
    int DonutProgress_donut_progress -> DonutProgress_donut_progress
    int Themes_arcProgressStyle -> Themes_arcProgressStyle
    int ArcProgress_arc_text_color -> ArcProgress_arc_text_color
    int[] Themes -> Themes
    int DonutProgress_donut_prefix_text -> DonutProgress_donut_prefix_text
    int DonutProgress_donut_finished_color -> DonutProgress_donut_finished_color
    int DonutProgress_donut_circle_starting_degree -> DonutProgress_donut_circle_starting_degree
    int DonutProgress_donut_inner_bottom_text_color -> DonutProgress_donut_inner_bottom_text_color
    int ArcProgress_arc_bottom_text -> ArcProgress_arc_bottom_text
    int[] ArcProgress -> ArcProgress
    int DonutProgress_donut_inner_bottom_text -> DonutProgress_donut_inner_bottom_text
    int Themes_circleProgressStyle -> Themes_circleProgressStyle
    int DonutProgress_donut_text -> DonutProgress_donut_text
    int DonutProgress_donut_max -> DonutProgress_donut_max
    int ArcProgress_arc_max -> ArcProgress_arc_max
com.github.lzyzsd.circleprogress.Utils -> com.github.lzyzsd.circleprogress.c:
    float dp2px(android.content.res.Resources,float) -> a
    float sp2px(android.content.res.Resources,float) -> b
com.lidroid.xutils.HttpUtils -> com.a.a.a:
    com.lidroid.xutils.http.HttpCache sHttpCache -> a
    org.apache.http.impl.client.DefaultHttpClient httpClient -> b
    org.apache.http.protocol.HttpContext httpContext -> c
    com.lidroid.xutils.http.callback.HttpRedirectHandler httpRedirectHandler -> d
    java.lang.String responseTextCharset -> e
    long currentRequestExpiry -> f
    com.lidroid.xutils.task.PriorityExecutor EXECUTOR -> g
    com.lidroid.xutils.HttpUtils configTimeout(int) -> a
    com.lidroid.xutils.HttpUtils configSoTimeout(int) -> b
    com.lidroid.xutils.http.HttpHandler send(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,com.lidroid.xutils.http.RequestParams,com.lidroid.xutils.http.callback.RequestCallBack) -> a
    com.lidroid.xutils.http.HttpHandler download(java.lang.String,java.lang.String,com.lidroid.xutils.http.callback.RequestCallBack) -> a
    com.lidroid.xutils.http.HttpHandler download(com.lidroid.xutils.http.client.HttpRequest$HttpMethod,java.lang.String,java.lang.String,com.lidroid.xutils.http.RequestParams,boolean,boolean,com.lidroid.xutils.http.callback.RequestCallBack) -> a
    com.lidroid.xutils.http.HttpHandler sendRequest(com.lidroid.xutils.http.client.HttpRequest,com.lidroid.xutils.http.RequestParams,com.lidroid.xutils.http.callback.RequestCallBack) -> a
com.lidroid.xutils.HttpUtils$1 -> com.a.a.b:
    com.lidroid.xutils.HttpUtils this$0 -> a
    void process(org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext) -> process
com.lidroid.xutils.HttpUtils$2 -> com.a.a.c:
    com.lidroid.xutils.HttpUtils this$0 -> a
    void process(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> process
com.lidroid.xutils.cache.KeyExpiryMap -> com.a.a.a.a:
    java.lang.Long get(java.lang.Object) -> a
    java.lang.Long put(java.lang.Object,java.lang.Long) -> a
    boolean containsKey(java.lang.Object) -> containsKey
    java.lang.Long remove(java.lang.Object) -> b
    void clear() -> clear
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object remove(java.lang.Object) -> remove
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
com.lidroid.xutils.cache.LruMemoryCache -> com.a.a.a.b:
    java.util.LinkedHashMap map -> a
    int size -> b
    int maxSize -> c
    int putCount -> d
    int createCount -> e
    int evictionCount -> f
    int hitCount -> g
    int missCount -> h
    com.lidroid.xutils.cache.KeyExpiryMap keyExpiryMap -> i
    java.lang.Object get(java.lang.Object) -> a
    java.lang.Object put(java.lang.Object,java.lang.Object,long) -> a
    void trimToSize(int) -> a
    java.lang.Object remove(java.lang.Object) -> b
    void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> a
    java.lang.Object create(java.lang.Object) -> c
    int safeSizeOf(java.lang.Object,java.lang.Object) -> b
    int sizeOf(java.lang.Object,java.lang.Object) -> a
    java.lang.String toString() -> toString
com.lidroid.xutils.exception.BaseException -> com.a.a.b.a:
com.lidroid.xutils.exception.HttpException -> com.a.a.b.b:
    int exceptionCode -> a
com.lidroid.xutils.http.HttpCache -> com.a.a.c.a:
    com.lidroid.xutils.cache.LruMemoryCache mMemoryCache -> a
    int cacheSize -> b
    long defaultExpiryTime -> c
    java.util.concurrent.ConcurrentHashMap httpMethod_enabled_map -> d
    long getDefaultExpiryTime() -> a
    void put(java.lang.String,java.lang.String,long) -> a
    java.lang.String get(java.lang.String) -> a
    boolean isEnabled(java.lang.String) -> b
com.lidroid.xutils.http.HttpCache$1 -> com.a.a.c.b:
    com.lidroid.xutils.http.HttpCache this$0 -> a
    int sizeOf(java.lang.String,java.lang.String) -> a
    int sizeOf(java.lang.Object,java.lang.Object) -> a
com.lidroid.xutils.http.HttpHandler -> com.a.a.c.c:
    org.apache.http.impl.client.AbstractHttpClient client -> b
    org.apache.http.protocol.HttpContext context -> c
    com.lidroid.xutils.http.callback.HttpRedirectHandler httpRedirectHandler -> d
    java.lang.String requestUrl -> e
    java.lang.String requestMethod -> f
    org.apache.http.client.methods.HttpRequestBase request -> g
    boolean isUploading -> h
    com.lidroid.xutils.http.callback.RequestCallBack callback -> i
    int retriedCount -> j
    java.lang.String fileSavePath -> k
    boolean isDownloadingFile -> l
    boolean autoResume -> m
    boolean autoRename -> n
    java.lang.String charset -> o
    com.lidroid.xutils.http.HttpHandler$State state -> p
    long expiry -> q
    long lastUpdateTime -> r
    com.lidroid.xutils.http.HttpHandler$NotUseApacheRedirectHandler notUseApacheRedirectHandler -> s
    void setHttpRedirectHandler(com.lidroid.xutils.http.callback.HttpRedirectHandler) -> a
    void setExpiry(long) -> a
    com.lidroid.xutils.http.ResponseInfo sendRequest(org.apache.http.client.methods.HttpRequestBase) -> a
    java.lang.Void doInBackground(java.lang.Object[]) -> a
    void onProgressUpdate(java.lang.Object[]) -> b
    com.lidroid.xutils.http.ResponseInfo handleResponse(org.apache.http.HttpResponse) -> a
    boolean updateProgress(long,long,boolean) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> c
com.lidroid.xutils.http.HttpHandler$NotUseApacheRedirectHandler -> com.a.a.c.d:
    boolean isRedirectRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirectRequested
    java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getLocationURI
com.lidroid.xutils.http.HttpHandler$State -> com.a.a.c.e:
    com.lidroid.xutils.http.HttpHandler$State WAITING -> a
    com.lidroid.xutils.http.HttpHandler$State STARTED -> b
    com.lidroid.xutils.http.HttpHandler$State LOADING -> c
    com.lidroid.xutils.http.HttpHandler$State FAILURE -> d
    com.lidroid.xutils.http.HttpHandler$State CANCELLED -> e
    com.lidroid.xutils.http.HttpHandler$State SUCCESS -> f
    int value -> g
    com.lidroid.xutils.http.HttpHandler$State[] ENUM$VALUES -> h
    com.lidroid.xutils.http.HttpHandler$State[] values() -> values
    com.lidroid.xutils.http.HttpHandler$State valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.http.RequestParams -> com.a.a.c.f:
    java.lang.String charset -> a
    java.util.List headers -> b
    java.util.List queryStringParams -> c
    org.apache.http.HttpEntity bodyEntity -> d
    java.util.List bodyParams -> e
    java.util.HashMap fileParams -> f
    com.lidroid.xutils.task.Priority priority -> g
    com.lidroid.xutils.task.Priority getPriority() -> a
    java.lang.String getCharset() -> b
    void addQueryStringParameter(java.lang.String,java.lang.String) -> a
    org.apache.http.HttpEntity getEntity() -> c
    java.util.List getQueryStringParams() -> d
    java.util.List getHeaders() -> e
com.lidroid.xutils.http.RequestParams$HeaderItem -> com.a.a.c.g:
    boolean overwrite -> a
    org.apache.http.Header header -> b
com.lidroid.xutils.http.ResponseInfo -> com.a.a.c.h:
    org.apache.http.HttpResponse response -> j
    java.lang.Object result -> a
    boolean resultFormCache -> b
    java.util.Locale locale -> c
    int statusCode -> d
    org.apache.http.ProtocolVersion protocolVersion -> e
    java.lang.String reasonPhrase -> f
    long contentLength -> g
    org.apache.http.Header contentType -> h
    org.apache.http.Header contentEncoding -> i
com.lidroid.xutils.http.callback.DefaultHttpRedirectHandler -> com.a.a.c.a.a:
    org.apache.http.client.methods.HttpRequestBase getDirectRequest(org.apache.http.HttpResponse) -> a
com.lidroid.xutils.http.callback.FileDownloadHandler -> com.a.a.c.a.b:
    java.io.File handleEntity(org.apache.http.HttpEntity,com.lidroid.xutils.http.callback.RequestCallBackHandler,java.lang.String,boolean,java.lang.String) -> a
com.lidroid.xutils.http.callback.HttpRedirectHandler -> com.a.a.c.a.c:
    org.apache.http.client.methods.HttpRequestBase getDirectRequest(org.apache.http.HttpResponse) -> a
com.lidroid.xutils.http.callback.RequestCallBack -> com.a.a.c.a.d:
    java.lang.String requestUrl -> a
    int rate -> b
    int getRate() -> a
    void setRequestUrl(java.lang.String) -> a
    void onStart() -> b
    void onLoading(long,long,boolean) -> a
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> a
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> a
com.lidroid.xutils.http.callback.RequestCallBackHandler -> com.a.a.c.a.e:
    boolean updateProgress(long,long,boolean) -> a
com.lidroid.xutils.http.callback.StringDownloadHandler -> com.a.a.c.a.f:
    java.lang.String handleEntity(org.apache.http.HttpEntity,com.lidroid.xutils.http.callback.RequestCallBackHandler,java.lang.String) -> a
com.lidroid.xutils.http.client.DefaultSSLSocketFactory -> com.a.a.c.b.a:
    javax.net.ssl.SSLContext sslContext -> a
    java.security.KeyStore trustStore -> b
    com.lidroid.xutils.http.client.DefaultSSLSocketFactory instance -> c
    com.lidroid.xutils.http.client.DefaultSSLSocketFactory getSocketFactory() -> a
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    java.net.Socket createSocket() -> createSocket
com.lidroid.xutils.http.client.DefaultSSLSocketFactory$1 -> com.a.a.c.b.b:
    com.lidroid.xutils.http.client.DefaultSSLSocketFactory this$0 -> a
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
com.lidroid.xutils.http.client.HttpRequest -> com.a.a.c.b.c:
    org.apache.http.HttpEntity entity -> a
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod method -> b
    com.lidroid.xutils.http.client.util.URIBuilder uriBuilder -> c
    java.nio.charset.Charset uriCharset -> d
    com.lidroid.xutils.http.client.HttpRequest addQueryStringParams(java.util.List) -> a
    void setRequestParams(com.lidroid.xutils.http.RequestParams,com.lidroid.xutils.http.callback.RequestCallBackHandler) -> a
    java.net.URI getURI() -> getURI
    void setURI(java.net.URI) -> setURI
    void setURI(java.lang.String) -> a
    java.lang.String getMethod() -> getMethod
    org.apache.http.HttpEntity getEntity() -> getEntity
    void setEntity(org.apache.http.HttpEntity) -> setEntity
    boolean expectContinue() -> expectContinue
    java.lang.Object clone() -> clone
com.lidroid.xutils.http.client.HttpRequest$HttpMethod -> com.a.a.c.b.d:
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod GET -> a
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod POST -> b
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod PUT -> c
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod HEAD -> d
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod MOVE -> e
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod COPY -> f
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod DELETE -> g
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod OPTIONS -> h
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod TRACE -> i
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod CONNECT -> j
    java.lang.String value -> k
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod[] ENUM$VALUES -> l
    java.lang.String toString() -> toString
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod[] values() -> values
    com.lidroid.xutils.http.client.HttpRequest$HttpMethod valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.http.client.RetryHandler -> com.a.a.c.b.e:
    java.util.HashSet exceptionWhiteList -> a
    java.util.HashSet exceptionBlackList -> b
    int maxRetries -> c
    boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext) -> retryRequest
com.lidroid.xutils.http.client.entity.BodyParamsEntity -> com.a.a.c.b.a.a:
    byte[] content -> a
    boolean dirty -> b
    java.lang.String charset -> c
    java.util.List params -> d
    void refreshContent() -> a
    boolean isRepeatable() -> isRepeatable
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
    boolean isStreaming() -> isStreaming
    java.lang.Object clone() -> clone
com.lidroid.xutils.http.client.entity.DecompressingEntity -> com.a.a.c.b.a.b:
    java.io.InputStream content -> a
    long uncompressedLength -> b
    long uploadedSize -> c
    com.lidroid.xutils.http.callback.RequestCallBackHandler callBackHandler -> d
    java.io.InputStream decorate(java.io.InputStream) -> a
    java.io.InputStream getDecompressingStream() -> a
    java.io.InputStream getContent() -> getContent
    long getContentLength() -> getContentLength
    void writeTo(java.io.OutputStream) -> writeTo
    void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> a
com.lidroid.xutils.http.client.entity.GZipDecompressingEntity -> com.a.a.c.b.a.c:
    java.io.InputStream decorate(java.io.InputStream) -> a
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    long getContentLength() -> getContentLength
    java.io.InputStream getContent() -> getContent
    void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> a
    void writeTo(java.io.OutputStream) -> writeTo
com.lidroid.xutils.http.client.entity.UploadEntity -> com.a.a.c.b.a.d:
    void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> a
com.lidroid.xutils.http.client.multipart.FormBodyPart -> com.a.a.c.b.b.a:
    java.lang.String name -> a
    com.lidroid.xutils.http.client.multipart.MinimalFieldHeader header -> b
    com.lidroid.xutils.http.client.multipart.content.ContentBody body -> c
    java.lang.String getName() -> a
    com.lidroid.xutils.http.client.multipart.content.ContentBody getBody() -> b
    com.lidroid.xutils.http.client.multipart.MinimalFieldHeader getHeader() -> c
    void addField(java.lang.String,java.lang.String) -> a
    void generateContentDisposition(com.lidroid.xutils.http.client.multipart.content.ContentBody) -> a
    void generateContentType(com.lidroid.xutils.http.client.multipart.content.ContentBody) -> b
    void generateTransferEncoding(com.lidroid.xutils.http.client.multipart.content.ContentBody) -> c
com.lidroid.xutils.http.client.multipart.HttpMultipart -> com.a.a.c.b.b.b:
    org.apache.http.util.ByteArrayBuffer FIELD_SEP -> a
    org.apache.http.util.ByteArrayBuffer CR_LF -> b
    org.apache.http.util.ByteArrayBuffer TWO_DASHES -> c
    java.lang.String subType -> d
    java.nio.charset.Charset charset -> e
    java.lang.String boundary -> f
    java.util.List parts -> g
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode mode -> h
    int[] $SWITCH_TABLE$com$lidroid$xutils$http$client$multipart$HttpMultipartMode -> i
    org.apache.http.util.ByteArrayBuffer encode(java.nio.charset.Charset,java.lang.String) -> a
    void writeBytes(org.apache.http.util.ByteArrayBuffer,java.io.OutputStream) -> a
    void writeBytes(java.lang.String,java.nio.charset.Charset,java.io.OutputStream) -> a
    void writeBytes(java.lang.String,java.io.OutputStream) -> a
    void writeField(com.lidroid.xutils.http.client.multipart.MinimalField,java.io.OutputStream) -> a
    void writeField(com.lidroid.xutils.http.client.multipart.MinimalField,java.nio.charset.Charset,java.io.OutputStream) -> a
    java.util.List getBodyParts() -> a
    void addBodyPart(com.lidroid.xutils.http.client.multipart.FormBodyPart) -> a
    java.lang.String getBoundary() -> b
    void doWriteTo(com.lidroid.xutils.http.client.multipart.HttpMultipartMode,java.io.OutputStream,boolean) -> a
    void doWriteTo(com.lidroid.xutils.http.client.multipart.HttpMultipartMode,java.io.OutputStream,com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo,boolean) -> a
    void writeTo(java.io.OutputStream,com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo) -> a
    long getTotalLength() -> c
    int[] $SWITCH_TABLE$com$lidroid$xutils$http$client$multipart$HttpMultipartMode() -> d
com.lidroid.xutils.http.client.multipart.HttpMultipartMode -> com.a.a.c.b.b.c:
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode STRICT -> a
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode BROWSER_COMPATIBLE -> b
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode[] ENUM$VALUES -> c
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode[] values() -> values
    com.lidroid.xutils.http.client.multipart.HttpMultipartMode valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.http.client.multipart.MIME -> com.a.a.c.b.b.d:
    java.nio.charset.Charset DEFAULT_CHARSET -> a
com.lidroid.xutils.http.client.multipart.MinimalField -> com.a.a.c.b.b.e:
    java.lang.String name -> a
    java.lang.String value -> b
    java.lang.String getName() -> a
    java.lang.String getBody() -> b
    java.lang.String toString() -> toString
com.lidroid.xutils.http.client.multipart.MinimalFieldHeader -> com.a.a.c.b.b.f:
    java.util.List fields -> a
    java.util.Map fieldMap -> b
    void addField(com.lidroid.xutils.http.client.multipart.MinimalField) -> a
    com.lidroid.xutils.http.client.multipart.MinimalField getField(java.lang.String) -> a
    java.util.Iterator iterator() -> iterator
    java.lang.String toString() -> toString
com.lidroid.xutils.http.client.multipart.MultipartEntity -> com.a.a.c.b.b.g:
    com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo callBackInfo -> a
    char[] MULTIPART_CHARS -> b
    com.lidroid.xutils.http.client.multipart.HttpMultipart multipart -> c
    org.apache.http.Header contentType -> d
    long length -> e
    boolean dirty -> f
    java.lang.String boundary -> g
    java.nio.charset.Charset charset -> h
    java.lang.String multipartSubtype -> i
    void setCallBackHandler(com.lidroid.xutils.http.callback.RequestCallBackHandler) -> a
    java.lang.String generateContentType(java.lang.String,java.nio.charset.Charset) -> a
    java.lang.String generateBoundary() -> a
    void addPart(com.lidroid.xutils.http.client.multipart.FormBodyPart) -> a
    void addPart(java.lang.String,com.lidroid.xutils.http.client.multipart.content.ContentBody) -> a
    boolean isRepeatable() -> isRepeatable
    boolean isChunked() -> isChunked
    boolean isStreaming() -> isStreaming
    long getContentLength() -> getContentLength
    org.apache.http.Header getContentType() -> getContentType
    org.apache.http.Header getContentEncoding() -> getContentEncoding
    void consumeContent() -> consumeContent
    java.io.InputStream getContent() -> getContent
    void writeTo(java.io.OutputStream) -> writeTo
com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo -> com.a.a.c.b.b.h:
    com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo DEFAULT -> a
    com.lidroid.xutils.http.callback.RequestCallBackHandler callBackHandler -> b
    long totalLength -> c
    long pos -> d
    boolean doCallBack(boolean) -> a
com.lidroid.xutils.http.client.multipart.content.AbstractContentBody -> com.a.a.c.b.b.a.a:
    java.lang.String mimeType -> b
    java.lang.String mediaType -> c
    java.lang.String subType -> d
    com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo callBackInfo -> a
    java.lang.String getMimeType() -> a
    void setCallBackInfo(com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo) -> a
com.lidroid.xutils.http.client.multipart.content.ContentBody -> com.a.a.c.b.b.a.b:
    java.lang.String getFilename() -> b
    void writeTo(java.io.OutputStream) -> a
    void setCallBackInfo(com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo) -> a
com.lidroid.xutils.http.client.multipart.content.ContentDescriptor -> com.a.a.c.b.b.a.c:
    java.lang.String getMimeType() -> a
    java.lang.String getCharset() -> c
    java.lang.String getTransferEncoding() -> d
    long getContentLength() -> e
com.lidroid.xutils.http.client.multipart.content.StringBody -> com.a.a.c.b.b.a.d:
    byte[] content -> b
    java.nio.charset.Charset charset -> c
    void writeTo(java.io.OutputStream) -> a
    java.lang.String getTransferEncoding() -> d
    java.lang.String getCharset() -> c
    long getContentLength() -> e
    java.lang.String getFilename() -> b
com.lidroid.xutils.http.client.util.URIBuilder -> com.a.a.c.b.c.a:
    java.lang.String scheme -> a
    java.lang.String encodedSchemeSpecificPart -> b
    java.lang.String encodedAuthority -> c
    java.lang.String userInfo -> d
    java.lang.String encodedUserInfo -> e
    java.lang.String host -> f
    int port -> g
    java.lang.String path -> h
    java.lang.String encodedPath -> i
    java.lang.String encodedQuery -> j
    java.util.List queryParams -> k
    java.lang.String fragment -> l
    java.lang.String encodedFragment -> m
    void digestURI(java.net.URI) -> a
    java.util.List parseQuery(java.lang.String) -> a
    java.net.URI build(java.nio.charset.Charset) -> a
    java.lang.String buildString(java.nio.charset.Charset) -> b
    java.lang.String encodeUserInfo(java.lang.String,java.nio.charset.Charset) -> a
    java.lang.String encodePath(java.lang.String,java.nio.charset.Charset) -> b
    java.lang.String encodeQuery(java.util.List,java.nio.charset.Charset) -> a
    java.lang.String encodeFragment(java.lang.String,java.nio.charset.Charset) -> c
    com.lidroid.xutils.http.client.util.URIBuilder addParameter(java.lang.String,java.lang.String) -> a
    java.lang.String normalizePath(java.lang.String) -> b
com.lidroid.xutils.http.client.util.URLEncodedUtils -> com.a.a.c.b.c.b:
    char[] DELIM -> a
    java.util.BitSet UNRESERVED -> b
    java.util.BitSet PUNCT -> c
    java.util.BitSet USERINFO -> d
    java.util.BitSet PATHSAFE -> e
    java.util.BitSet FRAGMENT -> f
    java.util.BitSet RESERVED -> g
    java.util.BitSet URLENCODER -> h
    java.util.List parse(java.lang.String) -> a
    java.lang.String format(java.util.List,java.lang.String) -> a
    java.lang.String format(java.lang.Iterable,java.nio.charset.Charset) -> a
    java.lang.String urlencode(java.lang.String,java.nio.charset.Charset,java.util.BitSet,boolean) -> a
    java.lang.String encodeFormFields(java.lang.String,java.lang.String) -> a
    java.lang.String encodeFormFields(java.lang.String,java.nio.charset.Charset) -> d
    java.lang.String encUserInfo(java.lang.String,java.nio.charset.Charset) -> a
    java.lang.String encFragment(java.lang.String,java.nio.charset.Charset) -> b
    java.lang.String encPath(java.lang.String,java.nio.charset.Charset) -> c
com.lidroid.xutils.task.Node -> com.a.a.d.a:
    boolean valueAsT -> b
    com.lidroid.xutils.task.PriorityObject value -> c
    com.lidroid.xutils.task.Node next -> a
    com.lidroid.xutils.task.Priority getPriority() -> a
    java.lang.Object getValue() -> b
    void setValue(java.lang.Object) -> a
com.lidroid.xutils.task.Priority -> com.a.a.d.b:
    com.lidroid.xutils.task.Priority UI_TOP -> a
    com.lidroid.xutils.task.Priority UI_NORMAL -> b
    com.lidroid.xutils.task.Priority UI_LOW -> c
    com.lidroid.xutils.task.Priority DEFAULT -> d
    com.lidroid.xutils.task.Priority BG_TOP -> e
    com.lidroid.xutils.task.Priority BG_NORMAL -> f
    com.lidroid.xutils.task.Priority BG_LOW -> g
    com.lidroid.xutils.task.Priority[] ENUM$VALUES -> h
    com.lidroid.xutils.task.Priority[] values() -> values
    com.lidroid.xutils.task.Priority valueOf(java.lang.String) -> valueOf
com.lidroid.xutils.task.PriorityAsyncTask -> com.a.a.d.c:
    com.lidroid.xutils.task.PriorityAsyncTask$InternalHandler sHandler -> b
    java.util.concurrent.Executor sDefaultExecutor -> a
    com.lidroid.xutils.task.PriorityAsyncTask$WorkerRunnable mWorker -> c
    java.util.concurrent.FutureTask mFuture -> d
    boolean mExecuteInvoked -> e
    java.util.concurrent.atomic.AtomicBoolean mCancelled -> f
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> g
    com.lidroid.xutils.task.Priority priority -> h
    void setPriority(com.lidroid.xutils.task.Priority) -> a
    void postResultIfNotInvoked(java.lang.Object) -> c
    java.lang.Object postResult(java.lang.Object) -> d
    java.lang.Object doInBackground(java.lang.Object[]) -> c
    void onPreExecute() -> a
    void onPostExecute(java.lang.Object) -> a
    void onProgressUpdate(java.lang.Object[]) -> b
    void onCancelled(java.lang.Object) -> b
    void onCancelled() -> b
    boolean isCancelled() -> c
    com.lidroid.xutils.task.PriorityAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> a
    void publishProgress(java.lang.Object[]) -> d
    void finish(java.lang.Object) -> e
    void access$0(com.lidroid.xutils.task.PriorityAsyncTask,java.lang.Object) -> a
    java.util.concurrent.atomic.AtomicBoolean access$1(com.lidroid.xutils.task.PriorityAsyncTask) -> a
    java.lang.Object access$2(com.lidroid.xutils.task.PriorityAsyncTask,java.lang.Object) -> b
    void access$3(com.lidroid.xutils.task.PriorityAsyncTask,java.lang.Object) -> c
com.lidroid.xutils.task.PriorityAsyncTask$1 -> com.a.a.d.d:
    com.lidroid.xutils.task.PriorityAsyncTask this$0 -> a
    java.lang.Object call() -> call
com.lidroid.xutils.task.PriorityAsyncTask$2 -> com.a.a.d.e:
    com.lidroid.xutils.task.PriorityAsyncTask this$0 -> a
    void done() -> done
com.lidroid.xutils.task.PriorityAsyncTask$AsyncTaskResult -> com.a.a.d.f:
    com.lidroid.xutils.task.PriorityAsyncTask mTask -> a
    java.lang.Object[] mData -> b
com.lidroid.xutils.task.PriorityAsyncTask$InternalHandler -> com.a.a.d.g:
    void handleMessage(android.os.Message) -> handleMessage
com.lidroid.xutils.task.PriorityAsyncTask$WorkerRunnable -> com.a.a.d.h:
    java.lang.Object[] mParams -> b
com.lidroid.xutils.task.PriorityExecutor -> com.a.a.d.i:
    java.util.concurrent.ThreadFactory sThreadFactory -> a
    java.util.concurrent.BlockingQueue mPoolWorkQueue -> b
    java.util.concurrent.ThreadPoolExecutor mThreadPoolExecutor -> c
    void execute(java.lang.Runnable) -> execute
com.lidroid.xutils.task.PriorityExecutor$1 -> com.a.a.d.j:
    java.util.concurrent.atomic.AtomicInteger mCount -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.lidroid.xutils.task.PriorityObject -> com.a.a.d.k:
    com.lidroid.xutils.task.Priority priority -> a
    java.lang.Object obj -> b
com.lidroid.xutils.task.PriorityObjectBlockingQueue -> com.a.a.d.l:
    int capacity -> b
    java.util.concurrent.atomic.AtomicInteger count -> c
    com.lidroid.xutils.task.Node head -> a
    com.lidroid.xutils.task.Node last -> d
    java.util.concurrent.locks.ReentrantLock takeLock -> e
    java.util.concurrent.locks.Condition notEmpty -> f
    java.util.concurrent.locks.ReentrantLock putLock -> g
    java.util.concurrent.locks.Condition notFull -> h
    void signalNotEmpty() -> c
    void signalNotFull() -> d
    java.lang.Object opQueue(com.lidroid.xutils.task.Node) -> a
    void _enqueue(com.lidroid.xutils.task.Node) -> b
    java.lang.Object _dequeue() -> e
    void fullyLock() -> a
    void fullyUnlock() -> b
    int size() -> size
    int remainingCapacity() -> remainingCapacity
    void put(java.lang.Object) -> put
    boolean offer(java.lang.Object,long,java.util.concurrent.TimeUnit) -> offer
    boolean offer(java.lang.Object) -> offer
    java.lang.Object take() -> take
    java.lang.Object poll(long,java.util.concurrent.TimeUnit) -> poll
    java.lang.Object poll() -> poll
    java.lang.Object peek() -> peek
    void unlink(com.lidroid.xutils.task.Node,com.lidroid.xutils.task.Node) -> a
    boolean remove(java.lang.Object) -> remove
    boolean contains(java.lang.Object) -> contains
    java.lang.Object[] toArray() -> toArray
    java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    void clear() -> clear
    int drainTo(java.util.Collection) -> drainTo
    int drainTo(java.util.Collection,int) -> drainTo
    java.util.Iterator iterator() -> iterator
com.lidroid.xutils.task.PriorityObjectBlockingQueue$Itr -> com.a.a.d.m:
    com.lidroid.xutils.task.Node current -> b
    com.lidroid.xutils.task.Node lastRet -> c
    java.lang.Object currentElement -> d
    com.lidroid.xutils.task.PriorityObjectBlockingQueue this$0 -> a
    boolean hasNext() -> hasNext
    com.lidroid.xutils.task.Node nextNode(com.lidroid.xutils.task.Node) -> a
    java.lang.Object next() -> next
    void remove() -> remove
com.lidroid.xutils.task.PriorityRunnable -> com.a.a.d.n:
    void run() -> run
com.lidroid.xutils.util.CharsetUtils -> com.a.a.e.a:
    java.util.List SUPPORT_CHARSET -> a
    java.lang.String toCharset(java.lang.String,java.lang.String,int) -> a
    java.lang.String getEncoding(java.lang.String,int) -> a
    boolean isCharset(java.lang.String,java.lang.String,int) -> b
com.lidroid.xutils.util.IOUtils -> com.a.a.e.b:
    void closeQuietly(java.io.Closeable) -> a
com.lidroid.xutils.util.LogUtils -> com.a.a.e.c:
    java.lang.String customTagPrefix -> a
    boolean allowD -> b
    boolean allowE -> c
    boolean allowI -> d
    boolean allowV -> e
    boolean allowW -> f
    boolean allowWtf -> g
    com.lidroid.xutils.util.LogUtils$CustomLogger customLogger -> h
    java.lang.String generateTag(java.lang.StackTraceElement) -> a
    void d(java.lang.String) -> a
    void e(java.lang.String) -> b
    void e(java.lang.String,java.lang.Throwable) -> a
    void w(java.lang.Throwable) -> a
com.lidroid.xutils.util.LogUtils$CustomLogger -> com.a.a.e.d:
    void d(java.lang.String,java.lang.String) -> a
    void e(java.lang.String,java.lang.String) -> b
    void e(java.lang.String,java.lang.String,java.lang.Throwable) -> a
    void w(java.lang.String,java.lang.Throwable) -> a
com.lidroid.xutils.util.OtherUtils -> com.a.a.e.e:
    java.lang.String getUserAgent(android.content.Context) -> a
    boolean isSupportRange(org.apache.http.HttpResponse) -> a
    java.lang.String getFileNameFromHttpResponse(org.apache.http.HttpResponse) -> b
    java.nio.charset.Charset getCharsetFromHttpRequest(org.apache.http.client.methods.HttpRequestBase) -> a
    long sizeOfString(java.lang.String,java.lang.String) -> a
    java.lang.String getSubString(java.lang.String,int,int) -> a
    java.lang.StackTraceElement getCallerStackTraceElement() -> a
com.nineoldandroids.animation.Animator -> com.b.a.a:
    java.util.ArrayList mListeners -> a
    void start() -> a
    com.nineoldandroids.animation.Animator setDuration(long) -> a
    void addListener(com.nineoldandroids.animation.Animator$AnimatorListener) -> a
    void removeListener(com.nineoldandroids.animation.Animator$AnimatorListener) -> b
    java.util.ArrayList getListeners() -> b
    com.nineoldandroids.animation.Animator clone() -> c
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.Animator$AnimatorListener -> com.b.a.b:
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> a
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> b
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> c
com.nineoldandroids.animation.AnimatorListenerAdapter -> com.b.a.c:
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> b
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> c
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> a
com.nineoldandroids.animation.AnimatorSet -> com.b.a.d:
    java.util.ArrayList mPlayingSet -> c
    java.util.HashMap mNodeMap -> d
    java.util.ArrayList mNodes -> e
    java.util.ArrayList mSortedNodes -> f
    boolean mNeedsSort -> g
    com.nineoldandroids.animation.AnimatorSet$AnimatorSetListener mSetListener -> h
    boolean mTerminated -> b
    boolean mStarted -> i
    long mStartDelay -> j
    com.nineoldandroids.animation.ValueAnimator mDelayAnim -> k
    long mDuration -> l
    void playTogether(com.nineoldandroids.animation.Animator[]) -> a
    com.nineoldandroids.animation.AnimatorSet$Builder play(com.nineoldandroids.animation.Animator) -> a
    com.nineoldandroids.animation.AnimatorSet setDuration(long) -> b
    void start() -> a
    com.nineoldandroids.animation.AnimatorSet clone() -> d
    void sortNodes() -> e
    com.nineoldandroids.animation.Animator clone() -> c
    com.nineoldandroids.animation.Animator setDuration(long) -> a
    java.lang.Object clone() -> clone
    java.util.ArrayList access$000(com.nineoldandroids.animation.AnimatorSet) -> a
    java.util.HashMap access$100(com.nineoldandroids.animation.AnimatorSet) -> b
    java.util.ArrayList access$200(com.nineoldandroids.animation.AnimatorSet) -> c
    boolean access$302(com.nineoldandroids.animation.AnimatorSet,boolean) -> a
    java.util.ArrayList access$400(com.nineoldandroids.animation.AnimatorSet) -> d
com.nineoldandroids.animation.AnimatorSet$1 -> com.b.a.e:
    boolean canceled -> a
    java.util.ArrayList val$nodesToStart -> b
    com.nineoldandroids.animation.AnimatorSet this$0 -> c
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> b
com.nineoldandroids.animation.AnimatorSet$AnimatorSetListener -> com.b.a.f:
    com.nineoldandroids.animation.AnimatorSet mAnimatorSet -> b
    com.nineoldandroids.animation.AnimatorSet this$0 -> a
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> b
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> c
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> a
com.nineoldandroids.animation.AnimatorSet$Builder -> com.b.a.g:
    com.nineoldandroids.animation.AnimatorSet$Node mCurrentNode -> b
    com.nineoldandroids.animation.AnimatorSet this$0 -> a
    com.nineoldandroids.animation.AnimatorSet$Builder with(com.nineoldandroids.animation.Animator) -> a
com.nineoldandroids.animation.AnimatorSet$Dependency -> com.b.a.h:
    com.nineoldandroids.animation.AnimatorSet$Node node -> a
    int rule -> b
com.nineoldandroids.animation.AnimatorSet$DependencyListener -> com.b.a.i:
    com.nineoldandroids.animation.AnimatorSet mAnimatorSet -> a
    com.nineoldandroids.animation.AnimatorSet$Node mNode -> b
    int mRule -> c
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> b
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> c
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> a
    void startIfReady(com.nineoldandroids.animation.Animator) -> d
com.nineoldandroids.animation.AnimatorSet$Node -> com.b.a.j:
    com.nineoldandroids.animation.Animator animation -> a
    java.util.ArrayList dependencies -> b
    java.util.ArrayList tmpDependencies -> c
    java.util.ArrayList nodeDependencies -> d
    java.util.ArrayList nodeDependents -> e
    boolean done -> f
    void addDependency(com.nineoldandroids.animation.AnimatorSet$Dependency) -> a
    com.nineoldandroids.animation.AnimatorSet$Node clone() -> a
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.FloatEvaluator -> com.b.a.k:
    java.lang.Float evaluate(float,java.lang.Number,java.lang.Number) -> a
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> a
com.nineoldandroids.animation.FloatKeyframeSet -> com.b.a.l:
    float firstValue -> g
    float lastValue -> h
    float deltaValue -> i
    boolean firstTime -> j
    java.lang.Object getValue(float) -> a
    com.nineoldandroids.animation.FloatKeyframeSet clone() -> a
    float getFloatValue(float) -> b
    com.nineoldandroids.animation.KeyframeSet clone() -> b
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.IntEvaluator -> com.b.a.m:
    java.lang.Integer evaluate(float,java.lang.Integer,java.lang.Integer) -> a
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> a
com.nineoldandroids.animation.Keyframe -> com.b.a.n:
    float mFraction -> a
    java.lang.Class mValueType -> b
    android.view.animation.Interpolator mInterpolator -> d
    boolean mHasValue -> c
    com.nineoldandroids.animation.Keyframe ofFloat(float,float) -> a
    com.nineoldandroids.animation.Keyframe ofFloat(float) -> a
    boolean hasValue() -> a
    java.lang.Object getValue() -> b
    void setValue(java.lang.Object) -> a
    float getFraction() -> c
    android.view.animation.Interpolator getInterpolator() -> d
    void setInterpolator(android.view.animation.Interpolator) -> a
    com.nineoldandroids.animation.Keyframe clone() -> e
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.Keyframe$FloatKeyframe -> com.b.a.o:
    float mValue -> d
    float getFloatValue() -> f
    java.lang.Object getValue() -> b
    void setValue(java.lang.Object) -> a
    com.nineoldandroids.animation.Keyframe$FloatKeyframe clone() -> g
    com.nineoldandroids.animation.Keyframe clone() -> e
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.KeyframeSet -> com.b.a.p:
    int mNumKeyframes -> a
    com.nineoldandroids.animation.Keyframe mFirstKeyframe -> b
    com.nineoldandroids.animation.Keyframe mLastKeyframe -> c
    android.view.animation.Interpolator mInterpolator -> d
    java.util.ArrayList mKeyframes -> e
    com.nineoldandroids.animation.TypeEvaluator mEvaluator -> f
    com.nineoldandroids.animation.KeyframeSet ofFloat(float[]) -> a
    void setEvaluator(com.nineoldandroids.animation.TypeEvaluator) -> a
    com.nineoldandroids.animation.KeyframeSet clone() -> b
    java.lang.Object getValue(float) -> a
    java.lang.String toString() -> toString
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.ObjectAnimator -> com.b.a.q:
    java.util.Map PROXY_PROPERTIES -> h
    java.lang.Object mTarget -> i
    java.lang.String mPropertyName -> j
    com.nineoldandroids.util.Property mProperty -> k
    void setPropertyName(java.lang.String) -> a
    void setProperty(com.nineoldandroids.util.Property) -> a
    com.nineoldandroids.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[]) -> a
    void setFloatValues(float[]) -> a
    void start() -> a
    void initAnimation() -> d
    com.nineoldandroids.animation.ObjectAnimator setDuration(long) -> b
    void animateValue(float) -> a
    com.nineoldandroids.animation.ObjectAnimator clone() -> e
    java.lang.String toString() -> toString
    com.nineoldandroids.animation.ValueAnimator clone() -> f
    com.nineoldandroids.animation.ValueAnimator setDuration(long) -> c
    com.nineoldandroids.animation.Animator clone() -> c
    com.nineoldandroids.animation.Animator setDuration(long) -> a
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.PreHoneycombCompat -> com.b.a.r:
    com.nineoldandroids.util.Property ALPHA -> a
    com.nineoldandroids.util.Property PIVOT_X -> b
    com.nineoldandroids.util.Property PIVOT_Y -> c
    com.nineoldandroids.util.Property TRANSLATION_X -> d
    com.nineoldandroids.util.Property TRANSLATION_Y -> e
    com.nineoldandroids.util.Property ROTATION -> f
    com.nineoldandroids.util.Property ROTATION_X -> g
    com.nineoldandroids.util.Property ROTATION_Y -> h
    com.nineoldandroids.util.Property SCALE_X -> i
    com.nineoldandroids.util.Property SCALE_Y -> j
    com.nineoldandroids.util.Property SCROLL_X -> k
    com.nineoldandroids.util.Property SCROLL_Y -> l
    com.nineoldandroids.util.Property X -> m
    com.nineoldandroids.util.Property Y -> n
com.nineoldandroids.animation.PreHoneycombCompat$1 -> com.b.a.s:
    void setValue(android.view.View,float) -> a
    java.lang.Float get(android.view.View) -> a
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$10 -> com.b.a.t:
    void setValue(android.view.View,float) -> a
    java.lang.Float get(android.view.View) -> a
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$11 -> com.b.a.u:
    java.lang.Integer get(android.view.View) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$12 -> com.b.a.v:
    java.lang.Integer get(android.view.View) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$13 -> com.b.a.w:
    void setValue(android.view.View,float) -> a
    java.lang.Float get(android.view.View) -> a
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$14 -> com.b.a.x:
    void setValue(android.view.View,float) -> a
    java.lang.Float get(android.view.View) -> a
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$2 -> com.b.a.y:
    void setValue(android.view.View,float) -> a
    java.lang.Float get(android.view.View) -> a
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$3 -> com.b.a.z:
    void setValue(android.view.View,float) -> a
    java.lang.Float get(android.view.View) -> a
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$4 -> com.b.a.aa:
    void setValue(android.view.View,float) -> a
    java.lang.Float get(android.view.View) -> a
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$5 -> com.b.a.ab:
    void setValue(android.view.View,float) -> a
    java.lang.Float get(android.view.View) -> a
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$6 -> com.b.a.ac:
    void setValue(android.view.View,float) -> a
    java.lang.Float get(android.view.View) -> a
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$7 -> com.b.a.ad:
    void setValue(android.view.View,float) -> a
    java.lang.Float get(android.view.View) -> a
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$8 -> com.b.a.ae:
    void setValue(android.view.View,float) -> a
    java.lang.Float get(android.view.View) -> a
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PreHoneycombCompat$9 -> com.b.a.af:
    void setValue(android.view.View,float) -> a
    java.lang.Float get(android.view.View) -> a
    void setValue(java.lang.Object,float) -> a
    java.lang.Object get(java.lang.Object) -> a
com.nineoldandroids.animation.PropertyValuesHolder -> com.b.a.ag:
    java.lang.String mPropertyName -> a
    com.nineoldandroids.util.Property mProperty -> b
    java.lang.reflect.Method mSetter -> c
    java.lang.reflect.Method mGetter -> h
    java.lang.Class mValueType -> d
    com.nineoldandroids.animation.KeyframeSet mKeyframeSet -> e
    com.nineoldandroids.animation.TypeEvaluator sIntEvaluator -> i
    com.nineoldandroids.animation.TypeEvaluator sFloatEvaluator -> j
    java.lang.Class[] FLOAT_VARIANTS -> k
    java.lang.Class[] INTEGER_VARIANTS -> l
    java.lang.Class[] DOUBLE_VARIANTS -> m
    java.util.HashMap sSetterPropertyMap -> n
    java.util.HashMap sGetterPropertyMap -> o
    java.util.concurrent.locks.ReentrantReadWriteLock mPropertyMapLock -> f
    java.lang.Object[] mTmpValueArray -> g
    com.nineoldandroids.animation.TypeEvaluator mEvaluator -> p
    java.lang.Object mAnimatedValue -> q
    com.nineoldandroids.animation.PropertyValuesHolder ofFloat(java.lang.String,float[]) -> a
    com.nineoldandroids.animation.PropertyValuesHolder ofFloat(com.nineoldandroids.util.Property,float[]) -> a
    void setFloatValues(float[]) -> a
    java.lang.reflect.Method getPropertyFunction(java.lang.Class,java.lang.String,java.lang.Class) -> a
    java.lang.reflect.Method setupSetterOrGetter(java.lang.Class,java.util.HashMap,java.lang.String,java.lang.Class) -> a
    void setupSetter(java.lang.Class) -> a
    void setupGetter(java.lang.Class) -> b
    void setupSetterAndGetter(java.lang.Object) -> a
    com.nineoldandroids.animation.PropertyValuesHolder clone() -> a
    void setAnimatedValue(java.lang.Object) -> b
    void init() -> b
    void calculateValue(float) -> a
    void setPropertyName(java.lang.String) -> a
    void setProperty(com.nineoldandroids.util.Property) -> a
    java.lang.String getPropertyName() -> c
    java.lang.Object getAnimatedValue() -> d
    java.lang.String toString() -> toString
    java.lang.String getMethodName(java.lang.String,java.lang.String) -> a
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.PropertyValuesHolder$1 -> com.b.a.ah:
com.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder -> com.b.a.ai:
    com.nineoldandroids.util.FloatProperty mFloatProperty -> j
    com.nineoldandroids.animation.FloatKeyframeSet mFloatKeyframeSet -> h
    float mFloatAnimatedValue -> i
    void setFloatValues(float[]) -> a
    void calculateValue(float) -> a
    java.lang.Object getAnimatedValue() -> d
    com.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder clone() -> e
    void setAnimatedValue(java.lang.Object) -> b
    void setupSetter(java.lang.Class) -> a
    com.nineoldandroids.animation.PropertyValuesHolder clone() -> a
    java.lang.Object clone() -> clone
com.nineoldandroids.animation.TypeEvaluator -> com.b.a.aj:
    java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> a
com.nineoldandroids.animation.ValueAnimator -> com.b.a.ak:
    long mStartTime -> b
    long mSeekTime -> c
    java.lang.ThreadLocal sAnimationHandler -> h
    java.lang.ThreadLocal sAnimations -> i
    java.lang.ThreadLocal sPendingAnimations -> j
    java.lang.ThreadLocal sDelayedAnims -> k
    java.lang.ThreadLocal sEndingAnims -> l
    java.lang.ThreadLocal sReadyAnims -> m
    android.view.animation.Interpolator sDefaultInterpolator -> n
    com.nineoldandroids.animation.TypeEvaluator sIntEvaluator -> o
    com.nineoldandroids.animation.TypeEvaluator sFloatEvaluator -> p
    boolean mPlayingBackwards -> q
    int mCurrentIteration -> r
    float mCurrentFraction -> s
    boolean mStartedDelay -> t
    long mDelayStartTime -> u
    int mPlayingState -> d
    boolean mRunning -> v
    boolean mStarted -> w
    boolean mInitialized -> e
    long mDuration -> x
    long mStartDelay -> y
    long sFrameDelay -> z
    int mRepeatCount -> A
    int mRepeatMode -> B
    android.view.animation.Interpolator mInterpolator -> C
    java.util.ArrayList mUpdateListeners -> D
    com.nineoldandroids.animation.PropertyValuesHolder[] mValues -> f
    java.util.HashMap mValuesMap -> g
    com.nineoldandroids.animation.ValueAnimator ofFloat(float[]) -> b
    void setFloatValues(float[]) -> a
    void setValues(com.nineoldandroids.animation.PropertyValuesHolder[]) -> a
    void initAnimation() -> d
    com.nineoldandroids.animation.ValueAnimator setDuration(long) -> c
    void setCurrentPlayTime(long) -> d
    long getCurrentPlayTime() -> g
    void setRepeatCount(int) -> a
    void setRepeatMode(int) -> b
    void start(boolean) -> a
    void start() -> a
    void endAnimation() -> e
    void startAnimation() -> n
    boolean delayedAnimationFrame(long) -> b
    boolean animationFrame(long) -> e
    void animateValue(float) -> a
    com.nineoldandroids.animation.ValueAnimator clone() -> f
    java.lang.String toString() -> toString
    com.nineoldandroids.animation.Animator clone() -> c
    com.nineoldandroids.animation.Animator setDuration(long) -> a
    java.lang.Object clone() -> clone
    java.lang.ThreadLocal access$000() -> h
    java.lang.ThreadLocal access$100() -> i
    java.lang.ThreadLocal access$200() -> j
    long access$300(com.nineoldandroids.animation.ValueAnimator) -> a
    void access$400(com.nineoldandroids.animation.ValueAnimator) -> b
    java.lang.ThreadLocal access$500() -> k
    java.lang.ThreadLocal access$600() -> l
    boolean access$700(com.nineoldandroids.animation.ValueAnimator,long) -> a
    boolean access$802(com.nineoldandroids.animation.ValueAnimator,boolean) -> a
    void access$900(com.nineoldandroids.animation.ValueAnimator) -> c
    long access$1000() -> m
com.nineoldandroids.animation.ValueAnimator$1 -> com.b.a.al:
    java.util.ArrayList initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.nineoldandroids.animation.ValueAnimator$2 -> com.b.a.am:
    java.util.ArrayList initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.nineoldandroids.animation.ValueAnimator$3 -> com.b.a.an:
    java.util.ArrayList initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.nineoldandroids.animation.ValueAnimator$4 -> com.b.a.ao:
    java.util.ArrayList initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.nineoldandroids.animation.ValueAnimator$5 -> com.b.a.ap:
    java.util.ArrayList initialValue() -> a
    java.lang.Object initialValue() -> initialValue
com.nineoldandroids.animation.ValueAnimator$AnimationHandler -> com.b.a.aq:
    void handleMessage(android.os.Message) -> handleMessage
com.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener -> com.b.a.ar:
    void onAnimationUpdate(com.nineoldandroids.animation.ValueAnimator) -> a
com.nineoldandroids.util.FloatProperty -> com.b.b.a:
    void setValue(java.lang.Object,float) -> a
    void set(java.lang.Object,java.lang.Float) -> a
    void set(java.lang.Object,java.lang.Object) -> a
com.nineoldandroids.util.IntProperty -> com.b.b.b:
    void set(java.lang.Object,java.lang.Integer) -> a
    void set(java.lang.Object,java.lang.Object) -> a
com.nineoldandroids.util.Property -> com.b.b.c:
    java.lang.String mName -> a
    java.lang.Class mType -> b
    void set(java.lang.Object,java.lang.Object) -> a
    java.lang.Object get(java.lang.Object) -> a
    java.lang.String getName() -> a
com.nineoldandroids.view.animation.AnimatorProxy -> com.b.c.a.a:
    boolean NEEDS_PROXY -> a
    java.util.WeakHashMap PROXIES -> b
    java.lang.ref.WeakReference mView -> c
    android.graphics.Camera mCamera -> d
    boolean mHasPivot -> e
    float mAlpha -> f
    float mPivotX -> g
    float mPivotY -> h
    float mRotationX -> i
    float mRotationY -> j
    float mRotationZ -> k
    float mScaleX -> l
    float mScaleY -> m
    float mTranslationX -> n
    float mTranslationY -> o
    android.graphics.RectF mBefore -> p
    android.graphics.RectF mAfter -> q
    android.graphics.Matrix mTempMatrix -> r
    com.nineoldandroids.view.animation.AnimatorProxy wrap(android.view.View) -> a
    float getAlpha() -> a
    void setAlpha(float) -> a
    float getPivotX() -> b
    void setPivotX(float) -> b
    float getPivotY() -> c
    void setPivotY(float) -> c
    float getRotation() -> d
    void setRotation(float) -> d
    float getRotationX() -> e
    void setRotationX(float) -> e
    float getRotationY() -> f
    void setRotationY(float) -> f
    float getScaleX() -> g
    void setScaleX(float) -> g
    float getScaleY() -> h
    void setScaleY(float) -> h
    int getScrollX() -> i
    int getScrollY() -> j
    float getTranslationX() -> k
    void setTranslationX(float) -> i
    float getTranslationY() -> l
    void setTranslationY(float) -> j
    float getX() -> m
    void setX(float) -> k
    float getY() -> n
    void setY(float) -> l
    void prepareForUpdate() -> o
    void invalidateAfterUpdate() -> p
    void computeRect(android.graphics.RectF,android.view.View) -> a
    void transformMatrix(android.graphics.Matrix,android.view.View) -> a
    void applyTransformation(float,android.view.animation.Transformation) -> applyTransformation
org.acra.ACRA -> org.acra.ACRA:
    boolean DEV_LOGGING -> DEV_LOGGING
    java.lang.String LOG_TAG -> LOG_TAG
    org.acra.log.ACRALog log -> log
    java.lang.String PREF_DISABLE_ACRA -> PREF_DISABLE_ACRA
    java.lang.String PREF_ENABLE_ACRA -> PREF_ENABLE_ACRA
    java.lang.String PREF_ENABLE_SYSTEM_LOGS -> PREF_ENABLE_SYSTEM_LOGS
    java.lang.String PREF_ENABLE_DEVICE_ID -> PREF_ENABLE_DEVICE_ID
    java.lang.String PREF_USER_EMAIL_ADDRESS -> PREF_USER_EMAIL_ADDRESS
    java.lang.String PREF_ALWAYS_ACCEPT -> PREF_ALWAYS_ACCEPT
    java.lang.String PREF_LAST_VERSION_NR -> PREF_LAST_VERSION_NR
    android.app.Application mApplication -> mApplication
    org.acra.ErrorReporter errorReporterSingleton -> errorReporterSingleton
    android.content.SharedPreferences$OnSharedPreferenceChangeListener mPrefListener -> mPrefListener
    org.acra.ACRAConfiguration configProxy -> configProxy
    void init(android.app.Application) -> init
    void init(android.app.Application,org.acra.ACRAConfiguration) -> init
    void init(android.app.Application,org.acra.ACRAConfiguration,boolean) -> init
    org.acra.ErrorReporter getErrorReporter() -> getErrorReporter
    boolean shouldDisableACRA(android.content.SharedPreferences) -> shouldDisableACRA
    void checkCrashResources(org.acra.annotation.ReportsCrashes) -> checkCrashResources
    android.content.SharedPreferences getACRASharedPreferences() -> getACRASharedPreferences
    org.acra.ACRAConfiguration getConfig() -> getConfig
    void setConfig(org.acra.ACRAConfiguration) -> setConfig
    org.acra.ACRAConfiguration getNewDefaultConfig(android.app.Application) -> getNewDefaultConfig
    boolean isDebuggable() -> isDebuggable
    android.app.Application getApplication() -> getApplication
    void setLog(org.acra.log.ACRALog) -> setLog
    boolean access$000(android.content.SharedPreferences) -> access$000
org.acra.ACRA$1 -> org.acra.ACRA$1:
    void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String) -> onSharedPreferenceChanged
org.acra.ACRA$2 -> org.acra.ACRA$2:
    int[] $SwitchMap$org$acra$ReportingInteractionMode -> $SwitchMap$org$acra$ReportingInteractionMode
org.acra.ACRAConfiguration -> org.acra.ACRAConfiguration:
    org.acra.util.ReflectionHelper reflectionHelper -> reflectionHelper
    java.lang.String[] mAdditionalDropboxTags -> mAdditionalDropboxTags
    java.lang.String[] mAdditionalSharedPreferences -> mAdditionalSharedPreferences
    java.lang.Integer mConnectionTimeout -> mConnectionTimeout
    org.acra.ReportField[] mCustomReportContent -> mCustomReportContent
    java.lang.Boolean mDeleteUnapprovedReportsOnApplicationStart -> mDeleteUnapprovedReportsOnApplicationStart
    java.lang.Boolean mDeleteOldUnsentReportsOnApplicationStart -> mDeleteOldUnsentReportsOnApplicationStart
    java.lang.Integer mDropboxCollectionMinutes -> mDropboxCollectionMinutes
    java.lang.Boolean mForceCloseDialogAfterToast -> mForceCloseDialogAfterToast
    java.lang.String mFormUri -> mFormUri
    java.lang.String mFormUriBasicAuthLogin -> mFormUriBasicAuthLogin
    java.lang.String mFormUriBasicAuthPassword -> mFormUriBasicAuthPassword
    java.lang.Boolean mIncludeDropboxSystemTags -> mIncludeDropboxSystemTags
    java.lang.String[] mLogcatArguments -> mLogcatArguments
    java.lang.String mMailTo -> mMailTo
    java.lang.Integer mMaxNumberOfRequestRetries -> mMaxNumberOfRequestRetries
    org.acra.ReportingInteractionMode mMode -> mMode
    org.acra.annotation.ReportsCrashes mReportsCrashes -> mReportsCrashes
    java.lang.Class mReportDialogClass -> mReportDialogClass
    java.lang.Integer mResDialogPositiveButtonText -> mResDialogPositiveButtonText
    java.lang.Integer mResDialogNegativeButtonText -> mResDialogNegativeButtonText
    java.lang.Integer mResDialogCommentPrompt -> mResDialogCommentPrompt
    java.lang.Integer mResDialogEmailPrompt -> mResDialogEmailPrompt
    java.lang.Integer mResDialogIcon -> mResDialogIcon
    java.lang.Integer mResDialogOkToast -> mResDialogOkToast
    java.lang.Integer mResDialogText -> mResDialogText
    java.lang.Integer mResDialogTitle -> mResDialogTitle
    java.lang.Integer mResNotifIcon -> mResNotifIcon
    java.lang.Integer mResNotifText -> mResNotifText
    java.lang.Integer mResNotifTickerText -> mResNotifTickerText
    java.lang.Integer mResNotifTitle -> mResNotifTitle
    java.lang.Integer mResToastText -> mResToastText
    java.lang.Integer mSharedPreferenceMode -> mSharedPreferenceMode
    java.lang.String mSharedPreferenceName -> mSharedPreferenceName
    java.lang.Integer mSocketTimeout -> mSocketTimeout
    java.lang.Boolean mLogcatFilterByPid -> mLogcatFilterByPid
    java.lang.Boolean mSendReportsInDevMode -> mSendReportsInDevMode
    java.lang.Boolean mSendReportsAtShutdown -> mSendReportsAtShutdown
    java.lang.String[] mExcludeMatchingSharedPreferencesKeys -> mExcludeMatchingSharedPreferencesKeys
    java.lang.String[] mExcludeMatchingSettingsKeys -> mExcludeMatchingSettingsKeys
    java.lang.Class mBuildConfigClass -> mBuildConfigClass
    java.lang.String mApplicationLogFile -> mApplicationLogFile
    java.lang.Integer mApplicationLogFileLines -> mApplicationLogFileLines
    java.lang.Boolean mDisableSSLCertValidation -> mDisableSSLCertValidation
    java.lang.String mHttpsSocketFactoryFactoryClass -> mHttpsSocketFactoryFactoryClass
    org.acra.util.HttpsSocketFactoryFactory mHttpsSocketFactoryFactory -> mHttpsSocketFactoryFactory
    org.acra.sender.HttpSender$Method mHttpMethod -> mHttpMethod
    org.acra.sender.HttpSender$Type mReportType -> mReportType
    java.util.Map mHttpHeaders -> mHttpHeaders
    java.security.KeyStore mKeyStore -> mKeyStore
    org.acra.ACRAConfiguration setHttpHeaders(java.util.Map) -> setHttpHeaders
    java.util.Map getHttpHeaders() -> getHttpHeaders
    java.util.List getReportFields() -> getReportFields
    org.acra.ACRAConfiguration setAdditionalDropboxTags(java.lang.String[]) -> setAdditionalDropboxTags
    org.acra.ACRAConfiguration setAdditionalSharedPreferences(java.lang.String[]) -> setAdditionalSharedPreferences
    org.acra.ACRAConfiguration setConnectionTimeout(java.lang.Integer) -> setConnectionTimeout
    org.acra.ACRAConfiguration setCustomReportContent(org.acra.ReportField[]) -> setCustomReportContent
    org.acra.ACRAConfiguration setDeleteUnapprovedReportsOnApplicationStart(java.lang.Boolean) -> setDeleteUnapprovedReportsOnApplicationStart
    org.acra.ACRAConfiguration setDeleteOldUnsentReportsOnApplicationStart(java.lang.Boolean) -> setDeleteOldUnsentReportsOnApplicationStart
    org.acra.ACRAConfiguration setDropboxCollectionMinutes(java.lang.Integer) -> setDropboxCollectionMinutes
    org.acra.ACRAConfiguration setForceCloseDialogAfterToast(java.lang.Boolean) -> setForceCloseDialogAfterToast
    org.acra.ACRAConfiguration setFormUri(java.lang.String) -> setFormUri
    org.acra.ACRAConfiguration setFormUriBasicAuthLogin(java.lang.String) -> setFormUriBasicAuthLogin
    org.acra.ACRAConfiguration setFormUriBasicAuthPassword(java.lang.String) -> setFormUriBasicAuthPassword
    org.acra.ACRAConfiguration setIncludeDropboxSystemTags(java.lang.Boolean) -> setIncludeDropboxSystemTags
    org.acra.ACRAConfiguration setLogcatArguments(java.lang.String[]) -> setLogcatArguments
    org.acra.ACRAConfiguration setMailTo(java.lang.String) -> setMailTo
    org.acra.ACRAConfiguration setMaxNumberOfRequestRetries(java.lang.Integer) -> setMaxNumberOfRequestRetries
    org.acra.ACRAConfiguration setMode(org.acra.ReportingInteractionMode) -> setMode
    org.acra.ACRAConfiguration setResDialogPositiveButtonText(int) -> setResDialogPositiveButtonText
    org.acra.ACRAConfiguration setResDialogNegativeButtonText(int) -> setResDialogNegativeButtonText
    org.acra.ACRAConfiguration setReportDialogClass(java.lang.Class) -> setReportDialogClass
    org.acra.ACRAConfiguration setResDialogCommentPrompt(int) -> setResDialogCommentPrompt
    org.acra.ACRAConfiguration setResDialogEmailPrompt(int) -> setResDialogEmailPrompt
    org.acra.ACRAConfiguration setResDialogIcon(int) -> setResDialogIcon
    org.acra.ACRAConfiguration setResDialogOkToast(int) -> setResDialogOkToast
    org.acra.ACRAConfiguration setResDialogText(int) -> setResDialogText
    org.acra.ACRAConfiguration setResDialogTitle(int) -> setResDialogTitle
    org.acra.ACRAConfiguration setResNotifIcon(int) -> setResNotifIcon
    org.acra.ACRAConfiguration setResNotifText(int) -> setResNotifText
    org.acra.ACRAConfiguration setResNotifTickerText(int) -> setResNotifTickerText
    org.acra.ACRAConfiguration setResNotifTitle(int) -> setResNotifTitle
    org.acra.ACRAConfiguration setResToastText(int) -> setResToastText
    org.acra.ACRAConfiguration setSharedPreferenceMode(java.lang.Integer) -> setSharedPreferenceMode
    org.acra.ACRAConfiguration setSharedPreferenceName(java.lang.String) -> setSharedPreferenceName
    org.acra.ACRAConfiguration setSocketTimeout(java.lang.Integer) -> setSocketTimeout
    org.acra.ACRAConfiguration setLogcatFilterByPid(java.lang.Boolean) -> setLogcatFilterByPid
    org.acra.ACRAConfiguration setSendReportsInDevMode(java.lang.Boolean) -> setSendReportsInDevMode
    org.acra.ACRAConfiguration setSendReportsAtShutdown(java.lang.Boolean) -> setSendReportsAtShutdown
    org.acra.ACRAConfiguration setExcludeMatchingSharedPreferencesKeys(java.lang.String[]) -> setExcludeMatchingSharedPreferencesKeys
    org.acra.ACRAConfiguration setExcludeMatchingSettingsKeys(java.lang.String[]) -> setExcludeMatchingSettingsKeys
    org.acra.ACRAConfiguration setBuildConfigClass(java.lang.Class) -> setBuildConfigClass
    org.acra.ACRAConfiguration setApplicationLogFile(java.lang.String) -> setApplicationLogFile
    org.acra.ACRAConfiguration setApplicationLogFileLines(int) -> setApplicationLogFileLines
    org.acra.ACRAConfiguration setDisableSSLCertValidation(boolean) -> setDisableSSLCertValidation
    org.acra.ACRAConfiguration setHttpMethod(org.acra.sender.HttpSender$Method) -> setHttpMethod
    org.acra.ACRAConfiguration setReportType(org.acra.sender.HttpSender$Type) -> setReportType
    void setKeyStore(java.security.KeyStore) -> setKeyStore
    java.lang.String[] additionalDropBoxTags() -> additionalDropBoxTags
    java.lang.String[] additionalSharedPreferences() -> additionalSharedPreferences
    java.lang.Class annotationType() -> annotationType
    int connectionTimeout() -> connectionTimeout
    org.acra.ReportField[] customReportContent() -> customReportContent
    boolean deleteUnapprovedReportsOnApplicationStart() -> deleteUnapprovedReportsOnApplicationStart
    boolean deleteOldUnsentReportsOnApplicationStart() -> deleteOldUnsentReportsOnApplicationStart
    int dropboxCollectionMinutes() -> dropboxCollectionMinutes
    boolean forceCloseDialogAfterToast() -> forceCloseDialogAfterToast
    java.lang.String formUri() -> formUri
    java.lang.String formUriBasicAuthLogin() -> formUriBasicAuthLogin
    java.lang.String formUriBasicAuthPassword() -> formUriBasicAuthPassword
    boolean includeDropBoxSystemTags() -> includeDropBoxSystemTags
    java.lang.String[] logcatArguments() -> logcatArguments
    java.lang.String mailTo() -> mailTo
    int maxNumberOfRequestRetries() -> maxNumberOfRequestRetries
    org.acra.ReportingInteractionMode mode() -> mode
    int resDialogPositiveButtonText() -> resDialogPositiveButtonText
    int resDialogNegativeButtonText() -> resDialogNegativeButtonText
    int resDialogCommentPrompt() -> resDialogCommentPrompt
    int resDialogEmailPrompt() -> resDialogEmailPrompt
    int resDialogIcon() -> resDialogIcon
    int resDialogOkToast() -> resDialogOkToast
    int resDialogText() -> resDialogText
    int resDialogTitle() -> resDialogTitle
    int resNotifIcon() -> resNotifIcon
    int resNotifText() -> resNotifText
    int resNotifTickerText() -> resNotifTickerText
    int resNotifTitle() -> resNotifTitle
    int resToastText() -> resToastText
    int sharedPreferencesMode() -> sharedPreferencesMode
    java.lang.String sharedPreferencesName() -> sharedPreferencesName
    int socketTimeout() -> socketTimeout
    boolean logcatFilterByPid() -> logcatFilterByPid
    boolean sendReportsInDevMode() -> sendReportsInDevMode
    boolean sendReportsAtShutdown() -> sendReportsAtShutdown
    java.lang.String[] excludeMatchingSharedPreferencesKeys() -> excludeMatchingSharedPreferencesKeys
    java.lang.String[] excludeMatchingSettingsKeys() -> excludeMatchingSettingsKeys
    java.lang.Class buildConfigClass() -> buildConfigClass
    java.lang.String applicationLogFile() -> applicationLogFile
    int applicationLogFileLines() -> applicationLogFileLines
    boolean disableSSLCertValidation() -> disableSSLCertValidation
    java.lang.String httpsSocketFactoryFactoryClass() -> httpsSocketFactoryFactoryClass
    java.lang.Class reportDialogClass() -> reportDialogClass
    void setHttpsSocketFactoryFactory(org.acra.util.HttpsSocketFactoryFactory) -> setHttpsSocketFactoryFactory
    org.acra.util.HttpsSocketFactoryFactory getHttpSocketFactoryFactory() -> getHttpSocketFactoryFactory
    org.acra.sender.HttpSender$Method httpMethod() -> httpMethod
    org.acra.sender.HttpSender$Type reportType() -> reportType
    java.security.KeyStore keyStore() -> keyStore
    boolean isNull(java.lang.String) -> isNull
org.acra.ACRAConfigurationException -> org.acra.ACRAConfigurationException:
    long serialVersionUID -> serialVersionUID
org.acra.ACRAConstants -> org.acra.ACRAConstants:
    java.lang.String REPORTFILE_EXTENSION -> REPORTFILE_EXTENSION
    java.lang.String APPROVED_SUFFIX -> APPROVED_SUFFIX
    java.lang.String SILENT_SUFFIX -> SILENT_SUFFIX
    int MAX_SEND_REPORTS -> MAX_SEND_REPORTS
    java.lang.String EXTRA_REPORT_FILE_NAME -> EXTRA_REPORT_FILE_NAME
    java.lang.String EXTRA_REPORT_EXCEPTION -> EXTRA_REPORT_EXCEPTION
    java.lang.String EXTRA_FORCE_CANCEL -> EXTRA_FORCE_CANCEL
    int NOTIF_CRASH_ID -> NOTIF_CRASH_ID
    int TOAST_WAIT_DURATION -> TOAST_WAIT_DURATION
    java.lang.String NULL_VALUE -> NULL_VALUE
    boolean DEFAULT_FORCE_CLOSE_DIALOG_AFTER_TOAST -> DEFAULT_FORCE_CLOSE_DIALOG_AFTER_TOAST
    int DEFAULT_MAX_NUMBER_OF_REQUEST_RETRIES -> DEFAULT_MAX_NUMBER_OF_REQUEST_RETRIES
    int DEFAULT_SOCKET_TIMEOUT -> DEFAULT_SOCKET_TIMEOUT
    int DEFAULT_CONNECTION_TIMEOUT -> DEFAULT_CONNECTION_TIMEOUT
    boolean DEFAULT_DELETE_UNAPPROVED_REPORTS_ON_APPLICATION_START -> DEFAULT_DELETE_UNAPPROVED_REPORTS_ON_APPLICATION_START
    boolean DEFAULT_DELETE_OLD_UNSENT_REPORTS_ON_APPLICATION_START -> DEFAULT_DELETE_OLD_UNSENT_REPORTS_ON_APPLICATION_START
    int DEFAULT_DROPBOX_COLLECTION_MINUTES -> DEFAULT_DROPBOX_COLLECTION_MINUTES
    boolean DEFAULT_INCLUDE_DROPBOX_SYSTEM_TAGS -> DEFAULT_INCLUDE_DROPBOX_SYSTEM_TAGS
    int DEFAULT_SHARED_PREFERENCES_MODE -> DEFAULT_SHARED_PREFERENCES_MODE
    int DEFAULT_NOTIFICATION_ICON -> DEFAULT_NOTIFICATION_ICON
    int DEFAULT_DIALOG_ICON -> DEFAULT_DIALOG_ICON
    int DEFAULT_DIALOG_POSITIVE_BUTTON_TEXT -> DEFAULT_DIALOG_POSITIVE_BUTTON_TEXT
    int DEFAULT_DIALOG_NEGATIVE_BUTTON_TEXT -> DEFAULT_DIALOG_NEGATIVE_BUTTON_TEXT
    int DEFAULT_RES_VALUE -> DEFAULT_RES_VALUE
    java.lang.String DEFAULT_STRING_VALUE -> DEFAULT_STRING_VALUE
    int DEFAULT_LOGCAT_LINES -> DEFAULT_LOGCAT_LINES
    int DEFAULT_BUFFER_SIZE_IN_BYTES -> DEFAULT_BUFFER_SIZE_IN_BYTES
    boolean DEFAULT_LOGCAT_FILTER_BY_PID -> DEFAULT_LOGCAT_FILTER_BY_PID
    boolean DEFAULT_SEND_REPORTS_IN_DEV_MODE -> DEFAULT_SEND_REPORTS_IN_DEV_MODE
    boolean DEFAULT_SEND_REPORTS_AT_SHUTDOWN -> DEFAULT_SEND_REPORTS_AT_SHUTDOWN
    java.lang.String DEFAULT_APPLICATION_LOGFILE -> DEFAULT_APPLICATION_LOGFILE
    int DEFAULT_APPLICATION_LOGFILE_LINES -> DEFAULT_APPLICATION_LOGFILE_LINES
    boolean DEFAULT_DISABLE_SSL_CERT_VALIDATION -> DEFAULT_DISABLE_SSL_CERT_VALIDATION
    java.lang.String DEFAULT_HTTP_SOCKET_FACTORY_FACTORY_CLASS -> DEFAULT_HTTP_SOCKET_FACTORY_FACTORY_CLASS
    org.acra.ReportField[] DEFAULT_MAIL_REPORT_FIELDS -> DEFAULT_MAIL_REPORT_FIELDS
    org.acra.ReportField[] DEFAULT_REPORT_FIELDS -> DEFAULT_REPORT_FIELDS
    java.lang.String DATE_TIME_FORMAT_STRING -> DATE_TIME_FORMAT_STRING
org.acra.BaseCrashReportDialog -> org.acra.BaseCrashReportDialog:
    java.lang.String mReportFileName -> mReportFileName
    void onCreate(android.os.Bundle) -> onCreate
    void cancelReports() -> cancelReports
    void sendCrash(java.lang.String,java.lang.String) -> sendCrash
org.acra.CrashReportDialog -> org.acra.CrashReportDialog:
    java.lang.String STATE_EMAIL -> STATE_EMAIL
    java.lang.String STATE_COMMENT -> STATE_COMMENT
    android.widget.EditText userCommentView -> userCommentView
    android.widget.EditText userEmailView -> userEmailView
    android.app.AlertDialog mDialog -> mDialog
    void onCreate(android.os.Bundle) -> onCreate
    android.view.View buildCustomView(android.os.Bundle) -> buildCustomView
    void onClick(android.content.DialogInterface,int) -> onClick
    void onDismiss(android.content.DialogInterface) -> onDismiss
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
org.acra.CrashReportFileNameParser -> org.acra.CrashReportFileNameParser:
    boolean isSilent(java.lang.String) -> isSilent
    boolean isApproved(java.lang.String) -> isApproved
org.acra.CrashReportFinder -> org.acra.CrashReportFinder:
    android.content.Context context -> context
    java.lang.String[] getCrashReportFiles() -> getCrashReportFiles
org.acra.CrashReportFinder$1 -> org.acra.CrashReportFinder$1:
    org.acra.CrashReportFinder this$0 -> this$0
    boolean accept(java.io.File,java.lang.String) -> accept
org.acra.CrashReportPersister -> org.acra.CrashReportPersister:
    int NONE -> NONE
    int SLASH -> SLASH
    int UNICODE -> UNICODE
    int CONTINUE -> CONTINUE
    int KEY_DONE -> KEY_DONE
    int IGNORE -> IGNORE
    java.lang.String LINE_SEPARATOR -> LINE_SEPARATOR
    android.content.Context context -> context
    org.acra.collector.CrashReportData load(java.lang.String) -> load
    void store(org.acra.collector.CrashReportData,java.lang.String) -> store
    boolean isEbcdic(java.io.BufferedInputStream) -> isEbcdic
    org.acra.collector.CrashReportData load(java.io.Reader) -> load
    void dumpString(java.lang.StringBuilder,java.lang.String,boolean) -> dumpString
org.acra.ErrorReporter -> org.acra.ErrorReporter:
    boolean enabled -> enabled
    android.app.Application mContext -> mContext
    android.content.SharedPreferences prefs -> prefs
    java.util.List mReportSenders -> mReportSenders
    org.acra.collector.CrashReportDataFactory crashReportDataFactory -> crashReportDataFactory
    org.acra.CrashReportFileNameParser fileNameParser -> fileNameParser
    java.lang.Thread$UncaughtExceptionHandler mDfltExceptionHandler -> mDfltExceptionHandler
    java.lang.ref.WeakReference lastActivityCreated -> lastActivityCreated
    boolean toastWaitEnded -> toastWaitEnded
    org.acra.ExceptionHandlerInitializer NULL_EXCEPTION_HANDLER_INITIALIZER -> NULL_EXCEPTION_HANDLER_INITIALIZER
    org.acra.ExceptionHandlerInitializer exceptionHandlerInitializer -> exceptionHandlerInitializer
    int mNotificationCounter -> mNotificationCounter
    org.acra.ErrorReporter getInstance() -> getInstance
    void addCustomData(java.lang.String,java.lang.String) -> addCustomData
    java.lang.String putCustomData(java.lang.String,java.lang.String) -> putCustomData
    void setExceptionHandlerInitializer(org.acra.ExceptionHandlerInitializer) -> setExceptionHandlerInitializer
    java.lang.String removeCustomData(java.lang.String) -> removeCustomData
    void clearCustomData() -> clearCustomData
    java.lang.String getCustomData(java.lang.String) -> getCustomData
    void addReportSender(org.acra.sender.ReportSender) -> addReportSender
    void removeReportSender(org.acra.sender.ReportSender) -> removeReportSender
    void removeReportSenders(java.lang.Class) -> removeReportSenders
    void removeAllReportSenders() -> removeAllReportSenders
    void setReportSender(org.acra.sender.ReportSender) -> setReportSender
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
    void endApplication(java.lang.Thread,java.lang.Throwable) -> endApplication
    void handleSilentException(java.lang.Throwable) -> handleSilentException
    void setEnabled(boolean) -> setEnabled
    org.acra.SendWorker startSendingReports(boolean,boolean) -> startSendingReports
    void deletePendingReports() -> deletePendingReports
    void checkReportsOnApplicationStart() -> checkReportsOnApplicationStart
    void deletePendingNonApprovedReports(boolean) -> deletePendingNonApprovedReports
    void handleException(java.lang.Throwable,boolean) -> handleException
    void handleException(java.lang.Throwable) -> handleException
    org.acra.ErrorReporter$ReportBuilder reportBuilder() -> reportBuilder
    void report(org.acra.ErrorReporter$ReportBuilder) -> report
    android.content.Intent createCrashReportDialogIntent(java.lang.String,org.acra.ErrorReporter$ReportBuilder) -> createCrashReportDialogIntent
    void createNotification(java.lang.String,org.acra.ErrorReporter$ReportBuilder) -> createNotification
    java.lang.String getReportFileName(org.acra.collector.CrashReportData) -> getReportFileName
    void saveCrashReportFile(java.lang.String,org.acra.collector.CrashReportData) -> saveCrashReportFile
    void deletePendingReports(boolean,boolean,int) -> deletePendingReports
    boolean containsOnlySilentOrApprovedReports(java.lang.String[]) -> containsOnlySilentOrApprovedReports
    void setDefaultReportSenders() -> setDefaultReportSenders
    java.lang.ref.WeakReference access$002(org.acra.ErrorReporter,java.lang.ref.WeakReference) -> access$002
    android.app.Application access$400(org.acra.ErrorReporter) -> access$400
    boolean access$1102(org.acra.ErrorReporter,boolean) -> access$1102
    boolean access$1100(org.acra.ErrorReporter) -> access$1100
    android.content.Intent access$1200(org.acra.ErrorReporter,java.lang.String,org.acra.ErrorReporter$ReportBuilder) -> access$1200
    void access$1300(org.acra.ErrorReporter,java.lang.Thread,java.lang.Throwable) -> access$1300
    void access$1400(org.acra.ErrorReporter,org.acra.ErrorReporter$ReportBuilder) -> access$1400
org.acra.ErrorReporter$1 -> org.acra.ErrorReporter$1:
    void initializeExceptionHandler(org.acra.ErrorReporter) -> initializeExceptionHandler
org.acra.ErrorReporter$2 -> org.acra.ErrorReporter$2:
    org.acra.ErrorReporter this$0 -> this$0
    void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    void onActivityStarted(android.app.Activity) -> onActivityStarted
    void onActivityResumed(android.app.Activity) -> onActivityResumed
    void onActivityPaused(android.app.Activity) -> onActivityPaused
    void onActivityStopped(android.app.Activity) -> onActivityStopped
    void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
org.acra.ErrorReporter$3 -> org.acra.ErrorReporter$3:
    org.acra.ErrorReporter$TimeHelper val$sentToastTimeMillis -> val$sentToastTimeMillis
    org.acra.ErrorReporter this$0 -> this$0
    void run() -> run
org.acra.ErrorReporter$4 -> org.acra.ErrorReporter$4:
    org.acra.ErrorReporter$TimeHelper val$sentToastTimeMillis -> val$sentToastTimeMillis
    org.acra.ErrorReporter this$0 -> this$0
    void run() -> run
org.acra.ErrorReporter$5 -> org.acra.ErrorReporter$5:
    org.acra.SendWorker val$worker -> val$worker
    boolean val$showDirectDialog -> val$showDirectDialog
    java.lang.String val$reportFileName -> val$reportFileName
    org.acra.ErrorReporter$ReportBuilder val$reportBuilder -> val$reportBuilder
    org.acra.ErrorReporter this$0 -> this$0
    void run() -> run
org.acra.ErrorReporter$ReportBuilder -> org.acra.ErrorReporter$ReportBuilder:
    java.lang.String mMessage -> mMessage
    java.lang.Thread mUncaughtExceptionThread -> mUncaughtExceptionThread
    java.lang.Throwable mException -> mException
    java.util.Map mCustomData -> mCustomData
    boolean mForceSilent -> mForceSilent
    boolean mEndsApplication -> mEndsApplication
    org.acra.ErrorReporter this$0 -> this$0
    org.acra.ErrorReporter$ReportBuilder message(java.lang.String) -> message
    org.acra.ErrorReporter$ReportBuilder uncaughtExceptionThread(java.lang.Thread) -> uncaughtExceptionThread
    org.acra.ErrorReporter$ReportBuilder exception(java.lang.Throwable) -> exception
    void initCustomData() -> initCustomData
    org.acra.ErrorReporter$ReportBuilder customData(java.util.Map) -> customData
    org.acra.ErrorReporter$ReportBuilder customData(java.lang.String,java.lang.String) -> customData
    org.acra.ErrorReporter$ReportBuilder forceSilent() -> forceSilent
    org.acra.ErrorReporter$ReportBuilder endsApplication() -> endsApplication
    void send() -> send
    org.acra.ErrorReporter$ReportBuilder access$100(org.acra.ErrorReporter$ReportBuilder,java.lang.Thread) -> access$100
    boolean access$200(org.acra.ErrorReporter$ReportBuilder) -> access$200
    java.lang.String access$500(org.acra.ErrorReporter$ReportBuilder) -> access$500
    java.lang.Throwable access$600(org.acra.ErrorReporter$ReportBuilder) -> access$600
    java.util.Map access$700(org.acra.ErrorReporter$ReportBuilder) -> access$700
    java.lang.Thread access$800(org.acra.ErrorReporter$ReportBuilder) -> access$800
    boolean access$900(org.acra.ErrorReporter$ReportBuilder) -> access$900
org.acra.ErrorReporter$TimeHelper -> org.acra.ErrorReporter$TimeHelper:
    java.lang.Long initialTimeMillis -> initialTimeMillis
    void setInitialTimeMillis(long) -> setInitialTimeMillis
    long getElapsedTime() -> getElapsedTime
    java.lang.Long access$1000(org.acra.ErrorReporter$TimeHelper) -> access$1000
org.acra.ExceptionHandlerInitializer -> org.acra.ExceptionHandlerInitializer:
    void initializeExceptionHandler(org.acra.ErrorReporter) -> initializeExceptionHandler
org.acra.ReportField -> org.acra.ReportField:
    org.acra.ReportField REPORT_ID -> REPORT_ID
    org.acra.ReportField APP_VERSION_CODE -> APP_VERSION_CODE
    org.acra.ReportField APP_VERSION_NAME -> APP_VERSION_NAME
    org.acra.ReportField PACKAGE_NAME -> PACKAGE_NAME
    org.acra.ReportField FILE_PATH -> FILE_PATH
    org.acra.ReportField PHONE_MODEL -> PHONE_MODEL
    org.acra.ReportField ANDROID_VERSION -> ANDROID_VERSION
    org.acra.ReportField BUILD -> BUILD
    org.acra.ReportField BRAND -> BRAND
    org.acra.ReportField PRODUCT -> PRODUCT
    org.acra.ReportField TOTAL_MEM_SIZE -> TOTAL_MEM_SIZE
    org.acra.ReportField AVAILABLE_MEM_SIZE -> AVAILABLE_MEM_SIZE
    org.acra.ReportField BUILD_CONFIG -> BUILD_CONFIG
    org.acra.ReportField CUSTOM_DATA -> CUSTOM_DATA
    org.acra.ReportField STACK_TRACE -> STACK_TRACE
    org.acra.ReportField STACK_TRACE_HASH -> STACK_TRACE_HASH
    org.acra.ReportField INITIAL_CONFIGURATION -> INITIAL_CONFIGURATION
    org.acra.ReportField CRASH_CONFIGURATION -> CRASH_CONFIGURATION
    org.acra.ReportField DISPLAY -> DISPLAY
    org.acra.ReportField USER_COMMENT -> USER_COMMENT
    org.acra.ReportField USER_APP_START_DATE -> USER_APP_START_DATE
    org.acra.ReportField USER_CRASH_DATE -> USER_CRASH_DATE
    org.acra.ReportField DUMPSYS_MEMINFO -> DUMPSYS_MEMINFO
    org.acra.ReportField DROPBOX -> DROPBOX
    org.acra.ReportField LOGCAT -> LOGCAT
    org.acra.ReportField EVENTSLOG -> EVENTSLOG
    org.acra.ReportField RADIOLOG -> RADIOLOG
    org.acra.ReportField IS_SILENT -> IS_SILENT
    org.acra.ReportField DEVICE_ID -> DEVICE_ID
    org.acra.ReportField INSTALLATION_ID -> INSTALLATION_ID
    org.acra.ReportField USER_EMAIL -> USER_EMAIL
    org.acra.ReportField DEVICE_FEATURES -> DEVICE_FEATURES
    org.acra.ReportField ENVIRONMENT -> ENVIRONMENT
    org.acra.ReportField SETTINGS_SYSTEM -> SETTINGS_SYSTEM
    org.acra.ReportField SETTINGS_SECURE -> SETTINGS_SECURE
    org.acra.ReportField SETTINGS_GLOBAL -> SETTINGS_GLOBAL
    org.acra.ReportField SHARED_PREFERENCES -> SHARED_PREFERENCES
    org.acra.ReportField APPLICATION_LOG -> APPLICATION_LOG
    org.acra.ReportField MEDIA_CODEC_LIST -> MEDIA_CODEC_LIST
    org.acra.ReportField THREAD_DETAILS -> THREAD_DETAILS
    org.acra.ReportField USER_IP -> USER_IP
    org.acra.ReportField[] $VALUES -> $VALUES
    org.acra.ReportField[] values() -> values
    org.acra.ReportField valueOf(java.lang.String) -> valueOf
    boolean containsKeyValuePairs() -> containsKeyValuePairs
org.acra.ReportField$1 -> org.acra.ReportField$1:
    boolean containsKeyValuePairs() -> containsKeyValuePairs
org.acra.ReportField$10 -> org.acra.ReportField$10:
    boolean containsKeyValuePairs() -> containsKeyValuePairs
org.acra.ReportField$11 -> org.acra.ReportField$11:
    boolean containsKeyValuePairs() -> containsKeyValuePairs
org.acra.ReportField$12 -> org.acra.ReportField$12:
    boolean containsKeyValuePairs() -> containsKeyValuePairs
org.acra.ReportField$2 -> org.acra.ReportField$2:
    boolean containsKeyValuePairs() -> containsKeyValuePairs
org.acra.ReportField$3 -> org.acra.ReportField$3:
    boolean containsKeyValuePairs() -> containsKeyValuePairs
org.acra.ReportField$4 -> org.acra.ReportField$4:
    boolean containsKeyValuePairs() -> containsKeyValuePairs
org.acra.ReportField$5 -> org.acra.ReportField$5:
    boolean containsKeyValuePairs() -> containsKeyValuePairs
org.acra.ReportField$6 -> org.acra.ReportField$6:
    boolean containsKeyValuePairs() -> containsKeyValuePairs
org.acra.ReportField$7 -> org.acra.ReportField$7:
    boolean containsKeyValuePairs() -> containsKeyValuePairs
org.acra.ReportField$8 -> org.acra.ReportField$8:
    boolean containsKeyValuePairs() -> containsKeyValuePairs
org.acra.ReportField$9 -> org.acra.ReportField$9:
    boolean containsKeyValuePairs() -> containsKeyValuePairs
org.acra.ReportingInteractionMode -> org.acra.ReportingInteractionMode:
    org.acra.ReportingInteractionMode SILENT -> SILENT
    org.acra.ReportingInteractionMode NOTIFICATION -> NOTIFICATION
    org.acra.ReportingInteractionMode TOAST -> TOAST
    org.acra.ReportingInteractionMode DIALOG -> DIALOG
    org.acra.ReportingInteractionMode[] $VALUES -> $VALUES
    org.acra.ReportingInteractionMode[] values() -> values
    org.acra.ReportingInteractionMode valueOf(java.lang.String) -> valueOf
org.acra.SendWorker -> org.acra.SendWorker:
    android.content.Context context -> context
    boolean sendOnlySilentReports -> sendOnlySilentReports
    boolean approvePendingReports -> approvePendingReports
    org.acra.CrashReportFileNameParser fileNameParser -> fileNameParser
    java.util.List reportSenders -> reportSenders
    void run() -> run
    void approvePendingReports() -> approvePendingReports
    void checkAndSendReports(android.content.Context,boolean) -> checkAndSendReports
    void sendCrashReport(org.acra.collector.CrashReportData) -> sendCrashReport
    void deleteFile(android.content.Context,java.lang.String) -> deleteFile
org.acra.annotation.ReportsCrashes -> org.acra.annotation.ReportsCrashes:
    java.lang.String formUri() -> formUri
    org.acra.ReportingInteractionMode mode() -> mode
    int resDialogPositiveButtonText() -> resDialogPositiveButtonText
    int resDialogNegativeButtonText() -> resDialogNegativeButtonText
    int resDialogCommentPrompt() -> resDialogCommentPrompt
    int resDialogEmailPrompt() -> resDialogEmailPrompt
    int resDialogIcon() -> resDialogIcon
    int resDialogOkToast() -> resDialogOkToast
    int resDialogText() -> resDialogText
    int resDialogTitle() -> resDialogTitle
    int resNotifIcon() -> resNotifIcon
    int resNotifText() -> resNotifText
    int resNotifTickerText() -> resNotifTickerText
    int resNotifTitle() -> resNotifTitle
    int resToastText() -> resToastText
    java.lang.String sharedPreferencesName() -> sharedPreferencesName
    int sharedPreferencesMode() -> sharedPreferencesMode
    boolean includeDropBoxSystemTags() -> includeDropBoxSystemTags
    java.lang.String[] additionalDropBoxTags() -> additionalDropBoxTags
    int dropboxCollectionMinutes() -> dropboxCollectionMinutes
    java.lang.String[] logcatArguments() -> logcatArguments
    java.lang.String formUriBasicAuthLogin() -> formUriBasicAuthLogin
    java.lang.String formUriBasicAuthPassword() -> formUriBasicAuthPassword
    org.acra.ReportField[] customReportContent() -> customReportContent
    java.lang.String mailTo() -> mailTo
    boolean deleteUnapprovedReportsOnApplicationStart() -> deleteUnapprovedReportsOnApplicationStart
    boolean deleteOldUnsentReportsOnApplicationStart() -> deleteOldUnsentReportsOnApplicationStart
    int connectionTimeout() -> connectionTimeout
    int socketTimeout() -> socketTimeout
    int maxNumberOfRequestRetries() -> maxNumberOfRequestRetries
    boolean forceCloseDialogAfterToast() -> forceCloseDialogAfterToast
    java.lang.String[] additionalSharedPreferences() -> additionalSharedPreferences
    boolean logcatFilterByPid() -> logcatFilterByPid
    boolean sendReportsInDevMode() -> sendReportsInDevMode
    boolean sendReportsAtShutdown() -> sendReportsAtShutdown
    java.lang.String[] excludeMatchingSharedPreferencesKeys() -> excludeMatchingSharedPreferencesKeys
    java.lang.String[] excludeMatchingSettingsKeys() -> excludeMatchingSettingsKeys
    java.lang.Class buildConfigClass() -> buildConfigClass
    java.lang.String applicationLogFile() -> applicationLogFile
    int applicationLogFileLines() -> applicationLogFileLines
    boolean disableSSLCertValidation() -> disableSSLCertValidation
    java.lang.String httpsSocketFactoryFactoryClass() -> httpsSocketFactoryFactoryClass
    java.lang.Class reportDialogClass() -> reportDialogClass
    org.acra.sender.HttpSender$Method httpMethod() -> httpMethod
    org.acra.sender.HttpSender$Type reportType() -> reportType
org.acra.collector.CollectorUtil -> org.acra.collector.CollectorUtil:
    void safeClose(java.io.Reader) -> safeClose
org.acra.collector.Compatibility -> org.acra.collector.Compatibility:
    int getAPILevel() -> getAPILevel
    java.lang.String getDropBoxServiceName() -> getDropBoxServiceName
org.acra.collector.ConfigurationCollector -> org.acra.collector.ConfigurationCollector:
    java.lang.String SUFFIX_MASK -> SUFFIX_MASK
    java.lang.String FIELD_SCREENLAYOUT -> FIELD_SCREENLAYOUT
    java.lang.String FIELD_UIMODE -> FIELD_UIMODE
    java.lang.String FIELD_MNC -> FIELD_MNC
    java.lang.String FIELD_MCC -> FIELD_MCC
    java.lang.String PREFIX_UI_MODE -> PREFIX_UI_MODE
    java.lang.String PREFIX_TOUCHSCREEN -> PREFIX_TOUCHSCREEN
    java.lang.String PREFIX_SCREENLAYOUT -> PREFIX_SCREENLAYOUT
    java.lang.String PREFIX_ORIENTATION -> PREFIX_ORIENTATION
    java.lang.String PREFIX_NAVIGATIONHIDDEN -> PREFIX_NAVIGATIONHIDDEN
    java.lang.String PREFIX_NAVIGATION -> PREFIX_NAVIGATION
    java.lang.String PREFIX_KEYBOARDHIDDEN -> PREFIX_KEYBOARDHIDDEN
    java.lang.String PREFIX_KEYBOARD -> PREFIX_KEYBOARD
    java.lang.String PREFIX_HARDKEYBOARDHIDDEN -> PREFIX_HARDKEYBOARDHIDDEN
    java.util.HashMap mValueArrays -> mValueArrays
    java.lang.String toString(android.content.res.Configuration) -> toString
    java.lang.String getFieldValueName(android.content.res.Configuration,java.lang.reflect.Field) -> getFieldValueName
    java.lang.String activeFlags(android.util.SparseArray,int) -> activeFlags
    java.lang.String collectConfiguration(android.content.Context) -> collectConfiguration
org.acra.collector.CrashReportData -> org.acra.collector.CrashReportData:
    long serialVersionUID -> serialVersionUID
    java.lang.String getProperty(org.acra.ReportField) -> getProperty
    org.json.JSONObject toJSON() -> toJSON
org.acra.collector.CrashReportDataFactory -> org.acra.collector.CrashReportDataFactory:
    android.content.Context context -> context
    android.content.SharedPreferences prefs -> prefs
    java.util.Map customParameters -> customParameters
    android.text.format.Time appStartDate -> appStartDate
    java.lang.String initialConfiguration -> initialConfiguration
    java.lang.String putCustomData(java.lang.String,java.lang.String) -> putCustomData
    java.lang.String removeCustomData(java.lang.String) -> removeCustomData
    void clearCustomData() -> clearCustomData
    java.lang.String getCustomData(java.lang.String) -> getCustomData
    org.acra.collector.CrashReportData createCrashData(java.lang.String,java.lang.Throwable,java.util.Map,boolean,java.lang.Thread) -> createCrashData
    java.lang.String createCustomInfoString(java.util.Map) -> createCustomInfoString
    java.lang.String getStackTrace(java.lang.String,java.lang.Throwable) -> getStackTrace
    java.lang.String getStackTraceHash(java.lang.Throwable) -> getStackTraceHash
    java.lang.Class getBuildConfigClass() -> getBuildConfigClass
org.acra.collector.DeviceFeaturesCollector -> org.acra.collector.DeviceFeaturesCollector:
    java.lang.String getFeatures(android.content.Context) -> getFeatures
org.acra.collector.DisplayManagerCollector -> org.acra.collector.DisplayManagerCollector:
    android.util.SparseArray mFlagsNames -> mFlagsNames
    android.util.SparseArray mDensities -> mDensities
    java.lang.String collectDisplays(android.content.Context) -> collectDisplays
    java.lang.Object collectDisplayData(android.view.Display) -> collectDisplayData
    java.lang.Object collectIsValid(android.view.Display) -> collectIsValid
    java.lang.Object collectRotation(android.view.Display) -> collectRotation
    java.lang.Object collectRectSize(android.view.Display) -> collectRectSize
    java.lang.Object collectSize(android.view.Display,java.lang.String) -> collectSize
    java.lang.String collectCurrentSizeRange(android.view.Display) -> collectCurrentSizeRange
    java.lang.String collectFlags(android.view.Display) -> collectFlags
    java.lang.String collectName(android.view.Display) -> collectName
    java.lang.Object collectMetrics(android.view.Display,java.lang.String) -> collectMetrics
    java.lang.String activeFlags(android.util.SparseArray,int) -> activeFlags
org.acra.collector.DropBoxCollector -> org.acra.collector.DropBoxCollector:
    java.lang.String[] SYSTEM_TAGS -> SYSTEM_TAGS
    java.lang.String NO_RESULT -> NO_RESULT
    java.lang.String read(android.content.Context,java.lang.String[]) -> read
org.acra.collector.DumpSysCollector -> org.acra.collector.DumpSysCollector:
    java.lang.String collectMemInfo() -> collectMemInfo
org.acra.collector.LogCatCollector -> org.acra.collector.LogCatCollector:
    int DEFAULT_TAIL_COUNT -> DEFAULT_TAIL_COUNT
    java.lang.String collectLogCat(java.lang.String) -> collectLogCat
org.acra.collector.LogCatCollector$1 -> org.acra.collector.LogCatCollector$1:
    java.lang.Process val$process -> val$process
    void run() -> run
org.acra.collector.LogFileCollector -> org.acra.collector.LogFileCollector:
    java.lang.String collectLogFile(android.content.Context,java.lang.String,int) -> collectLogFile
org.acra.collector.MediaCodecListCollector -> org.acra.collector.MediaCodecListCollector:
    java.lang.String COLOR_FORMAT_PREFIX -> COLOR_FORMAT_PREFIX
    java.lang.String[] MPEG4_TYPES -> MPEG4_TYPES
    java.lang.String[] AVC_TYPES -> AVC_TYPES
    java.lang.String[] H263_TYPES -> H263_TYPES
    java.lang.String[] AAC_TYPES -> AAC_TYPES
    java.lang.Class mediaCodecListClass -> mediaCodecListClass
    java.lang.reflect.Method getCodecInfoAtMethod -> getCodecInfoAtMethod
    java.lang.Class mediaCodecInfoClass -> mediaCodecInfoClass
    java.lang.reflect.Method getNameMethod -> getNameMethod
    java.lang.reflect.Method isEncoderMethod -> isEncoderMethod
    java.lang.reflect.Method getSupportedTypesMethod -> getSupportedTypesMethod
    java.lang.reflect.Method getCapabilitiesForTypeMethod -> getCapabilitiesForTypeMethod
    java.lang.Class codecCapabilitiesClass -> codecCapabilitiesClass
    java.lang.reflect.Field colorFormatsField -> colorFormatsField
    java.lang.reflect.Field profileLevelsField -> profileLevelsField
    java.lang.reflect.Field profileField -> profileField
    java.lang.reflect.Field levelField -> levelField
    android.util.SparseArray mColorFormatValues -> mColorFormatValues
    android.util.SparseArray mAVCLevelValues -> mAVCLevelValues
    android.util.SparseArray mAVCProfileValues -> mAVCProfileValues
    android.util.SparseArray mH263LevelValues -> mH263LevelValues
    android.util.SparseArray mH263ProfileValues -> mH263ProfileValues
    android.util.SparseArray mMPEG4LevelValues -> mMPEG4LevelValues
    android.util.SparseArray mMPEG4ProfileValues -> mMPEG4ProfileValues
    android.util.SparseArray mAACProfileValues -> mAACProfileValues
    java.lang.String collecMediaCodecList() -> collecMediaCodecList
    java.lang.String collectCapabilitiesForType(java.lang.Object,java.lang.String) -> collectCapabilitiesForType
    org.acra.collector.MediaCodecListCollector$CodecType identifyCodecType(java.lang.Object) -> identifyCodecType
org.acra.collector.MediaCodecListCollector$1 -> org.acra.collector.MediaCodecListCollector$1:
    int[] $SwitchMap$org$acra$collector$MediaCodecListCollector$CodecType -> $SwitchMap$org$acra$collector$MediaCodecListCollector$CodecType
org.acra.collector.MediaCodecListCollector$CodecType -> org.acra.collector.MediaCodecListCollector$CodecType:
    org.acra.collector.MediaCodecListCollector$CodecType AVC -> AVC
    org.acra.collector.MediaCodecListCollector$CodecType H263 -> H263
    org.acra.collector.MediaCodecListCollector$CodecType MPEG4 -> MPEG4
    org.acra.collector.MediaCodecListCollector$CodecType AAC -> AAC
    org.acra.collector.MediaCodecListCollector$CodecType[] $VALUES -> $VALUES
    org.acra.collector.MediaCodecListCollector$CodecType[] values() -> values
    org.acra.collector.MediaCodecListCollector$CodecType valueOf(java.lang.String) -> valueOf
org.acra.collector.ReflectionCollector -> org.acra.collector.ReflectionCollector:
    java.lang.String collectConstants(java.lang.Class,java.lang.String) -> collectConstants
    java.lang.String collectStaticGettersResults(java.lang.Class) -> collectStaticGettersResults
    java.lang.String collectConstants(java.lang.Class) -> collectConstants
org.acra.collector.SettingsCollector -> org.acra.collector.SettingsCollector:
    java.lang.String collectSystemSettings(android.content.Context) -> collectSystemSettings
    java.lang.String collectSecureSettings(android.content.Context) -> collectSecureSettings
    java.lang.String collectGlobalSettings(android.content.Context) -> collectGlobalSettings
    boolean isAuthorized(java.lang.reflect.Field) -> isAuthorized
org.acra.collector.SharedPreferencesCollector -> org.acra.collector.SharedPreferencesCollector:
    java.lang.String collect(android.content.Context) -> collect
    boolean filteredKey(java.lang.String) -> filteredKey
org.acra.collector.ThreadCollector -> org.acra.collector.ThreadCollector:
    java.lang.String collect(java.lang.Thread) -> collect
org.acra.jraf.android.util.activitylifecyclecallbackscompat.ActivityLifecycleCallbacksAdapter -> org.acra.jraf.android.util.activitylifecyclecallbackscompat.ActivityLifecycleCallbacksAdapter:
    void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    void onActivityStarted(android.app.Activity) -> onActivityStarted
    void onActivityResumed(android.app.Activity) -> onActivityResumed
    void onActivityPaused(android.app.Activity) -> onActivityPaused
    void onActivityStopped(android.app.Activity) -> onActivityStopped
    void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
org.acra.jraf.android.util.activitylifecyclecallbackscompat.ActivityLifecycleCallbacksCompat -> org.acra.jraf.android.util.activitylifecyclecallbackscompat.ActivityLifecycleCallbacksCompat:
    void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    void onActivityStarted(android.app.Activity) -> onActivityStarted
    void onActivityResumed(android.app.Activity) -> onActivityResumed
    void onActivityPaused(android.app.Activity) -> onActivityPaused
    void onActivityStopped(android.app.Activity) -> onActivityStopped
    void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
org.acra.jraf.android.util.activitylifecyclecallbackscompat.ActivityLifecycleCallbacksWrapper -> org.acra.jraf.android.util.activitylifecyclecallbackscompat.ActivityLifecycleCallbacksWrapper:
    org.acra.jraf.android.util.activitylifecyclecallbackscompat.ActivityLifecycleCallbacksCompat mCallback -> mCallback
    void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    void onActivityStarted(android.app.Activity) -> onActivityStarted
    void onActivityResumed(android.app.Activity) -> onActivityResumed
    void onActivityPaused(android.app.Activity) -> onActivityPaused
    void onActivityStopped(android.app.Activity) -> onActivityStopped
    void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
org.acra.jraf.android.util.activitylifecyclecallbackscompat.ApplicationHelper -> org.acra.jraf.android.util.activitylifecyclecallbackscompat.ApplicationHelper:
    boolean PRE_ICS -> PRE_ICS
    void registerActivityLifecycleCallbacks(android.app.Application,org.acra.jraf.android.util.activitylifecyclecallbackscompat.ActivityLifecycleCallbacksCompat) -> registerActivityLifecycleCallbacks
    void preIcsRegisterActivityLifecycleCallbacks(org.acra.jraf.android.util.activitylifecyclecallbackscompat.ActivityLifecycleCallbacksCompat) -> preIcsRegisterActivityLifecycleCallbacks
    void postIcsRegisterActivityLifecycleCallbacks(android.app.Application,org.acra.jraf.android.util.activitylifecyclecallbackscompat.ActivityLifecycleCallbacksCompat) -> postIcsRegisterActivityLifecycleCallbacks
    void unregisterActivityLifecycleCallbacks(android.app.Application,org.acra.jraf.android.util.activitylifecyclecallbackscompat.ActivityLifecycleCallbacksCompat) -> unregisterActivityLifecycleCallbacks
    void preIcsUnregisterActivityLifecycleCallbacks(org.acra.jraf.android.util.activitylifecyclecallbackscompat.ActivityLifecycleCallbacksCompat) -> preIcsUnregisterActivityLifecycleCallbacks
    void postIcsUnregisterActivityLifecycleCallbacks(android.app.Application,org.acra.jraf.android.util.activitylifecyclecallbackscompat.ActivityLifecycleCallbacksCompat) -> postIcsUnregisterActivityLifecycleCallbacks
org.acra.jraf.android.util.activitylifecyclecallbackscompat.MainLifecycleDispatcher -> org.acra.jraf.android.util.activitylifecyclecallbackscompat.MainLifecycleDispatcher:
    org.acra.jraf.android.util.activitylifecyclecallbackscompat.MainLifecycleDispatcher INSTANCE -> INSTANCE
    java.util.ArrayList mActivityLifecycleCallbacks -> mActivityLifecycleCallbacks
    org.acra.jraf.android.util.activitylifecyclecallbackscompat.MainLifecycleDispatcher get() -> get
    void registerActivityLifecycleCallbacks(org.acra.jraf.android.util.activitylifecyclecallbackscompat.ActivityLifecycleCallbacksCompat) -> registerActivityLifecycleCallbacks
    void unregisterActivityLifecycleCallbacks(org.acra.jraf.android.util.activitylifecyclecallbackscompat.ActivityLifecycleCallbacksCompat) -> unregisterActivityLifecycleCallbacks
    java.lang.Object[] collectActivityLifecycleCallbacks() -> collectActivityLifecycleCallbacks
    void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    void onActivityStarted(android.app.Activity) -> onActivityStarted
    void onActivityResumed(android.app.Activity) -> onActivityResumed
    void onActivityPaused(android.app.Activity) -> onActivityPaused
    void onActivityStopped(android.app.Activity) -> onActivityStopped
    void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
org.acra.log.ACRALog -> org.acra.log.ACRALog:
    int v(java.lang.String,java.lang.String) -> v
    int v(java.lang.String,java.lang.String,java.lang.Throwable) -> v
    int d(java.lang.String,java.lang.String) -> d
    int d(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    int i(java.lang.String,java.lang.String) -> i
    int i(java.lang.String,java.lang.String,java.lang.Throwable) -> i
    int w(java.lang.String,java.lang.String) -> w
    int w(java.lang.String,java.lang.String,java.lang.Throwable) -> w
    int w(java.lang.String,java.lang.Throwable) -> w
    int e(java.lang.String,java.lang.String) -> e
    int e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
    java.lang.String getStackTraceString(java.lang.Throwable) -> getStackTraceString
org.acra.log.AndroidLogDelegate -> org.acra.log.AndroidLogDelegate:
    int v(java.lang.String,java.lang.String) -> v
    int v(java.lang.String,java.lang.String,java.lang.Throwable) -> v
    int d(java.lang.String,java.lang.String) -> d
    int d(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    int i(java.lang.String,java.lang.String) -> i
    int i(java.lang.String,java.lang.String,java.lang.Throwable) -> i
    int w(java.lang.String,java.lang.String) -> w
    int w(java.lang.String,java.lang.String,java.lang.Throwable) -> w
    int w(java.lang.String,java.lang.Throwable) -> w
    int e(java.lang.String,java.lang.String) -> e
    int e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
    java.lang.String getStackTraceString(java.lang.Throwable) -> getStackTraceString
org.acra.log.HollowLog -> org.acra.log.HollowLog:
    int v(java.lang.String,java.lang.String) -> v
    int v(java.lang.String,java.lang.String,java.lang.Throwable) -> v
    int d(java.lang.String,java.lang.String) -> d
    int d(java.lang.String,java.lang.String,java.lang.Throwable) -> d
    int i(java.lang.String,java.lang.String) -> i
    int i(java.lang.String,java.lang.String,java.lang.Throwable) -> i
    int w(java.lang.String,java.lang.String) -> w
    int w(java.lang.String,java.lang.String,java.lang.Throwable) -> w
    int w(java.lang.String,java.lang.Throwable) -> w
    int e(java.lang.String,java.lang.String) -> e
    int e(java.lang.String,java.lang.String,java.lang.Throwable) -> e
    java.lang.String getStackTraceString(java.lang.Throwable) -> getStackTraceString
org.acra.sender.EmailIntentSender -> org.acra.sender.EmailIntentSender:
    android.content.Context mContext -> mContext
    void send(android.content.Context,org.acra.collector.CrashReportData) -> send
    java.lang.String buildBody(org.acra.collector.CrashReportData) -> buildBody
org.acra.sender.HttpSender -> org.acra.sender.HttpSender:
    android.net.Uri mFormUri -> mFormUri
    java.util.Map mMapping -> mMapping
    org.acra.sender.HttpSender$Method mMethod -> mMethod
    org.acra.sender.HttpSender$Type mType -> mType
    java.lang.String mUsername -> mUsername
    java.lang.String mPassword -> mPassword
    void setBasicAuth(java.lang.String,java.lang.String) -> setBasicAuth
    void send(android.content.Context,org.acra.collector.CrashReportData) -> send
    java.util.Map remap(java.util.Map) -> remap
org.acra.sender.HttpSender$1 -> org.acra.sender.HttpSender$1:
    int[] $SwitchMap$org$acra$sender$HttpSender$Type -> $SwitchMap$org$acra$sender$HttpSender$Type
    int[] $SwitchMap$org$acra$sender$HttpSender$Method -> $SwitchMap$org$acra$sender$HttpSender$Method
org.acra.sender.HttpSender$Method -> org.acra.sender.HttpSender$Method:
    org.acra.sender.HttpSender$Method POST -> POST
    org.acra.sender.HttpSender$Method PUT -> PUT
    org.acra.sender.HttpSender$Method[] $VALUES -> $VALUES
    org.acra.sender.HttpSender$Method[] values() -> values
    org.acra.sender.HttpSender$Method valueOf(java.lang.String) -> valueOf
org.acra.sender.HttpSender$Type -> org.acra.sender.HttpSender$Type:
    org.acra.sender.HttpSender$Type FORM -> FORM
    org.acra.sender.HttpSender$Type JSON -> JSON
    org.acra.sender.HttpSender$Type[] $VALUES -> $VALUES
    org.acra.sender.HttpSender$Type[] values() -> values
    org.acra.sender.HttpSender$Type valueOf(java.lang.String) -> valueOf
    java.lang.String getContentType() -> getContentType
org.acra.sender.HttpSender$Type$1 -> org.acra.sender.HttpSender$Type$1:
    java.lang.String getContentType() -> getContentType
org.acra.sender.HttpSender$Type$2 -> org.acra.sender.HttpSender$Type$2:
    java.lang.String getContentType() -> getContentType
org.acra.sender.ReportSender -> org.acra.sender.ReportSender:
    void send(android.content.Context,org.acra.collector.CrashReportData) -> send
org.acra.sender.ReportSenderException -> org.acra.sender.ReportSenderException:
org.acra.util.BoundedLinkedList -> org.acra.util.BoundedLinkedList:
    int maxSize -> maxSize
    boolean add(java.lang.Object) -> add
    void add(int,java.lang.Object) -> add
    boolean addAll(java.util.Collection) -> addAll
    boolean addAll(int,java.util.Collection) -> addAll
    void addFirst(java.lang.Object) -> addFirst
    void addLast(java.lang.Object) -> addLast
    java.lang.String toString() -> toString
org.acra.util.DefaultHttpsSocketFactoryFactory -> org.acra.util.DefaultHttpsSocketFactoryFactory:
    org.acra.util.HttpsSocketFactoryFactory INSTANCE -> INSTANCE
    org.apache.http.conn.scheme.SocketFactory create(android.content.Context) -> create
org.acra.util.FakeSocketFactory -> org.acra.util.FakeSocketFactory:
    javax.net.ssl.SSLContext sslcontext -> sslcontext
    javax.net.ssl.SSLContext createEasySSLContext() -> createEasySSLContext
    javax.net.ssl.SSLContext getSSLContext() -> getSSLContext
    java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams) -> connectSocket
    java.net.Socket createSocket() -> createSocket
    boolean isSecure(java.net.Socket) -> isSecure
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
org.acra.util.HttpRequest -> org.acra.util.HttpRequest:
    java.lang.String login -> login
    java.lang.String password -> password
    int connectionTimeOut -> connectionTimeOut
    int socketTimeOut -> socketTimeOut
    int maxNrRetries -> maxNrRetries
    java.util.Map headers -> headers
    void setLogin(java.lang.String) -> setLogin
    void setPassword(java.lang.String) -> setPassword
    void setConnectionTimeOut(int) -> setConnectionTimeOut
    void setSocketTimeOut(int) -> setSocketTimeOut
    void setHeaders(java.util.Map) -> setHeaders
    void setMaxNrRetries(int) -> setMaxNrRetries
    void send(android.content.Context,java.net.URL,org.acra.sender.HttpSender$Method,java.lang.String,org.acra.sender.HttpSender$Type) -> send
    org.apache.http.client.HttpClient getHttpClient(android.content.Context) -> getHttpClient
    org.apache.http.auth.UsernamePasswordCredentials getCredentials() -> getCredentials
    org.apache.http.client.methods.HttpEntityEnclosingRequestBase getHttpRequest(java.net.URL,org.acra.sender.HttpSender$Method,java.lang.String,org.acra.sender.HttpSender$Type) -> getHttpRequest
    java.lang.String getParamsAsFormString(java.util.Map) -> getParamsAsFormString
org.acra.util.HttpRequest$1 -> org.acra.util.HttpRequest$1:
    int[] $SwitchMap$org$acra$sender$HttpSender$Method -> $SwitchMap$org$acra$sender$HttpSender$Method
org.acra.util.HttpRequest$SocketTimeOutRetryHandler -> org.acra.util.HttpRequest$SocketTimeOutRetryHandler:
    org.apache.http.params.HttpParams httpParams -> httpParams
    int maxNrRetries -> maxNrRetries
    boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext) -> retryRequest
org.acra.util.HttpsSocketFactoryFactory -> org.acra.util.HttpsSocketFactoryFactory:
    org.apache.http.conn.scheme.SocketFactory create(android.content.Context) -> create
org.acra.util.Installation -> org.acra.util.Installation:
    java.lang.String sID -> sID
    java.lang.String INSTALLATION -> INSTALLATION
    java.lang.String id(android.content.Context) -> id
    java.lang.String readInstallationFile(java.io.File) -> readInstallationFile
    void writeInstallationFile(java.io.File) -> writeInstallationFile
org.acra.util.JSONReportBuilder -> org.acra.util.JSONReportBuilder:
    org.json.JSONObject buildJSONReport(org.acra.collector.CrashReportData) -> buildJSONReport
    void addJSONFromProperty(org.json.JSONObject,java.lang.String) -> addJSONFromProperty
    java.lang.Object guessType(java.lang.String) -> guessType
    void addJSONSubTree(org.json.JSONObject,java.lang.String[],java.lang.Object) -> addJSONSubTree
org.acra.util.JSONReportBuilder$JSONReportException -> org.acra.util.JSONReportBuilder$JSONReportException:
    long serialVersionUID -> serialVersionUID
org.acra.util.NaiveTrustManager -> org.acra.util.NaiveTrustManager:
    java.security.cert.X509Certificate[] getAcceptedIssuers() -> getAcceptedIssuers
    void checkClientTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkClientTrusted
    void checkServerTrusted(java.security.cert.X509Certificate[],java.lang.String) -> checkServerTrusted
org.acra.util.PackageManagerWrapper -> org.acra.util.PackageManagerWrapper:
    android.content.Context context -> context
    boolean hasPermission(java.lang.String) -> hasPermission
    android.content.pm.PackageInfo getPackageInfo() -> getPackageInfo
org.acra.util.ReflectionException -> org.acra.util.ReflectionException:
org.acra.util.ReflectionHelper -> org.acra.util.ReflectionHelper:
    java.lang.Object create(java.lang.String) -> create
org.acra.util.ReportUtils -> org.acra.util.ReportUtils:
    long getAvailableInternalMemorySize() -> getAvailableInternalMemorySize
    long getTotalInternalMemorySize() -> getTotalInternalMemorySize
    java.lang.String getDeviceId(android.content.Context) -> getDeviceId
    java.lang.String getApplicationFilePath(android.content.Context) -> getApplicationFilePath
    java.lang.String sparseArrayToString(android.util.SparseArray) -> sparseArrayToString
    java.lang.String getLocalIpAddress() -> getLocalIpAddress
    java.lang.String getTimeString(android.text.format.Time) -> getTimeString
org.acra.util.TlsSniSocketFactory -> org.acra.util.TlsSniSocketFactory:
    java.lang.String TAG -> TAG
    int VERSION_CODES_JELLY_BEAN_MR1 -> VERSION_CODES_JELLY_BEAN_MR1
    int VERSION_CODES_LOLLIPOP -> VERSION_CODES_LOLLIPOP
    android.net.SSLCertificateSocketFactory sslSocketFactory -> sslSocketFactory
    javax.net.ssl.HostnameVerifier hostnameVerifier -> hostnameVerifier
    java.util.List ALLOWED_CIPHERS -> ALLOWED_CIPHERS
    java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams) -> connectSocket
    java.net.Socket createSocket() -> createSocket
    boolean isSecure(java.net.Socket) -> isSecure
    java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean) -> createSocket
    void establishAndVerify(javax.net.ssl.SSLSocket,java.lang.String) -> establishAndVerify
    void setTlsParameters(javax.net.ssl.SSLSocket) -> setTlsParameters
    void setSniHostname(javax.net.ssl.SSLSocket,java.lang.String) -> setSniHostname
org.acra.util.ToastSender -> org.acra.util.ToastSender:
    void sendToast(android.content.Context,int,int) -> sendToast
com.itgold.mobilesafe.BaseApplication -> com.itgold.mobilesafe.BaseApplication:
    void onCreate() -> onCreate
    void onTerminate() -> onTerminate
com.itgold.mobilesafe.R -> com.itgold.mobilesafe.a:
com.itgold.mobilesafe.R$styleable -> com.itgold.mobilesafe.b:
    int[] ArcProgress -> ArcProgress
    int ArcProgress_arc_angle -> ArcProgress_arc_angle
    int ArcProgress_arc_bottom_text -> ArcProgress_arc_bottom_text
    int ArcProgress_arc_bottom_text_size -> ArcProgress_arc_bottom_text_size
    int ArcProgress_arc_finished_color -> ArcProgress_arc_finished_color
    int ArcProgress_arc_max -> ArcProgress_arc_max
    int ArcProgress_arc_progress -> ArcProgress_arc_progress
    int ArcProgress_arc_stroke_width -> ArcProgress_arc_stroke_width
    int ArcProgress_arc_suffix_text -> ArcProgress_arc_suffix_text
    int ArcProgress_arc_suffix_text_padding -> ArcProgress_arc_suffix_text_padding
    int ArcProgress_arc_suffix_text_size -> ArcProgress_arc_suffix_text_size
    int ArcProgress_arc_text_color -> ArcProgress_arc_text_color
    int ArcProgress_arc_text_size -> ArcProgress_arc_text_size
    int ArcProgress_arc_unfinished_color -> ArcProgress_arc_unfinished_color
    int[] CircleProgress -> CircleProgress
    int CircleProgress_circle_finished_color -> CircleProgress_circle_finished_color
    int CircleProgress_circle_max -> CircleProgress_circle_max
    int CircleProgress_circle_prefix_text -> CircleProgress_circle_prefix_text
    int CircleProgress_circle_progress -> CircleProgress_circle_progress
    int CircleProgress_circle_suffix_text -> CircleProgress_circle_suffix_text
    int CircleProgress_circle_text_color -> CircleProgress_circle_text_color
    int CircleProgress_circle_text_size -> CircleProgress_circle_text_size
    int CircleProgress_circle_unfinished_color -> CircleProgress_circle_unfinished_color
    int[] DonutProgress -> DonutProgress
    int DonutProgress_donut_background_color -> DonutProgress_donut_background_color
    int DonutProgress_donut_circle_starting_degree -> DonutProgress_donut_circle_starting_degree
    int DonutProgress_donut_finished_color -> DonutProgress_donut_finished_color
    int DonutProgress_donut_finished_stroke_width -> DonutProgress_donut_finished_stroke_width
    int DonutProgress_donut_inner_bottom_text -> DonutProgress_donut_inner_bottom_text
    int DonutProgress_donut_inner_bottom_text_color -> DonutProgress_donut_inner_bottom_text_color
    int DonutProgress_donut_inner_bottom_text_size -> DonutProgress_donut_inner_bottom_text_size
    int DonutProgress_donut_max -> DonutProgress_donut_max
    int DonutProgress_donut_prefix_text -> DonutProgress_donut_prefix_text
    int DonutProgress_donut_progress -> DonutProgress_donut_progress
    int DonutProgress_donut_suffix_text -> DonutProgress_donut_suffix_text
    int DonutProgress_donut_text -> DonutProgress_donut_text
    int DonutProgress_donut_text_color -> DonutProgress_donut_text_color
    int DonutProgress_donut_text_size -> DonutProgress_donut_text_size
    int DonutProgress_donut_unfinished_color -> DonutProgress_donut_unfinished_color
    int DonutProgress_donut_unfinished_stroke_width -> DonutProgress_donut_unfinished_stroke_width
    int[] SettingItemView -> SettingItemView
    int SettingItemView_itbackground -> SettingItemView_itbackground
    int SettingItemView_title -> SettingItemView_title
    int SettingItemView_toggleEnable -> SettingItemView_toggleEnable
    int[] StickyListHeadersListView -> StickyListHeadersListView
    int StickyListHeadersListView_android_cacheColorHint -> StickyListHeadersListView_android_cacheColorHint
    int StickyListHeadersListView_android_choiceMode -> StickyListHeadersListView_android_choiceMode
    int StickyListHeadersListView_android_clipToPadding -> StickyListHeadersListView_android_clipToPadding
    int StickyListHeadersListView_android_divider -> StickyListHeadersListView_android_divider
    int StickyListHeadersListView_android_dividerHeight -> StickyListHeadersListView_android_dividerHeight
    int StickyListHeadersListView_android_drawSelectorOnTop -> StickyListHeadersListView_android_drawSelectorOnTop
    int StickyListHeadersListView_android_fadingEdgeLength -> StickyListHeadersListView_android_fadingEdgeLength
    int StickyListHeadersListView_android_fastScrollAlwaysVisible -> StickyListHeadersListView_android_fastScrollAlwaysVisible
    int StickyListHeadersListView_android_fastScrollEnabled -> StickyListHeadersListView_android_fastScrollEnabled
    int StickyListHeadersListView_android_listSelector -> StickyListHeadersListView_android_listSelector
    int StickyListHeadersListView_android_overScrollMode -> StickyListHeadersListView_android_overScrollMode
    int StickyListHeadersListView_android_padding -> StickyListHeadersListView_android_padding
    int StickyListHeadersListView_android_paddingBottom -> StickyListHeadersListView_android_paddingBottom
    int StickyListHeadersListView_android_paddingLeft -> StickyListHeadersListView_android_paddingLeft
    int StickyListHeadersListView_android_paddingRight -> StickyListHeadersListView_android_paddingRight
    int StickyListHeadersListView_android_paddingTop -> StickyListHeadersListView_android_paddingTop
    int StickyListHeadersListView_android_requiresFadingEdge -> StickyListHeadersListView_android_requiresFadingEdge
    int StickyListHeadersListView_android_scrollbarStyle -> StickyListHeadersListView_android_scrollbarStyle
    int StickyListHeadersListView_android_scrollbars -> StickyListHeadersListView_android_scrollbars
    int StickyListHeadersListView_android_scrollingCache -> StickyListHeadersListView_android_scrollingCache
    int StickyListHeadersListView_android_stackFromBottom -> StickyListHeadersListView_android_stackFromBottom
    int StickyListHeadersListView_android_transcriptMode -> StickyListHeadersListView_android_transcriptMode
    int StickyListHeadersListView_hasStickyHeaders -> StickyListHeadersListView_hasStickyHeaders
    int StickyListHeadersListView_isDrawingListUnderStickyHeader -> StickyListHeadersListView_isDrawingListUnderStickyHeader
    int StickyListHeadersListView_stickyListHeadersListViewStyle -> StickyListHeadersListView_stickyListHeadersListViewStyle
    int[] Themes -> Themes
    int Themes_arcProgressStyle -> Themes_arcProgressStyle
    int Themes_circleProgressStyle -> Themes_circleProgressStyle
    int Themes_donutProgressStyle -> Themes_donutProgressStyle
com.itgold.mobilesafe.activity.AntiVirusActivity -> com.itgold.mobilesafe.activity.AntiVirusActivity:
    java.lang.String TAG -> a
    android.content.pm.PackageManager mPm -> b
    java.util.List mDatas -> c
    android.widget.TextView mTvPackageName -> d
    com.github.lzyzsd.circleprogress.ArcProgress mArcProgress -> e
    android.widget.ListView mListView -> f
    com.itgold.mobilesafe.activity.AntiVirusActivity$AntiVirusAdapter mAdapter -> g
    android.widget.RelativeLayout mRlProgressContainer -> h
    android.widget.LinearLayout mLlResultContainer -> i
    android.widget.LinearLayout mLlAnimatorContainer -> j
    android.widget.TextView mTvResult -> k
    android.widget.Button mBtnScan -> l
    android.widget.ImageView mIvLeft -> m
    android.widget.ImageView mIvRight -> n
    int mVirusTotal -> o
    com.itgold.mobilesafe.activity.AntiVirusActivity$ScanTask mTask -> p
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void startScan() -> startScan
    void showOpenAnimtor() -> b
    android.graphics.Bitmap getLeftBitmap(android.graphics.Bitmap) -> a
    android.graphics.Bitmap getRightBitmap(android.graphics.Bitmap) -> b
    void onClick(android.view.View) -> onClick
    android.widget.RelativeLayout access$0(com.itgold.mobilesafe.activity.AntiVirusActivity) -> a
    android.widget.LinearLayout access$1(com.itgold.mobilesafe.activity.AntiVirusActivity) -> b
    android.widget.LinearLayout access$2(com.itgold.mobilesafe.activity.AntiVirusActivity) -> c
    android.widget.Button access$3(com.itgold.mobilesafe.activity.AntiVirusActivity) -> d
    android.content.pm.PackageManager access$4(com.itgold.mobilesafe.activity.AntiVirusActivity) -> e
    void access$5(com.itgold.mobilesafe.activity.AntiVirusActivity,java.util.List) -> a
    java.lang.String access$6() -> a
    java.util.List access$7(com.itgold.mobilesafe.activity.AntiVirusActivity) -> f
    int access$8(com.itgold.mobilesafe.activity.AntiVirusActivity) -> g
    void access$9(com.itgold.mobilesafe.activity.AntiVirusActivity,int) -> a
    android.widget.TextView access$10(com.itgold.mobilesafe.activity.AntiVirusActivity) -> h
    com.github.lzyzsd.circleprogress.ArcProgress access$11(com.itgold.mobilesafe.activity.AntiVirusActivity) -> i
    void access$12(com.itgold.mobilesafe.activity.AntiVirusActivity,com.itgold.mobilesafe.activity.AntiVirusActivity$AntiVirusAdapter) -> a
    android.widget.ListView access$13(com.itgold.mobilesafe.activity.AntiVirusActivity) -> j
    com.itgold.mobilesafe.activity.AntiVirusActivity$AntiVirusAdapter access$14(com.itgold.mobilesafe.activity.AntiVirusActivity) -> k
    android.widget.TextView access$15(com.itgold.mobilesafe.activity.AntiVirusActivity) -> l
    android.widget.ImageView access$16(com.itgold.mobilesafe.activity.AntiVirusActivity) -> m
    android.graphics.Bitmap access$17(com.itgold.mobilesafe.activity.AntiVirusActivity,android.graphics.Bitmap) -> a
    android.widget.ImageView access$18(com.itgold.mobilesafe.activity.AntiVirusActivity) -> n
    android.graphics.Bitmap access$19(com.itgold.mobilesafe.activity.AntiVirusActivity,android.graphics.Bitmap) -> b
    void access$20(com.itgold.mobilesafe.activity.AntiVirusActivity) -> o
    void access$21(com.itgold.mobilesafe.activity.AntiVirusActivity) -> p
com.itgold.mobilesafe.activity.AntiVirusActivity$1 -> com.itgold.mobilesafe.activity.a:
    com.itgold.mobilesafe.activity.AntiVirusActivity this$0 -> a
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> a
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> c
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> b
com.itgold.mobilesafe.activity.AntiVirusActivity$2 -> com.itgold.mobilesafe.activity.b:
    com.itgold.mobilesafe.activity.AntiVirusActivity this$0 -> a
    void onAnimationStart(com.nineoldandroids.animation.Animator) -> a
    void onAnimationRepeat(com.nineoldandroids.animation.Animator) -> c
    void onAnimationEnd(com.nineoldandroids.animation.Animator) -> b
com.itgold.mobilesafe.activity.AntiVirusActivity$AntiVirusAdapter -> com.itgold.mobilesafe.activity.c:
    com.itgold.mobilesafe.activity.AntiVirusActivity this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.itgold.mobilesafe.activity.AntiVirusActivity$ScanTask -> com.itgold.mobilesafe.activity.d:
    int progress -> b
    int max -> c
    boolean isFinish -> d
    com.itgold.mobilesafe.activity.AntiVirusActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    void stop() -> a
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onProgressUpdate(com.itgold.mobilesafe.bean.AntiVirusInfo[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.itgold.mobilesafe.activity.AntiVirusActivity$ViewHolder -> com.itgold.mobilesafe.activity.e:
    android.widget.ImageView ivIcon -> a
    android.widget.TextView tvName -> b
    android.widget.TextView tvVirus -> c
    android.widget.ImageView ivClean -> d
    com.itgold.mobilesafe.activity.AntiVirusActivity this$0 -> e
com.itgold.mobilesafe.activity.AppLockActivity -> com.itgold.mobilesafe.activity.AppLockActivity:
    com.itgold.mobilesafe.view.SegementControlView mSegementControlView -> a
    android.widget.TextView mTvTip -> b
    android.widget.ListView mLvUnlock -> c
    android.widget.ListView mLvlock -> d
    java.util.List mUnlockDatas -> e
    java.util.List mLockDatas -> f
    android.widget.LinearLayout mLloading -> g
    com.itgold.mobilesafe.db.AppLockDao mDao -> h
    com.itgold.mobilesafe.activity.AppLockActivity$AppLockAdapter mUnlockAdapter -> i
    com.itgold.mobilesafe.activity.AppLockActivity$AppLockAdapter mLockAdapter -> j
    boolean isAnimation -> k
    void onCreate(android.os.Bundle) -> onCreate
    java.util.List access$0(com.itgold.mobilesafe.activity.AppLockActivity) -> a
    android.widget.TextView access$1(com.itgold.mobilesafe.activity.AppLockActivity) -> b
    java.util.List access$2(com.itgold.mobilesafe.activity.AppLockActivity) -> c
    boolean access$3(com.itgold.mobilesafe.activity.AppLockActivity) -> d
    void access$4(com.itgold.mobilesafe.activity.AppLockActivity,boolean) -> a
    com.itgold.mobilesafe.db.AppLockDao access$5(com.itgold.mobilesafe.activity.AppLockActivity) -> e
    com.itgold.mobilesafe.activity.AppLockActivity$AppLockAdapter access$6(com.itgold.mobilesafe.activity.AppLockActivity) -> f
    com.itgold.mobilesafe.activity.AppLockActivity$AppLockAdapter access$7(com.itgold.mobilesafe.activity.AppLockActivity) -> g
    android.widget.ListView access$8(com.itgold.mobilesafe.activity.AppLockActivity) -> h
    android.widget.ListView access$9(com.itgold.mobilesafe.activity.AppLockActivity) -> i
    android.widget.LinearLayout access$10(com.itgold.mobilesafe.activity.AppLockActivity) -> j
    void access$11(com.itgold.mobilesafe.activity.AppLockActivity,java.util.List) -> a
    void access$12(com.itgold.mobilesafe.activity.AppLockActivity,java.util.List) -> b
    void access$13(com.itgold.mobilesafe.activity.AppLockActivity,com.itgold.mobilesafe.activity.AppLockActivity$AppLockAdapter) -> a
    void access$14(com.itgold.mobilesafe.activity.AppLockActivity,com.itgold.mobilesafe.activity.AppLockActivity$AppLockAdapter) -> b
com.itgold.mobilesafe.activity.AppLockActivity$1 -> com.itgold.mobilesafe.activity.f:
    com.itgold.mobilesafe.activity.AppLockActivity this$0 -> a
    void onSelected(boolean) -> a
com.itgold.mobilesafe.activity.AppLockActivity$2 -> com.itgold.mobilesafe.activity.g:
    com.itgold.mobilesafe.activity.AppLockActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.itgold.mobilesafe.activity.AppLockActivity$AppLockAdapter -> com.itgold.mobilesafe.activity.h:
    boolean mLock -> b
    com.itgold.mobilesafe.activity.AppLockActivity this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    boolean access$0(com.itgold.mobilesafe.activity.AppLockActivity$AppLockAdapter) -> a
    com.itgold.mobilesafe.activity.AppLockActivity access$1(com.itgold.mobilesafe.activity.AppLockActivity$AppLockAdapter) -> b
com.itgold.mobilesafe.activity.AppLockActivity$AppLockAdapter$1 -> com.itgold.mobilesafe.activity.i:
    com.itgold.mobilesafe.activity.AppLockActivity$AppLockAdapter this$1 -> a
    android.view.View val$view -> b
    void onClick(android.view.View) -> onClick
    com.itgold.mobilesafe.activity.AppLockActivity$AppLockAdapter access$0(com.itgold.mobilesafe.activity.AppLockActivity$AppLockAdapter$1) -> a
com.itgold.mobilesafe.activity.AppLockActivity$AppLockAdapter$1$1 -> com.itgold.mobilesafe.activity.j:
    com.itgold.mobilesafe.activity.AppLockActivity$AppLockAdapter$1 this$2 -> a
    android.view.View val$view -> b
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.itgold.mobilesafe.activity.AppLockActivity$AppLockAdapter$1$2 -> com.itgold.mobilesafe.activity.k:
    com.itgold.mobilesafe.activity.AppLockActivity$AppLockAdapter$1 this$2 -> a
    android.view.View val$view -> b
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.itgold.mobilesafe.activity.AppLockActivity$ViewHolder -> com.itgold.mobilesafe.activity.l:
    android.widget.ImageView ivIcon -> a
    android.widget.ImageView ivLock -> b
    android.widget.TextView tvName -> c
    com.itgold.mobilesafe.activity.AppLockActivity this$0 -> d
com.itgold.mobilesafe.activity.AppManagerActivity -> com.itgold.mobilesafe.activity.AppManagerActivity:
    com.itgold.mobilesafe.view.ProgressDesView mPdvRom -> a
    com.itgold.mobilesafe.view.ProgressDesView mPdvSD -> b
    android.widget.ListView mListView -> c
    android.widget.LinearLayout mLlLoding -> d
    android.widget.TextView mTvHeader -> e
    java.util.List mDatas -> f
    java.util.List mSystemDatas -> g
    java.util.List mUserDatas -> h
    com.itgold.mobilesafe.activity.AppManagerActivity$AppAdapter mAdapter -> i
    android.content.BroadcastReceiver mPackageReceiver -> j
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    java.util.List access$0(com.itgold.mobilesafe.activity.AppManagerActivity) -> a
    com.itgold.mobilesafe.activity.AppManagerActivity$AppAdapter access$1(com.itgold.mobilesafe.activity.AppManagerActivity) -> b
    java.util.List access$2(com.itgold.mobilesafe.activity.AppManagerActivity) -> c
    void access$3(com.itgold.mobilesafe.activity.AppManagerActivity,java.util.List) -> a
    void access$4(com.itgold.mobilesafe.activity.AppManagerActivity,java.util.List) -> b
    void access$5(com.itgold.mobilesafe.activity.AppManagerActivity,java.util.List) -> c
    java.util.List access$6(com.itgold.mobilesafe.activity.AppManagerActivity) -> d
    android.widget.LinearLayout access$7(com.itgold.mobilesafe.activity.AppManagerActivity) -> e
    android.widget.TextView access$8(com.itgold.mobilesafe.activity.AppManagerActivity) -> f
    void access$9(com.itgold.mobilesafe.activity.AppManagerActivity,com.itgold.mobilesafe.activity.AppManagerActivity$AppAdapter) -> a
    android.widget.ListView access$10(com.itgold.mobilesafe.activity.AppManagerActivity) -> g
com.itgold.mobilesafe.activity.AppManagerActivity$1 -> com.itgold.mobilesafe.activity.m:
    com.itgold.mobilesafe.activity.AppManagerActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.itgold.mobilesafe.activity.AppManagerActivity$2 -> com.itgold.mobilesafe.activity.n:
    com.itgold.mobilesafe.activity.AppManagerActivity this$0 -> a
    void run() -> run
    com.itgold.mobilesafe.activity.AppManagerActivity access$0(com.itgold.mobilesafe.activity.AppManagerActivity$2) -> a
com.itgold.mobilesafe.activity.AppManagerActivity$2$1 -> com.itgold.mobilesafe.activity.o:
    com.itgold.mobilesafe.activity.AppManagerActivity$2 this$1 -> a
    void run() -> run
com.itgold.mobilesafe.activity.AppManagerActivity$3 -> com.itgold.mobilesafe.activity.p:
    com.itgold.mobilesafe.activity.AppManagerActivity this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
com.itgold.mobilesafe.activity.AppManagerActivity$4 -> com.itgold.mobilesafe.activity.q:
    android.widget.PopupWindow mWindow -> b
    android.view.View contentView -> c
    com.itgold.mobilesafe.activity.AppManagerActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    android.widget.PopupWindow access$0(com.itgold.mobilesafe.activity.AppManagerActivity$4) -> a
    com.itgold.mobilesafe.activity.AppManagerActivity access$1(com.itgold.mobilesafe.activity.AppManagerActivity$4) -> b
com.itgold.mobilesafe.activity.AppManagerActivity$4$1 -> com.itgold.mobilesafe.activity.r:
    com.itgold.mobilesafe.activity.AppManagerActivity$4 this$1 -> a
    com.itgold.mobilesafe.bean.AppInfo val$app -> b
    void onClick(android.view.View) -> onClick
com.itgold.mobilesafe.activity.AppManagerActivity$4$2 -> com.itgold.mobilesafe.activity.s:
    com.itgold.mobilesafe.activity.AppManagerActivity$4 this$1 -> a
    void onClick(android.view.View) -> onClick
com.itgold.mobilesafe.activity.AppManagerActivity$4$3 -> com.itgold.mobilesafe.activity.t:
    com.itgold.mobilesafe.activity.AppManagerActivity$4 this$1 -> a
    com.itgold.mobilesafe.bean.AppInfo val$app -> b
    void onClick(android.view.View) -> onClick
com.itgold.mobilesafe.activity.AppManagerActivity$4$4 -> com.itgold.mobilesafe.activity.u:
    com.itgold.mobilesafe.activity.AppManagerActivity$4 this$1 -> a
    com.itgold.mobilesafe.bean.AppInfo val$app -> b
    void onClick(android.view.View) -> onClick
com.itgold.mobilesafe.activity.AppManagerActivity$AppAdapter -> com.itgold.mobilesafe.activity.v:
    com.itgold.mobilesafe.activity.AppManagerActivity this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.itgold.mobilesafe.activity.AppManagerActivity$ViewHolder -> com.itgold.mobilesafe.activity.w:
    android.widget.ImageView ivIcon -> a
    android.widget.TextView tvName -> b
    android.widget.TextView tvInstallPath -> c
    android.widget.TextView tvSize -> d
    com.itgold.mobilesafe.activity.AppManagerActivity this$0 -> e
com.itgold.mobilesafe.activity.BaseSetupActivity -> com.itgold.mobilesafe.activity.x:
    android.view.GestureDetector mDetector -> a
    void onCreate(android.os.Bundle) -> onCreate
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void clickPre(android.view.View) -> clickPre
    void clickNext(android.view.View) -> clickNext
    void doPre() -> c
    void doNext() -> d
    boolean performPre() -> a
    boolean performNext() -> b
    void access$0(com.itgold.mobilesafe.activity.BaseSetupActivity) -> a
    void access$1(com.itgold.mobilesafe.activity.BaseSetupActivity) -> b
com.itgold.mobilesafe.activity.BaseSetupActivity$1 -> com.itgold.mobilesafe.activity.y:
    com.itgold.mobilesafe.activity.BaseSetupActivity this$0 -> a
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
com.itgold.mobilesafe.activity.BlackEditActivity -> com.itgold.mobilesafe.activity.BlackEditActivity:
    android.widget.TextView mTvTitle -> a
    android.widget.Button mBtnOk -> b
    android.widget.Button mBtnCancel -> c
    android.widget.EditText mEtNumber -> d
    android.widget.RadioGroup mRgType -> e
    int mCheckedId -> f
    boolean isUpdate -> g
    int mPosition -> h
    com.itgold.mobilesafe.db.BlackDao mDao -> i
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    void performCancel() -> a
    void performOk() -> b
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
com.itgold.mobilesafe.activity.CallSmsSafeActivity -> com.itgold.mobilesafe.activity.CallSmsSafeActivity:
    android.widget.ImageView mIvAdd -> a
    android.widget.ListView mListView -> b
    android.widget.LinearLayout mLlLoading -> c
    android.widget.ImageView mIvEmpty -> d
    java.util.List mDatas -> e
    com.itgold.mobilesafe.db.BlackDao mDao -> f
    com.itgold.mobilesafe.activity.CallSmsSafeActivity$CallSmsAdapter mAdapter -> g
    void onCreate(android.os.Bundle) -> onCreate
    void startQuery() -> a
    void startQuery(int,int) -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    java.util.List access$0(com.itgold.mobilesafe.activity.CallSmsSafeActivity) -> a
    com.itgold.mobilesafe.db.BlackDao access$1(com.itgold.mobilesafe.activity.CallSmsSafeActivity) -> b
    com.itgold.mobilesafe.activity.CallSmsSafeActivity$CallSmsAdapter access$2(com.itgold.mobilesafe.activity.CallSmsSafeActivity) -> c
    void access$3(com.itgold.mobilesafe.activity.CallSmsSafeActivity,int,int) -> a
    android.widget.ListView access$4(com.itgold.mobilesafe.activity.CallSmsSafeActivity) -> d
    android.widget.LinearLayout access$5(com.itgold.mobilesafe.activity.CallSmsSafeActivity) -> e
    void access$6(com.itgold.mobilesafe.activity.CallSmsSafeActivity,java.util.List) -> a
    void access$7(com.itgold.mobilesafe.activity.CallSmsSafeActivity,com.itgold.mobilesafe.activity.CallSmsSafeActivity$CallSmsAdapter) -> a
    android.widget.ImageView access$8(com.itgold.mobilesafe.activity.CallSmsSafeActivity) -> f
com.itgold.mobilesafe.activity.CallSmsSafeActivity$1 -> com.itgold.mobilesafe.activity.z:
    com.itgold.mobilesafe.activity.CallSmsSafeActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.itgold.mobilesafe.activity.CallSmsSafeActivity$2 -> com.itgold.mobilesafe.activity.aa:
    com.itgold.mobilesafe.activity.CallSmsSafeActivity this$0 -> a
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    com.itgold.mobilesafe.activity.CallSmsSafeActivity access$0(com.itgold.mobilesafe.activity.CallSmsSafeActivity$2) -> a
com.itgold.mobilesafe.activity.CallSmsSafeActivity$2$1 -> com.itgold.mobilesafe.activity.ab:
    com.itgold.mobilesafe.activity.CallSmsSafeActivity$2 this$1 -> a
    void run() -> run
    com.itgold.mobilesafe.activity.CallSmsSafeActivity$2 access$0(com.itgold.mobilesafe.activity.CallSmsSafeActivity$2$1) -> a
com.itgold.mobilesafe.activity.CallSmsSafeActivity$2$1$1 -> com.itgold.mobilesafe.activity.ac:
    com.itgold.mobilesafe.activity.CallSmsSafeActivity$2$1 this$2 -> a
    void run() -> run
com.itgold.mobilesafe.activity.CallSmsSafeActivity$2$1$2 -> com.itgold.mobilesafe.activity.ad:
    com.itgold.mobilesafe.activity.CallSmsSafeActivity$2$1 this$2 -> a
    void run() -> run
com.itgold.mobilesafe.activity.CallSmsSafeActivity$3 -> com.itgold.mobilesafe.activity.ae:
    com.itgold.mobilesafe.activity.CallSmsSafeActivity this$0 -> a
    void run() -> run
    com.itgold.mobilesafe.activity.CallSmsSafeActivity access$0(com.itgold.mobilesafe.activity.CallSmsSafeActivity$3) -> a
com.itgold.mobilesafe.activity.CallSmsSafeActivity$3$1 -> com.itgold.mobilesafe.activity.af:
    com.itgold.mobilesafe.activity.CallSmsSafeActivity$3 this$1 -> a
    void run() -> run
com.itgold.mobilesafe.activity.CallSmsSafeActivity$4 -> com.itgold.mobilesafe.activity.ag:
    com.itgold.mobilesafe.activity.CallSmsSafeActivity this$0 -> a
    int val$pageSize -> b
    int val$offset -> c
    void run() -> run
    com.itgold.mobilesafe.activity.CallSmsSafeActivity access$0(com.itgold.mobilesafe.activity.CallSmsSafeActivity$4) -> a
com.itgold.mobilesafe.activity.CallSmsSafeActivity$4$1 -> com.itgold.mobilesafe.activity.ah:
    com.itgold.mobilesafe.activity.CallSmsSafeActivity$4 this$1 -> a
    java.util.List val$part -> b
    void run() -> run
com.itgold.mobilesafe.activity.CallSmsSafeActivity$CallSmsAdapter -> com.itgold.mobilesafe.activity.ai:
    com.itgold.mobilesafe.activity.CallSmsSafeActivity this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.itgold.mobilesafe.activity.CallSmsSafeActivity access$1(com.itgold.mobilesafe.activity.CallSmsSafeActivity$CallSmsAdapter) -> a
com.itgold.mobilesafe.activity.CallSmsSafeActivity$CallSmsAdapter$1 -> com.itgold.mobilesafe.activity.aj:
    com.itgold.mobilesafe.activity.CallSmsSafeActivity$CallSmsAdapter this$1 -> a
    com.itgold.mobilesafe.bean.BlackInfo val$info -> b
    void onClick(android.view.View) -> onClick
com.itgold.mobilesafe.activity.CallSmsSafeActivity$ViewHolder -> com.itgold.mobilesafe.activity.ak:
    android.widget.TextView tvNumber -> a
    android.widget.TextView tvType -> b
    android.widget.ImageView ivDelete -> c
    com.itgold.mobilesafe.activity.CallSmsSafeActivity this$0 -> d
com.itgold.mobilesafe.activity.CleanCacheActivity -> com.itgold.mobilesafe.activity.CleanCacheActivity:
    java.util.List mDatas -> b
    android.content.pm.PackageManager mPm -> c
    android.widget.ImageView mIvScanIcon -> d
    android.widget.ImageView mIvScanLine -> e
    android.widget.TextView mTvScanName -> f
    android.widget.TextView mTvScanCache -> g
    android.widget.ProgressBar mPbProgress -> h
    android.widget.RelativeLayout mRlContainerScan -> i
    android.widget.RelativeLayout mRlContainerResult -> j
    android.widget.TextView mTvResult -> k
    android.widget.ListView mListView -> l
    com.itgold.mobilesafe.activity.CleanCacheActivity$CleanCacheAdapter mAapter -> m
    com.itgold.mobilesafe.activity.CleanCacheActivity$ScanTask mTask -> n
    int mAppCacheCount -> o
    long mTotalCacheSize -> p
    android.widget.Button mBtnClearAll -> q
    android.content.pm.IPackageStatsObserver$Stub mStatsObserver -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void startScan(android.view.View) -> startScan
    void startScan() -> startScan
    void onClick(android.view.View) -> onClick
    android.content.pm.PackageManager access$0(com.itgold.mobilesafe.activity.CleanCacheActivity) -> a
    java.util.List access$1(com.itgold.mobilesafe.activity.CleanCacheActivity) -> b
    int access$2(com.itgold.mobilesafe.activity.CleanCacheActivity) -> c
    void access$3(com.itgold.mobilesafe.activity.CleanCacheActivity,int) -> a
    long access$4(com.itgold.mobilesafe.activity.CleanCacheActivity) -> d
    void access$5(com.itgold.mobilesafe.activity.CleanCacheActivity,long) -> a
    com.itgold.mobilesafe.activity.CleanCacheActivity$ScanTask access$6(com.itgold.mobilesafe.activity.CleanCacheActivity) -> e
    android.widget.ImageView access$7(com.itgold.mobilesafe.activity.CleanCacheActivity) -> f
    android.widget.RelativeLayout access$8(com.itgold.mobilesafe.activity.CleanCacheActivity) -> g
    android.widget.RelativeLayout access$9(com.itgold.mobilesafe.activity.CleanCacheActivity) -> h
    android.widget.Button access$10(com.itgold.mobilesafe.activity.CleanCacheActivity) -> i
    void access$11(com.itgold.mobilesafe.activity.CleanCacheActivity,java.util.List) -> a
    android.widget.ImageView access$12(com.itgold.mobilesafe.activity.CleanCacheActivity) -> j
    android.widget.TextView access$13(com.itgold.mobilesafe.activity.CleanCacheActivity) -> k
    android.widget.ProgressBar access$14(com.itgold.mobilesafe.activity.CleanCacheActivity) -> l
    android.widget.TextView access$15(com.itgold.mobilesafe.activity.CleanCacheActivity) -> m
    void access$16(com.itgold.mobilesafe.activity.CleanCacheActivity,com.itgold.mobilesafe.activity.CleanCacheActivity$CleanCacheAdapter) -> a
    android.widget.ListView access$17(com.itgold.mobilesafe.activity.CleanCacheActivity) -> n
    com.itgold.mobilesafe.activity.CleanCacheActivity$CleanCacheAdapter access$18(com.itgold.mobilesafe.activity.CleanCacheActivity) -> o
    android.widget.TextView access$19(com.itgold.mobilesafe.activity.CleanCacheActivity) -> p
com.itgold.mobilesafe.activity.CleanCacheActivity$1 -> com.itgold.mobilesafe.activity.al:
    com.itgold.mobilesafe.activity.CleanCacheActivity this$0 -> a
    void onGetStatsCompleted(android.content.pm.PackageStats,boolean) -> onGetStatsCompleted
com.itgold.mobilesafe.activity.CleanCacheActivity$CleanCacheAdapter -> com.itgold.mobilesafe.activity.am:
    com.itgold.mobilesafe.activity.CleanCacheActivity this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    com.itgold.mobilesafe.activity.CleanCacheActivity access$1(com.itgold.mobilesafe.activity.CleanCacheActivity$CleanCacheAdapter) -> a
com.itgold.mobilesafe.activity.CleanCacheActivity$CleanCacheAdapter$1 -> com.itgold.mobilesafe.activity.an:
    com.itgold.mobilesafe.activity.CleanCacheActivity$CleanCacheAdapter this$1 -> a
    com.itgold.mobilesafe.bean.CacheInfo val$info -> b
    void onClick(android.view.View) -> onClick
com.itgold.mobilesafe.activity.CleanCacheActivity$ClearCacheObserver -> com.itgold.mobilesafe.activity.ao:
    com.itgold.mobilesafe.activity.CleanCacheActivity this$0 -> a
    void onRemoveCompleted(java.lang.String,boolean) -> onRemoveCompleted
    com.itgold.mobilesafe.activity.CleanCacheActivity access$0(com.itgold.mobilesafe.activity.CleanCacheActivity$ClearCacheObserver) -> a
com.itgold.mobilesafe.activity.CleanCacheActivity$ClearCacheObserver$1 -> com.itgold.mobilesafe.activity.ap:
    com.itgold.mobilesafe.activity.CleanCacheActivity$ClearCacheObserver this$1 -> a
    void run() -> run
com.itgold.mobilesafe.activity.CleanCacheActivity$ScanTask -> com.itgold.mobilesafe.activity.aq:
    int progress -> b
    int max -> c
    boolean isFinish -> d
    com.itgold.mobilesafe.activity.CleanCacheActivity this$0 -> a
    void onPreExecute() -> onPreExecute
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void updateProgress(com.itgold.mobilesafe.bean.CacheInfo[]) -> a
    void onProgressUpdate(com.itgold.mobilesafe.bean.CacheInfo[]) -> b
    void onPostExecute(java.lang.Void) -> a
    void stop() -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.itgold.mobilesafe.activity.CleanCacheActivity$ViewHolder -> com.itgold.mobilesafe.activity.ar:
    android.widget.ImageView ivIcon -> a
    android.widget.ImageView ivClean -> b
    android.widget.TextView tvName -> c
    android.widget.TextView tvCache -> d
    com.itgold.mobilesafe.activity.CleanCacheActivity this$0 -> e
com.itgold.mobilesafe.activity.CommonNumberActivity -> com.itgold.mobilesafe.activity.CommonNumberActivity:
    android.widget.ExpandableListView mListView -> a
    int mCurrentOpenPosition -> b
    void onCreate(android.os.Bundle) -> onCreate
    int access$0(com.itgold.mobilesafe.activity.CommonNumberActivity) -> a
    android.widget.ExpandableListView access$1(com.itgold.mobilesafe.activity.CommonNumberActivity) -> b
    void access$2(com.itgold.mobilesafe.activity.CommonNumberActivity,int) -> a
com.itgold.mobilesafe.activity.CommonNumberActivity$1 -> com.itgold.mobilesafe.activity.as:
    com.itgold.mobilesafe.activity.CommonNumberActivity this$0 -> a
    boolean onGroupClick(android.widget.ExpandableListView,android.view.View,int,long) -> onGroupClick
com.itgold.mobilesafe.activity.CommonNumberActivity$2 -> com.itgold.mobilesafe.activity.at:
    com.itgold.mobilesafe.activity.CommonNumberActivity this$0 -> a
    boolean onChildClick(android.widget.ExpandableListView,android.view.View,int,int,long) -> onChildClick
com.itgold.mobilesafe.activity.CommonNumberActivity$3 -> com.itgold.mobilesafe.activity.au:
    com.itgold.mobilesafe.activity.CommonNumberActivity this$0 -> a
    void onGroupExpand(int) -> onGroupExpand
com.itgold.mobilesafe.activity.CommonNumberActivity$4 -> com.itgold.mobilesafe.activity.av:
    com.itgold.mobilesafe.activity.CommonNumberActivity this$0 -> a
    void onGroupCollapse(int) -> onGroupCollapse
com.itgold.mobilesafe.activity.CommonNumberActivity$CommonNumberAdapter -> com.itgold.mobilesafe.activity.aw:
    com.itgold.mobilesafe.activity.CommonNumberActivity this$0 -> a
    int getGroupCount() -> getGroupCount
    int getChildrenCount(int) -> getChildrenCount
    java.lang.Object getGroup(int) -> getGroup
    java.lang.Object getChild(int,int) -> getChild
    long getGroupId(int) -> getGroupId
    long getChildId(int,int) -> getChildId
    boolean hasStableIds() -> hasStableIds
    android.view.View getGroupView(int,boolean,android.view.View,android.view.ViewGroup) -> getGroupView
    android.view.View getChildView(int,int,boolean,android.view.View,android.view.ViewGroup) -> getChildView
    boolean isChildSelectable(int,int) -> isChildSelectable
com.itgold.mobilesafe.activity.CommonToolActivity -> com.itgold.mobilesafe.activity.CommonToolActivity:
    com.itgold.mobilesafe.view.SettingItemView mSivNumberAddress -> a
    com.itgold.mobilesafe.view.SettingItemView mSivCommonNumber -> b
    com.itgold.mobilesafe.view.SettingItemView mSivSmsbackup -> c
    com.itgold.mobilesafe.view.SettingItemView mSivSmsrestore -> d
    com.itgold.mobilesafe.view.SettingItemView mSivWatchDog1 -> e
    com.itgold.mobilesafe.view.SettingItemView mSivWatchDog2 -> f
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void smsBackup() -> a
    void smsRestore() -> b
    void clickAppLock(android.view.View) -> clickAppLock
    void access$0(com.itgold.mobilesafe.activity.CommonToolActivity) -> a
    void access$1(com.itgold.mobilesafe.activity.CommonToolActivity) -> b
    com.itgold.mobilesafe.view.SettingItemView access$2(com.itgold.mobilesafe.activity.CommonToolActivity) -> c
com.itgold.mobilesafe.activity.CommonToolActivity$1 -> com.itgold.mobilesafe.activity.ax:
    com.itgold.mobilesafe.activity.CommonToolActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.itgold.mobilesafe.activity.CommonToolActivity$2 -> com.itgold.mobilesafe.activity.ay:
    com.itgold.mobilesafe.activity.CommonToolActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.itgold.mobilesafe.activity.CommonToolActivity$3 -> com.itgold.mobilesafe.activity.az:
    com.itgold.mobilesafe.activity.CommonToolActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.itgold.mobilesafe.activity.CommonToolActivity$4 -> com.itgold.mobilesafe.activity.ba:
    com.itgold.mobilesafe.activity.CommonToolActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.itgold.mobilesafe.activity.CommonToolActivity$5 -> com.itgold.mobilesafe.activity.bb:
    com.itgold.mobilesafe.activity.CommonToolActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.itgold.mobilesafe.activity.CommonToolActivity$6 -> com.itgold.mobilesafe.activity.bc:
    com.itgold.mobilesafe.activity.CommonToolActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.itgold.mobilesafe.activity.CommonToolActivity$7 -> com.itgold.mobilesafe.activity.bd:
    com.itgold.mobilesafe.activity.CommonToolActivity this$0 -> a
    android.app.ProgressDialog val$dialog -> b
    void onSucess() -> a
    void onProgress(int) -> a
    void onMax(int) -> b
    void onFailed() -> b
com.itgold.mobilesafe.activity.CommonToolActivity$8 -> com.itgold.mobilesafe.activity.be:
    com.itgold.mobilesafe.activity.CommonToolActivity this$0 -> a
    android.app.ProgressDialog val$dialog -> b
    void onSucess() -> a
    void onProgress(int) -> a
    void onMax(int) -> b
    void onFailed() -> b
com.itgold.mobilesafe.activity.ContactSelectedActivity -> com.itgold.mobilesafe.activity.ContactSelectedActivity:
    android.widget.ListView mListView -> a
    android.widget.ProgressBar mProgressBar -> b
    java.util.List mDatas -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    java.util.List access$0(com.itgold.mobilesafe.activity.ContactSelectedActivity) -> a
    void access$1(com.itgold.mobilesafe.activity.ContactSelectedActivity,java.util.List) -> a
    android.widget.ProgressBar access$2(com.itgold.mobilesafe.activity.ContactSelectedActivity) -> b
    android.widget.ListView access$3(com.itgold.mobilesafe.activity.ContactSelectedActivity) -> c
com.itgold.mobilesafe.activity.ContactSelectedActivity$1 -> com.itgold.mobilesafe.activity.bf:
    com.itgold.mobilesafe.activity.ContactSelectedActivity this$0 -> a
    void run() -> run
    com.itgold.mobilesafe.activity.ContactSelectedActivity access$0(com.itgold.mobilesafe.activity.ContactSelectedActivity$1) -> a
com.itgold.mobilesafe.activity.ContactSelectedActivity$1$1 -> com.itgold.mobilesafe.activity.bg:
    com.itgold.mobilesafe.activity.ContactSelectedActivity$1 this$1 -> a
    void run() -> run
com.itgold.mobilesafe.activity.ContactSelectedActivity$ContactAdapter -> com.itgold.mobilesafe.activity.bh:
    com.itgold.mobilesafe.activity.ContactSelectedActivity this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.itgold.mobilesafe.activity.ContactSelectedActivity$ViewHolder -> com.itgold.mobilesafe.activity.bi:
    android.widget.ImageView ivIcon -> a
    android.widget.TextView tvName -> b
    android.widget.TextView tvNumber -> c
com.itgold.mobilesafe.activity.ContactSelectedActivity2 -> com.itgold.mobilesafe.activity.ContactSelectedActivity2:
    android.widget.ListView mListView -> a
    android.widget.ProgressBar mProgressBar -> b
    android.database.Cursor mCursor -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void access$0(com.itgold.mobilesafe.activity.ContactSelectedActivity2,android.database.Cursor) -> a
    android.widget.ProgressBar access$1(com.itgold.mobilesafe.activity.ContactSelectedActivity2) -> a
    android.widget.ListView access$2(com.itgold.mobilesafe.activity.ContactSelectedActivity2) -> b
    android.database.Cursor access$3(com.itgold.mobilesafe.activity.ContactSelectedActivity2) -> c
com.itgold.mobilesafe.activity.ContactSelectedActivity2$1 -> com.itgold.mobilesafe.activity.bj:
    com.itgold.mobilesafe.activity.ContactSelectedActivity2 this$0 -> a
    void run() -> run
    com.itgold.mobilesafe.activity.ContactSelectedActivity2 access$0(com.itgold.mobilesafe.activity.ContactSelectedActivity2$1) -> a
com.itgold.mobilesafe.activity.ContactSelectedActivity2$1$1 -> com.itgold.mobilesafe.activity.bk:
    com.itgold.mobilesafe.activity.ContactSelectedActivity2$1 this$1 -> a
    void run() -> run
com.itgold.mobilesafe.activity.ContactSelectedActivity2$ContactAdapter -> com.itgold.mobilesafe.activity.bl:
    com.itgold.mobilesafe.activity.ContactSelectedActivity2 this$0 -> j
    android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> a
    void bindView(android.view.View,android.content.Context,android.database.Cursor) -> a
com.itgold.mobilesafe.activity.HomeActivity -> com.itgold.mobilesafe.activity.HomeActivity:
    java.lang.String[] TITLES -> a
    java.lang.String[] DESCS -> b
    int[] ICONS -> c
    android.widget.ImageView mIvLogo -> d
    android.widget.GridView mGridView -> e
    java.util.List mDatas -> f
    void onCreate(android.os.Bundle) -> onCreate
    void clickSetting(android.view.View) -> clickSetting
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void performAntiVirus() -> a
    void performTraffic() -> b
    void performCleanCache() -> c
    void performProcessManager() -> d
    void performAppManager() -> e
    void performCommonTool() -> f
    void performCallSmsSafe() -> g
    void performSjfd() -> h
    void showEnterPwdDialog() -> i
    void showInitPwdDialog() -> j
    void enterSjfd() -> k
    java.util.List access$0(com.itgold.mobilesafe.activity.HomeActivity) -> a
    void access$1(com.itgold.mobilesafe.activity.HomeActivity) -> b
com.itgold.mobilesafe.activity.HomeActivity$1 -> com.itgold.mobilesafe.activity.bm:
    com.itgold.mobilesafe.activity.HomeActivity this$0 -> a
    android.widget.EditText val$etPwd -> b
    android.app.AlertDialog val$dialog -> c
    void onClick(android.view.View) -> onClick
com.itgold.mobilesafe.activity.HomeActivity$2 -> com.itgold.mobilesafe.activity.bn:
    com.itgold.mobilesafe.activity.HomeActivity this$0 -> a
    android.app.AlertDialog val$dialog -> b
    void onClick(android.view.View) -> onClick
com.itgold.mobilesafe.activity.HomeActivity$3 -> com.itgold.mobilesafe.activity.bo:
    com.itgold.mobilesafe.activity.HomeActivity this$0 -> a
    android.widget.EditText val$etPwd -> b
    android.widget.EditText val$etConfirm -> c
    android.app.AlertDialog val$dialog -> d
    void onClick(android.view.View) -> onClick
com.itgold.mobilesafe.activity.HomeActivity$4 -> com.itgold.mobilesafe.activity.bp:
    com.itgold.mobilesafe.activity.HomeActivity this$0 -> a
    android.app.AlertDialog val$dialog -> b
    void onClick(android.view.View) -> onClick
com.itgold.mobilesafe.activity.HomeActivity$HomeAdatper -> com.itgold.mobilesafe.activity.bq:
    com.itgold.mobilesafe.activity.HomeActivity this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.itgold.mobilesafe.activity.LockScreenActivity -> com.itgold.mobilesafe.activity.LockScreenActivity:
    android.widget.EditText mEtPwd -> a
    android.widget.TextView mTvName -> b
    android.widget.ImageView mIvIcon -> c
    java.lang.String mPackageName -> d
    void onCreate(android.os.Bundle) -> onCreate
    void clickOk(android.view.View) -> clickOk
    void onBackPressed() -> onBackPressed
com.itgold.mobilesafe.activity.LostFindActivity -> com.itgold.mobilesafe.activity.LostFindActivity:
    android.widget.TextView mTvNumber -> a
    android.widget.ImageView mIvProtecting -> b
    android.widget.RelativeLayout mRlProtecting -> c
    android.widget.RelativeLayout mRlSetup -> d
    void onCreate(android.os.Bundle) -> onCreate
    android.widget.ImageView access$0(com.itgold.mobilesafe.activity.LostFindActivity) -> a
com.itgold.mobilesafe.activity.LostFindActivity$1 -> com.itgold.mobilesafe.activity.br:
    com.itgold.mobilesafe.activity.LostFindActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.itgold.mobilesafe.activity.LostFindActivity$2 -> com.itgold.mobilesafe.activity.bs:
    com.itgold.mobilesafe.activity.LostFindActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.itgold.mobilesafe.activity.LostSetup1Activity -> com.itgold.mobilesafe.activity.LostSetup1Activity:
    void onCreate(android.os.Bundle) -> onCreate
    boolean performNext() -> b
    boolean performPre() -> a
com.itgold.mobilesafe.activity.LostSetup2Activity -> com.itgold.mobilesafe.activity.LostSetup2Activity:
    android.widget.RelativeLayout mRlBind -> a
    android.widget.ImageView mIvLock -> b
    android.telephony.TelephonyManager mTm -> c
    void onCreate(android.os.Bundle) -> onCreate
    boolean performPre() -> a
    boolean performNext() -> b
    android.telephony.TelephonyManager access$0(com.itgold.mobilesafe.activity.LostSetup2Activity) -> a
    android.widget.ImageView access$1(com.itgold.mobilesafe.activity.LostSetup2Activity) -> b
com.itgold.mobilesafe.activity.LostSetup2Activity$1 -> com.itgold.mobilesafe.activity.bt:
    com.itgold.mobilesafe.activity.LostSetup2Activity this$0 -> a
    void onClick(android.view.View) -> onClick
com.itgold.mobilesafe.activity.LostSetup3Activity -> com.itgold.mobilesafe.activity.LostSetup3Activity:
    android.widget.EditText mEtNumber -> a
    void onCreate(android.os.Bundle) -> onCreate
    void clickContact(android.view.View) -> clickContact
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    boolean performPre() -> a
    boolean performNext() -> b
com.itgold.mobilesafe.activity.LostSetup4Activity -> com.itgold.mobilesafe.activity.LostSetup4Activity:
    android.widget.RelativeLayout mRlAdmin -> a
    android.widget.ImageView mIvAdmin -> b
    android.app.admin.DevicePolicyManager mDpm -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    boolean performPre() -> a
    boolean performNext() -> b
    android.app.admin.DevicePolicyManager access$0(com.itgold.mobilesafe.activity.LostSetup4Activity) -> a
    android.widget.ImageView access$1(com.itgold.mobilesafe.activity.LostSetup4Activity) -> b
com.itgold.mobilesafe.activity.LostSetup4Activity$1 -> com.itgold.mobilesafe.activity.bu:
    com.itgold.mobilesafe.activity.LostSetup4Activity this$0 -> a
    android.content.ComponentName val$who -> b
    void onClick(android.view.View) -> onClick
com.itgold.mobilesafe.activity.LostSetup5Activity -> com.itgold.mobilesafe.activity.LostSetup5Activity:
    android.widget.CheckBox mCb -> a
    void onCreate(android.os.Bundle) -> onCreate
    boolean performPre() -> a
    boolean performNext() -> b
com.itgold.mobilesafe.activity.LostSetup5Activity$1 -> com.itgold.mobilesafe.activity.bv:
    com.itgold.mobilesafe.activity.LostSetup5Activity this$0 -> a
    void onCheckedChanged(android.widget.CompoundButton,boolean) -> onCheckedChanged
com.itgold.mobilesafe.activity.NumberAddressQueryActivity -> com.itgold.mobilesafe.activity.NumberAddressQueryActivity:
    android.widget.EditText mEtNumber -> a
    android.widget.Button mBtnQuery -> b
    android.widget.TextView mTvAddress -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onClick(android.view.View) -> onClick
    void doQuery() -> a
    android.widget.TextView access$0(com.itgold.mobilesafe.activity.NumberAddressQueryActivity) -> a
com.itgold.mobilesafe.activity.NumberAddressQueryActivity$1 -> com.itgold.mobilesafe.activity.bw:
    com.itgold.mobilesafe.activity.NumberAddressQueryActivity this$0 -> a
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void afterTextChanged(android.text.Editable) -> afterTextChanged
com.itgold.mobilesafe.activity.ProcessManagerActivity -> com.itgold.mobilesafe.activity.ProcessManagerActivity:
    com.itgold.mobilesafe.view.ProgressDesView mPdvProcess -> a
    com.itgold.mobilesafe.view.ProgressDesView mPdvMemory -> b
    se.emilsjolander.stickylistheaders.StickyListHeadersListView mListView -> c
    android.widget.LinearLayout mLloading -> d
    android.widget.ImageView mIvArrow1 -> e
    android.widget.ImageView mIvArrow2 -> f
    android.widget.SlidingDrawer mDrawer -> g
    com.itgold.mobilesafe.view.SettingItemView mSivShowSystem -> h
    com.itgold.mobilesafe.view.SettingItemView mSivAutoClean -> i
    boolean showSystem -> j
    java.util.List mDatas -> k
    java.util.List mUserDatas -> l
    java.util.List mSystemDatas -> m
    com.itgold.mobilesafe.activity.ProcessManagerActivity$ProcessAdapter mAdapter -> n
    int mRunningProcessCount -> o
    int mTotalProcessCount -> p
    long mFreeMemory -> q
    long mTotalMemory -> r
    void onCreate(android.os.Bundle) -> onCreate
    void startQuery() -> a
    void onStart() -> onStart
    void showDownArrow() -> b
    void showUPAnimation() -> c
    void initMemoryUI() -> d
    void initProcessUI() -> e
    void clickAll(android.view.View) -> clickAll
    void clickReverse(android.view.View) -> clickReverse
    void clickClean(android.view.View) -> clickClean
    boolean access$0(com.itgold.mobilesafe.activity.ProcessManagerActivity) -> a
    java.util.List access$1(com.itgold.mobilesafe.activity.ProcessManagerActivity) -> b
    java.util.List access$2(com.itgold.mobilesafe.activity.ProcessManagerActivity) -> c
    java.util.List access$3(com.itgold.mobilesafe.activity.ProcessManagerActivity) -> d
    com.itgold.mobilesafe.activity.ProcessManagerActivity$ProcessAdapter access$4(com.itgold.mobilesafe.activity.ProcessManagerActivity) -> e
    void access$5(com.itgold.mobilesafe.activity.ProcessManagerActivity) -> f
    void access$6(com.itgold.mobilesafe.activity.ProcessManagerActivity) -> g
    com.itgold.mobilesafe.view.SettingItemView access$7(com.itgold.mobilesafe.activity.ProcessManagerActivity) -> h
    void access$8(com.itgold.mobilesafe.activity.ProcessManagerActivity,boolean) -> a
    com.itgold.mobilesafe.view.SettingItemView access$9(com.itgold.mobilesafe.activity.ProcessManagerActivity) -> i
    void access$10(com.itgold.mobilesafe.activity.ProcessManagerActivity,java.util.List) -> a
    void access$11(com.itgold.mobilesafe.activity.ProcessManagerActivity,java.util.List) -> b
    void access$12(com.itgold.mobilesafe.activity.ProcessManagerActivity,java.util.List) -> c
    android.widget.LinearLayout access$13(com.itgold.mobilesafe.activity.ProcessManagerActivity) -> j
    void access$14(com.itgold.mobilesafe.activity.ProcessManagerActivity,com.itgold.mobilesafe.activity.ProcessManagerActivity$ProcessAdapter) -> a
    se.emilsjolander.stickylistheaders.StickyListHeadersListView access$15(com.itgold.mobilesafe.activity.ProcessManagerActivity) -> k
com.itgold.mobilesafe.activity.ProcessManagerActivity$1 -> com.itgold.mobilesafe.activity.bx:
    com.itgold.mobilesafe.activity.ProcessManagerActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.itgold.mobilesafe.activity.ProcessManagerActivity$2 -> com.itgold.mobilesafe.activity.by:
    com.itgold.mobilesafe.activity.ProcessManagerActivity this$0 -> a
    void onDrawerOpened() -> onDrawerOpened
com.itgold.mobilesafe.activity.ProcessManagerActivity$3 -> com.itgold.mobilesafe.activity.bz:
    com.itgold.mobilesafe.activity.ProcessManagerActivity this$0 -> a
    void onDrawerClosed() -> onDrawerClosed
com.itgold.mobilesafe.activity.ProcessManagerActivity$4 -> com.itgold.mobilesafe.activity.ca:
    com.itgold.mobilesafe.activity.ProcessManagerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.itgold.mobilesafe.activity.ProcessManagerActivity$5 -> com.itgold.mobilesafe.activity.cb:
    com.itgold.mobilesafe.activity.ProcessManagerActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.itgold.mobilesafe.activity.ProcessManagerActivity$6 -> com.itgold.mobilesafe.activity.cc:
    com.itgold.mobilesafe.activity.ProcessManagerActivity this$0 -> a
    void run() -> run
    com.itgold.mobilesafe.activity.ProcessManagerActivity access$0(com.itgold.mobilesafe.activity.ProcessManagerActivity$6) -> a
com.itgold.mobilesafe.activity.ProcessManagerActivity$6$1 -> com.itgold.mobilesafe.activity.cd:
    com.itgold.mobilesafe.activity.ProcessManagerActivity$6 this$1 -> a
    void run() -> run
com.itgold.mobilesafe.activity.ProcessManagerActivity$ProcessAdapter -> com.itgold.mobilesafe.activity.ce:
    com.itgold.mobilesafe.activity.ProcessManagerActivity this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    android.view.View getHeaderView(int,android.view.View,android.view.ViewGroup) -> a
    long getHeaderId(int) -> a
com.itgold.mobilesafe.activity.ProcessManagerActivity$ViewHolder -> com.itgold.mobilesafe.activity.cf:
    android.widget.ImageView ivIcon -> a
    android.widget.TextView tvName -> b
    android.widget.TextView tvMemory -> c
    android.widget.CheckBox cbChoice -> d
    com.itgold.mobilesafe.activity.ProcessManagerActivity this$0 -> e
com.itgold.mobilesafe.activity.SettingActivity -> com.itgold.mobilesafe.activity.SettingActivity:
    com.itgold.mobilesafe.view.SettingItemView mSivAutoUpdate -> a
    com.itgold.mobilesafe.view.SettingItemView mSivCallSmsSafe -> b
    com.itgold.mobilesafe.view.SettingItemView mSivNumberAddress -> c
    com.itgold.mobilesafe.view.SettingItemView mSivAddressStyle -> d
    java.lang.String[] titles -> e
    int[] icons -> f
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    java.lang.String[] access$0(com.itgold.mobilesafe.activity.SettingActivity) -> a
    int[] access$1(com.itgold.mobilesafe.activity.SettingActivity) -> b
    com.itgold.mobilesafe.view.SettingItemView access$2(com.itgold.mobilesafe.activity.SettingActivity) -> c
    com.itgold.mobilesafe.view.SettingItemView access$3(com.itgold.mobilesafe.activity.SettingActivity) -> d
    com.itgold.mobilesafe.view.SettingItemView access$4(com.itgold.mobilesafe.activity.SettingActivity) -> e
com.itgold.mobilesafe.activity.SettingActivity$1 -> com.itgold.mobilesafe.activity.cg:
    com.itgold.mobilesafe.activity.SettingActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.itgold.mobilesafe.activity.SettingActivity$2 -> com.itgold.mobilesafe.activity.ch:
    com.itgold.mobilesafe.activity.SettingActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.itgold.mobilesafe.activity.SettingActivity$3 -> com.itgold.mobilesafe.activity.ci:
    com.itgold.mobilesafe.activity.SettingActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.itgold.mobilesafe.activity.SettingActivity$4 -> com.itgold.mobilesafe.activity.cj:
    com.itgold.mobilesafe.activity.SettingActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.itgold.mobilesafe.activity.SettingActivity access$0(com.itgold.mobilesafe.activity.SettingActivity$4) -> a
com.itgold.mobilesafe.activity.SettingActivity$4$1 -> com.itgold.mobilesafe.activity.ck:
    com.itgold.mobilesafe.activity.SettingActivity$4 this$1 -> a
    com.itgold.mobilesafe.view.AddressDialog val$dialog -> b
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.itgold.mobilesafe.activity.SettingActivity$AddressAdapter -> com.itgold.mobilesafe.activity.cl:
    com.itgold.mobilesafe.activity.SettingActivity this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.itgold.mobilesafe.activity.SettingActivity$ViewHolder -> com.itgold.mobilesafe.activity.cm:
    android.widget.ImageView ivIcon -> a
    android.widget.ImageView ivSelected -> b
    android.widget.TextView tvTitle -> c
    com.itgold.mobilesafe.activity.SettingActivity this$0 -> d
com.itgold.mobilesafe.activity.SplashActivity -> com.itgold.mobilesafe.activity.SplashActivity:
    android.widget.TextView mTvVersion -> b
    java.lang.String mDesc -> c
    android.os.Handler mHandler -> d
    java.lang.String mUrl -> a
    void onCreate(android.os.Bundle) -> onCreate
    void copyVirusDB() -> a
    void copyCommonNumberDB() -> b
    void copyAddressDB() -> c
    void close(java.io.Closeable) -> a
    void load2Home() -> d
    void showUpdateDialog() -> e
    void showProgressDialog() -> f
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void checkVersionUpdate() -> g
    void access$0(com.itgold.mobilesafe.activity.SplashActivity) -> a
    void access$1(com.itgold.mobilesafe.activity.SplashActivity) -> b
    void access$2(com.itgold.mobilesafe.activity.SplashActivity,java.lang.String) -> a
    android.os.Handler access$3(com.itgold.mobilesafe.activity.SplashActivity) -> c
    void access$4(com.itgold.mobilesafe.activity.SplashActivity,java.io.Closeable) -> a
    void access$5(com.itgold.mobilesafe.activity.SplashActivity) -> d
com.itgold.mobilesafe.activity.SplashActivity$1 -> com.itgold.mobilesafe.activity.cn:
    com.itgold.mobilesafe.activity.SplashActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.itgold.mobilesafe.activity.SplashActivity$2 -> com.itgold.mobilesafe.activity.co:
    com.itgold.mobilesafe.activity.SplashActivity this$0 -> a
    void run() -> run
com.itgold.mobilesafe.activity.SplashActivity$3 -> com.itgold.mobilesafe.activity.cp:
    com.itgold.mobilesafe.activity.SplashActivity this$0 -> a
    void run() -> run
com.itgold.mobilesafe.activity.SplashActivity$4 -> com.itgold.mobilesafe.activity.cq:
    com.itgold.mobilesafe.activity.SplashActivity this$0 -> a
    void run() -> run
    void copyAndunzipAddressDB2() -> a
com.itgold.mobilesafe.activity.SplashActivity$5 -> com.itgold.mobilesafe.activity.cr:
    com.itgold.mobilesafe.activity.SplashActivity this$0 -> a
    void run() -> run
com.itgold.mobilesafe.activity.SplashActivity$6 -> com.itgold.mobilesafe.activity.cs:
    com.itgold.mobilesafe.activity.SplashActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.itgold.mobilesafe.activity.SplashActivity$7 -> com.itgold.mobilesafe.activity.ct:
    com.itgold.mobilesafe.activity.SplashActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.itgold.mobilesafe.activity.SplashActivity$8 -> com.itgold.mobilesafe.activity.cu:
    com.itgold.mobilesafe.activity.SplashActivity this$0 -> a
    android.app.ProgressDialog val$dialog -> b
    java.lang.String val$target -> c
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> a
    void onLoading(long,long,boolean) -> a
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> a
com.itgold.mobilesafe.activity.SplashActivity$CheckVersionTask -> com.itgold.mobilesafe.activity.cv:
    com.itgold.mobilesafe.activity.SplashActivity this$0 -> a
    void run() -> run
com.itgold.mobilesafe.activity.TrafficActiviy -> com.itgold.mobilesafe.activity.TrafficActiviy:
    android.content.pm.PackageManager mPm -> a
    java.util.List mDatas -> b
    android.widget.ListView mListView -> c
    android.widget.LinearLayout mLloading -> d
    void onCreate(android.os.Bundle) -> onCreate
    long getRcv(int) -> a
    long getSnd(int) -> b
    java.util.List access$0(com.itgold.mobilesafe.activity.TrafficActiviy) -> a
    android.widget.LinearLayout access$1(com.itgold.mobilesafe.activity.TrafficActiviy) -> b
    android.content.pm.PackageManager access$2(com.itgold.mobilesafe.activity.TrafficActiviy) -> c
    void access$3(com.itgold.mobilesafe.activity.TrafficActiviy,java.util.List) -> a
    long access$4(com.itgold.mobilesafe.activity.TrafficActiviy,int) -> a
    long access$5(com.itgold.mobilesafe.activity.TrafficActiviy,int) -> b
    android.widget.ListView access$6(com.itgold.mobilesafe.activity.TrafficActiviy) -> d
com.itgold.mobilesafe.activity.TrafficActiviy$1 -> com.itgold.mobilesafe.activity.cw:
    com.itgold.mobilesafe.activity.TrafficActiviy this$0 -> a
    void onPreExecute() -> onPreExecute
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    void onPostExecute(java.lang.Void) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.itgold.mobilesafe.activity.TrafficActiviy$TrafficAdapter -> com.itgold.mobilesafe.activity.cx:
    com.itgold.mobilesafe.activity.TrafficActiviy this$0 -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.itgold.mobilesafe.activity.TrafficActiviy$ViewHolder -> com.itgold.mobilesafe.activity.cy:
    android.widget.ImageView ivIcon -> a
    android.widget.TextView tvName -> b
    android.widget.TextView tvRcv -> c
    android.widget.TextView tvSnd -> d
    com.itgold.mobilesafe.activity.TrafficActiviy this$0 -> e
com.itgold.mobilesafe.bean.AntiVirusInfo -> com.itgold.mobilesafe.a.a:
    java.lang.String name -> a
    java.lang.String packageName -> b
    android.graphics.drawable.Drawable icon -> c
    boolean isVirus -> d
com.itgold.mobilesafe.bean.AppInfo -> com.itgold.mobilesafe.a.b:
    java.lang.String name -> a
    java.lang.String packageName -> b
    android.graphics.drawable.Drawable icon -> c
    boolean isInstallSD -> d
    long size -> e
    boolean isSystem -> f
com.itgold.mobilesafe.bean.BlackInfo -> com.itgold.mobilesafe.a.c:
    java.lang.String number -> a
    int type -> b
com.itgold.mobilesafe.bean.CacheInfo -> com.itgold.mobilesafe.a.d:
    android.graphics.drawable.Drawable icon -> a
    java.lang.String name -> b
    long cacheSize -> c
    java.lang.String packageName -> d
com.itgold.mobilesafe.bean.ContactInfo -> com.itgold.mobilesafe.a.e:
    java.lang.String name -> a
    java.lang.String number -> b
    long contactId -> c
com.itgold.mobilesafe.bean.HomeItem -> com.itgold.mobilesafe.a.f:
    int iconId -> a
    java.lang.String title -> b
    java.lang.String desc -> c
com.itgold.mobilesafe.bean.ProcessInfo -> com.itgold.mobilesafe.a.g:
    android.graphics.drawable.Drawable icon -> a
    java.lang.String name -> b
    java.lang.String packageName -> c
    long memory -> d
    boolean isSystem -> e
    boolean isForeground -> f
    boolean checked -> g
com.itgold.mobilesafe.bean.TrafficInfo -> com.itgold.mobilesafe.a.h:
    java.lang.String packageName -> a
    java.lang.String name -> b
    android.graphics.drawable.Drawable icon -> c
    int uid -> d
    long rcv -> e
    long snd -> f
com.itgold.mobilesafe.db.AddressDao -> com.itgold.mobilesafe.b.a:
    java.lang.String findAddress(android.content.Context,java.lang.String) -> a
com.itgold.mobilesafe.db.AntivirusDao -> com.itgold.mobilesafe.b.b:
    boolean isVirus(android.content.Context,java.lang.String) -> a
com.itgold.mobilesafe.db.AppLockDBHelper -> com.itgold.mobilesafe.b.c:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.itgold.mobilesafe.db.AppLockDao -> com.itgold.mobilesafe.b.d:
    com.itgold.mobilesafe.db.AppLockDBHelper mHelper -> a
    android.content.Context mContext -> b
    boolean add(java.lang.String) -> a
    boolean delete(java.lang.String) -> b
    boolean findLock(java.lang.String) -> c
    java.util.List findAll() -> a
com.itgold.mobilesafe.db.BlackDao -> com.itgold.mobilesafe.b.e:
    com.itgold.mobilesafe.db.BlacklistDBHelper mHelper -> a
    boolean add(java.lang.String,int) -> a
    boolean delete(java.lang.String) -> a
    boolean update(java.lang.String,int) -> b
    int findType(java.lang.String) -> b
    java.util.List findPart(int,int) -> a
com.itgold.mobilesafe.db.BlacklistDBHelper -> com.itgold.mobilesafe.b.f:
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.itgold.mobilesafe.db.CommonNumberDao -> com.itgold.mobilesafe.b.g:
    int getGroupCount(android.content.Context) -> a
    int getChildCount(android.content.Context,int) -> a
    java.lang.String getGroupText(android.content.Context,int) -> b
    java.lang.String[] getChildText(android.content.Context,int,int) -> a
com.itgold.mobilesafe.engine.AppInfoProvider -> com.itgold.mobilesafe.c.a:
    java.util.List getAllApps(android.content.Context) -> a
    com.itgold.mobilesafe.bean.AppInfo getAppInfo(android.content.Context,java.lang.String) -> a
com.itgold.mobilesafe.engine.ProcessProvider -> com.itgold.mobilesafe.c.b:
    int getRunningProcessCount(android.content.Context) -> a
    int getTotalProcessCount(android.content.Context) -> b
    long getFreeMemory(android.content.Context) -> c
    long getTotalMemory(android.content.Context) -> d
    long getLowTotalMemory() -> a
    java.util.List getAllRunningProcesses(android.content.Context) -> e
    void killProcess(android.content.Context,java.lang.String) -> a
com.itgold.mobilesafe.engine.SmsProvider -> com.itgold.mobilesafe.c.c:
    void smsBackup(android.content.Context,com.itgold.mobilesafe.engine.SmsProvider$OnSmsListener) -> a
    void smsRestore(android.content.Context,com.itgold.mobilesafe.engine.SmsProvider$OnSmsListener) -> b
com.itgold.mobilesafe.engine.SmsProvider$1 -> com.itgold.mobilesafe.c.d:
    com.itgold.mobilesafe.engine.SmsProvider$OnSmsListener val$listener -> a
    android.content.Context val$context -> b
    java.lang.Boolean doInBackground(java.lang.Void[]) -> a
    void onProgressUpdate(java.lang.Integer[]) -> a
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.itgold.mobilesafe.engine.SmsProvider$2 -> com.itgold.mobilesafe.c.e:
    com.itgold.mobilesafe.engine.SmsProvider$OnSmsListener val$listener -> a
    android.content.Context val$context -> b
    java.lang.Boolean doInBackground(java.lang.Void[]) -> a
    void onProgressUpdate(java.lang.Integer[]) -> a
    void onPostExecute(java.lang.Boolean) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
com.itgold.mobilesafe.engine.SmsProvider$OnSmsListener -> com.itgold.mobilesafe.c.f:
    void onMax(int) -> b
    void onProgress(int) -> a
    void onSucess() -> a
    void onFailed() -> b
com.itgold.mobilesafe.engine.SmsProvider$SmsInfo -> com.itgold.mobilesafe.c.g:
    java.lang.String address -> a
    long date -> b
    int type -> c
    java.lang.String body -> d
com.itgold.mobilesafe.receiver.BootCompleteReceiver -> com.itgold.mobilesafe.receiver.BootCompleteReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.itgold.mobilesafe.receiver.MyReceiver -> com.itgold.mobilesafe.receiver.MyReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.itgold.mobilesafe.receiver.ProcessWidget -> com.itgold.mobilesafe.receiver.ProcessWidget:
    void onEnabled(android.content.Context) -> onEnabled
    void onDisabled(android.content.Context) -> onDisabled
    void onDeleted(android.content.Context,int[]) -> onDeleted
    void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[]) -> onUpdate
com.itgold.mobilesafe.receiver.SafeAdimnReceiver -> com.itgold.mobilesafe.receiver.SafeAdimnReceiver:
com.itgold.mobilesafe.receiver.SmsReceiver -> com.itgold.mobilesafe.receiver.SmsReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.itgold.mobilesafe.service.AutoCleanService -> com.itgold.mobilesafe.service.AutoCleanService:
    android.content.BroadcastReceiver mReceiver -> a
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
com.itgold.mobilesafe.service.AutoCleanService$1 -> com.itgold.mobilesafe.service.a:
    com.itgold.mobilesafe.service.AutoCleanService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.itgold.mobilesafe.service.CallSmsSafeService -> com.itgold.mobilesafe.service.CallSmsSafeService:
    android.telephony.TelephonyManager mTm -> a
    com.itgold.mobilesafe.db.BlackDao mDao -> b
    android.telephony.PhoneStateListener mListener -> c
    android.content.BroadcastReceiver mSmsReceiver -> d
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    com.itgold.mobilesafe.db.BlackDao access$0(com.itgold.mobilesafe.service.CallSmsSafeService) -> a
com.itgold.mobilesafe.service.CallSmsSafeService$1 -> com.itgold.mobilesafe.service.b:
    com.itgold.mobilesafe.service.CallSmsSafeService this$0 -> a
    void onCallStateChanged(int,java.lang.String) -> onCallStateChanged
com.itgold.mobilesafe.service.CallSmsSafeService$1$1 -> com.itgold.mobilesafe.service.c:
    com.itgold.mobilesafe.service.CallSmsSafeService$1 this$1 -> a
    java.lang.String val$incomingNumber -> b
    android.content.ContentResolver val$cr -> c
    android.net.Uri val$url -> d
    void onChange(boolean) -> onChange
com.itgold.mobilesafe.service.CallSmsSafeService$2 -> com.itgold.mobilesafe.service.d:
    com.itgold.mobilesafe.service.CallSmsSafeService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.itgold.mobilesafe.service.GPSService -> com.itgold.mobilesafe.service.GPSService:
    android.location.LocationManager mLm -> a
    android.location.LocationListener listener -> b
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    void loadLocation(double,double) -> a
    void sendSms(java.lang.String) -> a
    void access$0(com.itgold.mobilesafe.service.GPSService,double,double) -> a
    void access$1(com.itgold.mobilesafe.service.GPSService,java.lang.String) -> a
com.itgold.mobilesafe.service.GPSService$1 -> com.itgold.mobilesafe.service.e:
    com.itgold.mobilesafe.service.GPSService this$0 -> a
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onLocationChanged(android.location.Location) -> onLocationChanged
com.itgold.mobilesafe.service.GPSService$2 -> com.itgold.mobilesafe.service.f:
    com.itgold.mobilesafe.service.GPSService this$0 -> a
    double val$longitude -> b
    double val$latitude -> c
    void onFailure(com.lidroid.xutils.exception.HttpException,java.lang.String) -> a
    void onSuccess(com.lidroid.xutils.http.ResponseInfo) -> a
com.itgold.mobilesafe.service.NumberAddressService -> com.itgold.mobilesafe.service.NumberAddressService:
    android.telephony.TelephonyManager mTm -> a
    com.itgold.mobilesafe.view.AddressToast mCallInToast -> b
    com.itgold.mobilesafe.view.AddressToast mCallOutToast -> c
    boolean showIn -> d
    android.content.BroadcastReceiver mCallOutReceiver -> e
    android.telephony.PhoneStateListener mCallInListener -> f
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    boolean access$0(com.itgold.mobilesafe.service.NumberAddressService) -> a
    com.itgold.mobilesafe.view.AddressToast access$1(com.itgold.mobilesafe.service.NumberAddressService) -> b
    com.itgold.mobilesafe.view.AddressToast access$2(com.itgold.mobilesafe.service.NumberAddressService) -> c
    void access$3(com.itgold.mobilesafe.service.NumberAddressService,boolean) -> a
com.itgold.mobilesafe.service.NumberAddressService$1 -> com.itgold.mobilesafe.service.g:
    com.itgold.mobilesafe.service.NumberAddressService this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.itgold.mobilesafe.service.NumberAddressService$2 -> com.itgold.mobilesafe.service.h:
    com.itgold.mobilesafe.service.NumberAddressService this$0 -> a
    void onCallStateChanged(int,java.lang.String) -> onCallStateChanged
com.itgold.mobilesafe.service.ProtectedService -> com.itgold.mobilesafe.service.ProtectedService:
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
com.itgold.mobilesafe.service.UpdateWidgetService -> com.itgold.mobilesafe.service.UpdateWidgetService:
    android.appwidget.AppWidgetManager mAwm -> a
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    void startUpdate() -> a
    android.appwidget.AppWidgetManager access$0(com.itgold.mobilesafe.service.UpdateWidgetService) -> a
com.itgold.mobilesafe.service.UpdateWidgetService$1 -> com.itgold.mobilesafe.service.i:
    com.itgold.mobilesafe.service.UpdateWidgetService this$0 -> a
    void run() -> run
com.itgold.mobilesafe.service.WatchDogService1 -> com.itgold.mobilesafe.service.WatchDogService1:
    android.app.ActivityManager mAm -> a
    com.itgold.mobilesafe.db.AppLockDao mDao -> b
    java.util.List mFreeList -> c
    boolean isRunging -> d
    android.content.BroadcastReceiver mReceiver -> e
    android.database.ContentObserver mObserver -> f
    java.util.List mLockList -> g
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    void startWatch() -> a
    void onDestroy() -> onDestroy
    void access$0(com.itgold.mobilesafe.service.WatchDogService1,boolean) -> a
    java.util.List access$1(com.itgold.mobilesafe.service.WatchDogService1) -> a
    void access$2(com.itgold.mobilesafe.service.WatchDogService1) -> b
    com.itgold.mobilesafe.db.AppLockDao access$3(com.itgold.mobilesafe.service.WatchDogService1) -> c
    void access$4(com.itgold.mobilesafe.service.WatchDogService1,java.util.List) -> a
    boolean access$5(com.itgold.mobilesafe.service.WatchDogService1) -> d
    android.app.ActivityManager access$6(com.itgold.mobilesafe.service.WatchDogService1) -> e
    java.util.List access$7(com.itgold.mobilesafe.service.WatchDogService1) -> f
com.itgold.mobilesafe.service.WatchDogService1$1 -> com.itgold.mobilesafe.service.j:
    com.itgold.mobilesafe.service.WatchDogService1 this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.itgold.mobilesafe.service.WatchDogService1$2 -> com.itgold.mobilesafe.service.k:
    com.itgold.mobilesafe.service.WatchDogService1 this$0 -> a
    void onChange(boolean) -> onChange
com.itgold.mobilesafe.service.WatchDogService1$3 -> com.itgold.mobilesafe.service.l:
    com.itgold.mobilesafe.service.WatchDogService1 this$0 -> a
    void run() -> run
com.itgold.mobilesafe.service.WatchDogService2 -> com.itgold.mobilesafe.service.WatchDogService2:
    java.util.List mFreeList -> a
    java.util.List mLockList -> b
    com.itgold.mobilesafe.db.AppLockDao mDao -> c
    android.content.BroadcastReceiver mReceiver -> d
    android.database.ContentObserver mObserver -> e
    void onServiceConnected() -> onServiceConnected
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
    void onAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onAccessibilityEvent
    void onInterrupt() -> onInterrupt
    java.util.List access$0(com.itgold.mobilesafe.service.WatchDogService2) -> a
    com.itgold.mobilesafe.db.AppLockDao access$1(com.itgold.mobilesafe.service.WatchDogService2) -> b
    void access$2(com.itgold.mobilesafe.service.WatchDogService2,java.util.List) -> a
com.itgold.mobilesafe.service.WatchDogService2$1 -> com.itgold.mobilesafe.service.m:
    com.itgold.mobilesafe.service.WatchDogService2 this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.itgold.mobilesafe.service.WatchDogService2$2 -> com.itgold.mobilesafe.service.n:
    com.itgold.mobilesafe.service.WatchDogService2 this$0 -> a
    void onChange(boolean) -> onChange
com.itgold.mobilesafe.utils.ContactUtils -> com.itgold.mobilesafe.d.a:
    java.util.List getAllPhone(android.content.Context) -> a
    android.graphics.Bitmap getContactIcon(android.content.Context,long) -> a
    android.database.Cursor getAllPhoneCursor(android.content.Context) -> b
    com.itgold.mobilesafe.bean.ContactInfo getContactInfo(android.database.Cursor) -> a
com.itgold.mobilesafe.utils.GZipUtils -> com.itgold.mobilesafe.d.b:
    void unzip(java.io.InputStream,java.io.OutputStream) -> a
    void close(java.io.Closeable) -> a
com.itgold.mobilesafe.utils.Logger -> com.itgold.mobilesafe.d.c:
    boolean isEnable -> a
    int LOG_LEVEL -> b
    void d(java.lang.String,java.lang.String) -> a
com.itgold.mobilesafe.utils.MD5Utils -> com.itgold.mobilesafe.d.d:
    java.lang.String encode(java.io.InputStream) -> a
com.itgold.mobilesafe.utils.PackageUtils -> com.itgold.mobilesafe.d.e:
    java.lang.String getVersionName(android.content.Context) -> a
    int getVersionCode(android.content.Context) -> b
com.itgold.mobilesafe.utils.PreferenceUtils -> com.itgold.mobilesafe.d.f:
    android.content.SharedPreferences sp -> a
    android.content.SharedPreferences getPreferences(android.content.Context) -> a
    boolean getBoolean(android.content.Context,java.lang.String) -> a
    boolean getBoolean(android.content.Context,java.lang.String,boolean) -> a
    void putBoolean(android.content.Context,java.lang.String,boolean) -> b
    java.lang.String getString(android.content.Context,java.lang.String) -> b
    java.lang.String getString(android.content.Context,java.lang.String,java.lang.String) -> a
    void putString(android.content.Context,java.lang.String,java.lang.String) -> b
    int getInt(android.content.Context,java.lang.String,int) -> a
    void putInt(android.content.Context,java.lang.String,int) -> b
com.itgold.mobilesafe.utils.ServiceStateUtils -> com.itgold.mobilesafe.d.g:
    boolean isRunging(android.content.Context,java.lang.Class) -> a
com.itgold.mobilesafe.view.AddressDialog -> com.itgold.mobilesafe.view.a:
    android.widget.ListView mListView -> a
    android.widget.ListAdapter mAdapter -> b
    android.widget.AdapterView$OnItemClickListener mListener -> c
    void onCreate(android.os.Bundle) -> onCreate
    void setAdapter(android.widget.ListAdapter) -> a
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> a
com.itgold.mobilesafe.view.AddressToast -> com.itgold.mobilesafe.view.b:
    android.content.Context mContext -> a
    android.view.WindowManager mWM -> b
    android.view.WindowManager$LayoutParams mParams -> c
    android.view.View mView -> d
    float startX -> e
    float startY -> f
    void show(java.lang.String) -> a
    void hide() -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
com.itgold.mobilesafe.view.FocusedTextView -> com.itgold.mobilesafe.view.FocusedTextView:
    boolean isFocused() -> isFocused
    void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
com.itgold.mobilesafe.view.ProgressDesView -> com.itgold.mobilesafe.view.ProgressDesView:
    android.widget.TextView mTvTitle -> a
    android.widget.TextView mTvLeft -> b
    android.widget.TextView mTvRight -> c
    android.widget.ProgressBar mPbProgress -> d
    void setDesTitle(java.lang.String) -> setDesTitle
    void setDesLeft(java.lang.String) -> setDesLeft
    void setDesRight(java.lang.String) -> setDesRight
    void setDesProgress(int) -> setDesProgress
com.itgold.mobilesafe.view.SegementControlView -> com.itgold.mobilesafe.view.SegementControlView:
    android.widget.TextView mTvLeft -> a
    android.widget.TextView mTvRight -> b
    boolean isLeftSelected -> c
    com.itgold.mobilesafe.view.SegementControlView$OnSelectedListener mListener -> d
    void onClick(android.view.View) -> onClick
    void setOnSelectedListener(com.itgold.mobilesafe.view.SegementControlView$OnSelectedListener) -> setOnSelectedListener
com.itgold.mobilesafe.view.SegementControlView$OnSelectedListener -> com.itgold.mobilesafe.view.c:
    void onSelected(boolean) -> a
com.itgold.mobilesafe.view.SettingItemView -> com.itgold.mobilesafe.view.SettingItemView:
    android.widget.TextView mTvTitle -> a
    android.widget.ImageView mIvToggle -> b
    boolean isToggleOn -> c
    boolean isToggleEnable -> d
    void setToggleOn(boolean) -> setToggleOn
    void toggle() -> a
    boolean isToggleOn() -> b
se.emilsjolander.stickylistheaders.AdapterWrapper -> se.emilsjolander.stickylistheaders.a:
    se.emilsjolander.stickylistheaders.StickyListHeadersAdapter mDelegate -> a
    java.util.List mHeaderCache -> b
    android.content.Context mContext -> c
    android.graphics.drawable.Drawable mDivider -> d
    int mDividerHeight -> e
    se.emilsjolander.stickylistheaders.AdapterWrapper$OnHeaderClickListener mOnHeaderClickListener -> f
    android.database.DataSetObserver mDataSetObserver -> g
    void setDivider(android.graphics.drawable.Drawable,int) -> a
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    boolean hasStableIds() -> hasStableIds
    int getItemViewType(int) -> getItemViewType
    int getViewTypeCount() -> getViewTypeCount
    boolean isEmpty() -> isEmpty
    void recycleHeaderIfExists(se.emilsjolander.stickylistheaders.WrapperView) -> a
    android.view.View configureHeader(se.emilsjolander.stickylistheaders.WrapperView,int) -> a
    android.view.View popHeader() -> a
    boolean previousPositionHasSameHeader(int) -> b
    se.emilsjolander.stickylistheaders.WrapperView getView(int,android.view.View,android.view.ViewGroup) -> b
    void setOnHeaderClickListener(se.emilsjolander.stickylistheaders.AdapterWrapper$OnHeaderClickListener) -> a
    boolean equals(java.lang.Object) -> equals
    android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    int hashCode() -> hashCode
    void notifyDataSetChanged() -> notifyDataSetChanged
    void notifyDataSetInvalidated() -> notifyDataSetInvalidated
    java.lang.String toString() -> toString
    android.view.View getHeaderView(int,android.view.View,android.view.ViewGroup) -> a
    long getHeaderId(int) -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.util.List access$1(se.emilsjolander.stickylistheaders.AdapterWrapper) -> a
    void access$2(se.emilsjolander.stickylistheaders.AdapterWrapper) -> b
    void access$3(se.emilsjolander.stickylistheaders.AdapterWrapper) -> c
    se.emilsjolander.stickylistheaders.AdapterWrapper$OnHeaderClickListener access$4(se.emilsjolander.stickylistheaders.AdapterWrapper) -> d
se.emilsjolander.stickylistheaders.AdapterWrapper$1 -> se.emilsjolander.stickylistheaders.b:
    se.emilsjolander.stickylistheaders.AdapterWrapper this$0 -> a
    void onInvalidated() -> onInvalidated
    void onChanged() -> onChanged
se.emilsjolander.stickylistheaders.AdapterWrapper$2 -> se.emilsjolander.stickylistheaders.c:
    se.emilsjolander.stickylistheaders.AdapterWrapper this$0 -> a
    int val$position -> b
    void onClick(android.view.View) -> onClick
se.emilsjolander.stickylistheaders.AdapterWrapper$OnHeaderClickListener -> se.emilsjolander.stickylistheaders.d:
    void onHeaderClick(android.view.View,int,long) -> a
se.emilsjolander.stickylistheaders.CheckableWrapperView -> se.emilsjolander.stickylistheaders.e:
    boolean isChecked() -> isChecked
    void setChecked(boolean) -> setChecked
    void toggle() -> toggle
se.emilsjolander.stickylistheaders.R -> se.emilsjolander.stickylistheaders.f:
se.emilsjolander.stickylistheaders.R$attr -> se.emilsjolander.stickylistheaders.g:
    int isDrawingListUnderStickyHeader -> isDrawingListUnderStickyHeader
    int hasStickyHeaders -> hasStickyHeaders
    int stickyListHeadersListViewStyle -> stickyListHeadersListViewStyle
se.emilsjolander.stickylistheaders.R$styleable -> se.emilsjolander.stickylistheaders.h:
    int StickyListHeadersListView_android_paddingBottom -> StickyListHeadersListView_android_paddingBottom
    int StickyListHeadersListView_android_fastScrollAlwaysVisible -> StickyListHeadersListView_android_fastScrollAlwaysVisible
    int StickyListHeadersListView_android_paddingRight -> StickyListHeadersListView_android_paddingRight
    int StickyListHeadersListView_android_fastScrollEnabled -> StickyListHeadersListView_android_fastScrollEnabled
    int StickyListHeadersListView_android_drawSelectorOnTop -> StickyListHeadersListView_android_drawSelectorOnTop
    int StickyListHeadersListView_android_listSelector -> StickyListHeadersListView_android_listSelector
    int StickyListHeadersListView_android_requiresFadingEdge -> StickyListHeadersListView_android_requiresFadingEdge
    int StickyListHeadersListView_android_padding -> StickyListHeadersListView_android_padding
    int StickyListHeadersListView_android_fadingEdgeLength -> StickyListHeadersListView_android_fadingEdgeLength
    int[] StickyListHeadersListView -> StickyListHeadersListView
    int StickyListHeadersListView_stickyListHeadersListViewStyle -> StickyListHeadersListView_stickyListHeadersListViewStyle
    int StickyListHeadersListView_android_choiceMode -> StickyListHeadersListView_android_choiceMode
    int StickyListHeadersListView_hasStickyHeaders -> StickyListHeadersListView_hasStickyHeaders
    int StickyListHeadersListView_android_scrollbars -> StickyListHeadersListView_android_scrollbars
    int StickyListHeadersListView_android_transcriptMode -> StickyListHeadersListView_android_transcriptMode
    int StickyListHeadersListView_android_cacheColorHint -> StickyListHeadersListView_android_cacheColorHint
    int StickyListHeadersListView_isDrawingListUnderStickyHeader -> StickyListHeadersListView_isDrawingListUnderStickyHeader
    int StickyListHeadersListView_android_stackFromBottom -> StickyListHeadersListView_android_stackFromBottom
    int StickyListHeadersListView_android_scrollingCache -> StickyListHeadersListView_android_scrollingCache
    int StickyListHeadersListView_android_paddingTop -> StickyListHeadersListView_android_paddingTop
    int StickyListHeadersListView_android_divider -> StickyListHeadersListView_android_divider
    int StickyListHeadersListView_android_scrollbarStyle -> StickyListHeadersListView_android_scrollbarStyle
    int StickyListHeadersListView_android_dividerHeight -> StickyListHeadersListView_android_dividerHeight
    int StickyListHeadersListView_android_paddingLeft -> StickyListHeadersListView_android_paddingLeft
    int StickyListHeadersListView_android_overScrollMode -> StickyListHeadersListView_android_overScrollMode
    int StickyListHeadersListView_android_clipToPadding -> StickyListHeadersListView_android_clipToPadding
se.emilsjolander.stickylistheaders.SectionIndexerAdapterWrapper -> se.emilsjolander.stickylistheaders.i:
    android.widget.SectionIndexer mSectionIndexerDelegate -> b
    int getPositionForSection(int) -> getPositionForSection
    int getSectionForPosition(int) -> getSectionForPosition
    java.lang.Object[] getSections() -> getSections
se.emilsjolander.stickylistheaders.StickyListHeadersAdapter -> se.emilsjolander.stickylistheaders.j:
    android.view.View getHeaderView(int,android.view.View,android.view.ViewGroup) -> a
    long getHeaderId(int) -> a
se.emilsjolander.stickylistheaders.StickyListHeadersListView -> se.emilsjolander.stickylistheaders.StickyListHeadersListView:
    se.emilsjolander.stickylistheaders.WrapperViewList mList -> a
    android.view.View mHeader -> b
    java.lang.Long mHeaderId -> c
    java.lang.Integer mHeaderPosition -> d
    java.lang.Integer mHeaderOffset -> e
    android.widget.AbsListView$OnScrollListener mOnScrollListenerDelegate -> f
    se.emilsjolander.stickylistheaders.AdapterWrapper mAdapter -> g
    boolean mAreHeadersSticky -> h
    boolean mClippingToPadding -> i
    boolean mIsDrawingListUnderStickyHeader -> j
    int mStickyHeaderTopOffset -> k
    int mPaddingLeft -> l
    int mPaddingTop -> m
    int mPaddingRight -> n
    int mPaddingBottom -> o
    float mDownY -> p
    boolean mHeaderOwnsTouch -> q
    float mTouchSlop -> r
    se.emilsjolander.stickylistheaders.StickyListHeadersListView$OnHeaderClickListener mOnHeaderClickListener -> s
    se.emilsjolander.stickylistheaders.StickyListHeadersListView$OnStickyHeaderOffsetChangedListener mOnStickyHeaderOffsetChangedListener -> t
    se.emilsjolander.stickylistheaders.StickyListHeadersListView$OnStickyHeaderChangedListener mOnStickyHeaderChangedListener -> u
    se.emilsjolander.stickylistheaders.StickyListHeadersListView$AdapterWrapperDataSetObserver mDataSetObserver -> v
    android.graphics.drawable.Drawable mDivider -> w
    int mDividerHeight -> x
    void onMeasure(int,int) -> onMeasure
    void ensureHeaderHasCorrectLayoutParams(android.view.View) -> a
    void measureHeader(android.view.View) -> b
    void onLayout(boolean,int,int,int,int) -> onLayout
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void clearHeader() -> b
    void updateOrClearHeader(int) -> b
    void updateHeader(int) -> c
    void swapHeader(android.view.View) -> c
    void updateHeaderVisibilities() -> c
    void setHeaderOffet(int) -> setHeaderOffet
    boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    boolean isStartOfSection(int) -> d
    int getHeaderOverlap(int) -> a
    int stickyHeaderTop() -> d
    void setAreHeadersSticky(boolean) -> setAreHeadersSticky
    boolean areHeadersSticky() -> a
    boolean getAreHeadersSticky() -> getAreHeadersSticky
    void setStickyHeaderTopOffset(int) -> setStickyHeaderTopOffset
    int getStickyHeaderTopOffset() -> getStickyHeaderTopOffset
    void setDrawingListUnderStickyHeader(boolean) -> setDrawingListUnderStickyHeader
    void setOnHeaderClickListener(se.emilsjolander.stickylistheaders.StickyListHeadersListView$OnHeaderClickListener) -> setOnHeaderClickListener
    void setOnStickyHeaderOffsetChangedListener(se.emilsjolander.stickylistheaders.StickyListHeadersListView$OnStickyHeaderOffsetChangedListener) -> setOnStickyHeaderOffsetChangedListener
    void setOnStickyHeaderChangedListener(se.emilsjolander.stickylistheaders.StickyListHeadersListView$OnStickyHeaderChangedListener) -> setOnStickyHeaderChangedListener
    int getListChildCount() -> getListChildCount
    android.widget.ListView getWrappedList() -> getWrappedList
    boolean requireSdkVersion(int) -> e
    void setAdapter(se.emilsjolander.stickylistheaders.StickyListHeadersAdapter) -> setAdapter
    se.emilsjolander.stickylistheaders.StickyListHeadersAdapter getAdapter() -> getAdapter
    void setDivider(android.graphics.drawable.Drawable) -> setDivider
    void setDividerHeight(int) -> setDividerHeight
    android.graphics.drawable.Drawable getDivider() -> getDivider
    int getDividerHeight() -> getDividerHeight
    void setOnScrollListener(android.widget.AbsListView$OnScrollListener) -> setOnScrollListener
    void setOnTouchListener(android.view.View$OnTouchListener) -> setOnTouchListener
    void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    void setOnItemLongClickListener(android.widget.AdapterView$OnItemLongClickListener) -> setOnItemLongClickListener
    int getHeaderViewsCount() -> getHeaderViewsCount
    int getFooterViewsCount() -> getFooterViewsCount
    void setEmptyView(android.view.View) -> setEmptyView
    android.view.View getEmptyView() -> getEmptyView
    boolean isVerticalScrollBarEnabled() -> isVerticalScrollBarEnabled
    boolean isHorizontalScrollBarEnabled() -> isHorizontalScrollBarEnabled
    void setVerticalScrollBarEnabled(boolean) -> setVerticalScrollBarEnabled
    void setHorizontalScrollBarEnabled(boolean) -> setHorizontalScrollBarEnabled
    int getOverScrollMode() -> getOverScrollMode
    void setOverScrollMode(int) -> setOverScrollMode
    void setSelection(int) -> setSelection
    void setSelectionFromTop(int,int) -> a
    void setSelector(android.graphics.drawable.Drawable) -> setSelector
    void setSelector(int) -> setSelector
    int getFirstVisiblePosition() -> getFirstVisiblePosition
    int getLastVisiblePosition() -> getLastVisiblePosition
    void setChoiceMode(int) -> setChoiceMode
    int getCheckedItemCount() -> getCheckedItemCount
    long[] getCheckedItemIds() -> getCheckedItemIds
    int getCheckedItemPosition() -> getCheckedItemPosition
    android.util.SparseBooleanArray getCheckedItemPositions() -> getCheckedItemPositions
    int getCount() -> getCount
    void setOnCreateContextMenuListener(android.view.View$OnCreateContextMenuListener) -> setOnCreateContextMenuListener
    boolean showContextMenu() -> showContextMenu
    void setClipToPadding(boolean) -> setClipToPadding
    void setPadding(int,int,int,int) -> setPadding
    int getPaddingLeft() -> getPaddingLeft
    int getPaddingTop() -> getPaddingTop
    int getPaddingRight() -> getPaddingRight
    int getPaddingBottom() -> getPaddingBottom
    void setFastScrollEnabled(boolean) -> setFastScrollEnabled
    void setFastScrollAlwaysVisible(boolean) -> setFastScrollAlwaysVisible
    void setScrollBarStyle(int) -> setScrollBarStyle
    int getScrollBarStyle() -> getScrollBarStyle
    void setMultiChoiceModeListener(android.widget.AbsListView$MultiChoiceModeListener) -> setMultiChoiceModeListener
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    boolean canScrollVertically(int) -> canScrollVertically
    void setTranscriptMode(int) -> setTranscriptMode
    void setBlockLayoutChildren(boolean) -> setBlockLayoutChildren
    void setStackFromBottom(boolean) -> setStackFromBottom
    void access$0(se.emilsjolander.stickylistheaders.StickyListHeadersListView) -> a
    android.widget.AbsListView$OnScrollListener access$1(se.emilsjolander.stickylistheaders.StickyListHeadersListView) -> b
    se.emilsjolander.stickylistheaders.WrapperViewList access$2(se.emilsjolander.stickylistheaders.StickyListHeadersListView) -> c
    void access$3(se.emilsjolander.stickylistheaders.StickyListHeadersListView,int) -> a
    android.view.View access$4(se.emilsjolander.stickylistheaders.StickyListHeadersListView) -> d
    boolean access$5(se.emilsjolander.stickylistheaders.StickyListHeadersListView) -> e
    int access$6(se.emilsjolander.stickylistheaders.StickyListHeadersListView) -> f
    boolean access$7(se.emilsjolander.stickylistheaders.StickyListHeadersListView,android.graphics.Canvas,android.view.View,long) -> a
    se.emilsjolander.stickylistheaders.StickyListHeadersListView$OnHeaderClickListener access$8(se.emilsjolander.stickylistheaders.StickyListHeadersListView) -> g
    java.lang.Integer access$9(se.emilsjolander.stickylistheaders.StickyListHeadersListView) -> h
    java.lang.Long access$10(se.emilsjolander.stickylistheaders.StickyListHeadersListView) -> i
se.emilsjolander.stickylistheaders.StickyListHeadersListView$1 -> se.emilsjolander.stickylistheaders.k:
    se.emilsjolander.stickylistheaders.StickyListHeadersListView this$0 -> a
    void onClick(android.view.View) -> onClick
se.emilsjolander.stickylistheaders.StickyListHeadersListView$2 -> se.emilsjolander.stickylistheaders.l:
    se.emilsjolander.stickylistheaders.StickyListHeadersListView this$0 -> a
    void onClick(android.view.View) -> onClick
se.emilsjolander.stickylistheaders.StickyListHeadersListView$3 -> se.emilsjolander.stickylistheaders.m:
    se.emilsjolander.stickylistheaders.StickyListHeadersListView this$0 -> a
    android.view.View$OnTouchListener val$l -> b
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
se.emilsjolander.stickylistheaders.StickyListHeadersListView$AdapterWrapperDataSetObserver -> se.emilsjolander.stickylistheaders.n:
    se.emilsjolander.stickylistheaders.StickyListHeadersListView this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
se.emilsjolander.stickylistheaders.StickyListHeadersListView$AdapterWrapperHeaderClickHandler -> se.emilsjolander.stickylistheaders.o:
    se.emilsjolander.stickylistheaders.StickyListHeadersListView this$0 -> a
    void onHeaderClick(android.view.View,int,long) -> a
se.emilsjolander.stickylistheaders.StickyListHeadersListView$OnHeaderClickListener -> se.emilsjolander.stickylistheaders.p:
    void onHeaderClick(se.emilsjolander.stickylistheaders.StickyListHeadersListView,android.view.View,int,long,boolean) -> a
se.emilsjolander.stickylistheaders.StickyListHeadersListView$OnStickyHeaderChangedListener -> se.emilsjolander.stickylistheaders.q:
    void onStickyHeaderChanged(se.emilsjolander.stickylistheaders.StickyListHeadersListView,android.view.View,int,long) -> a
se.emilsjolander.stickylistheaders.StickyListHeadersListView$OnStickyHeaderOffsetChangedListener -> se.emilsjolander.stickylistheaders.r:
    void onStickyHeaderOffsetChanged(se.emilsjolander.stickylistheaders.StickyListHeadersListView,android.view.View,int) -> a
se.emilsjolander.stickylistheaders.StickyListHeadersListView$WrapperListScrollListener -> se.emilsjolander.stickylistheaders.s:
    se.emilsjolander.stickylistheaders.StickyListHeadersListView this$0 -> a
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
se.emilsjolander.stickylistheaders.StickyListHeadersListView$WrapperViewListLifeCycleListener -> se.emilsjolander.stickylistheaders.t:
    se.emilsjolander.stickylistheaders.StickyListHeadersListView this$0 -> a
    void onDispatchDrawOccurred(android.graphics.Canvas) -> a
se.emilsjolander.stickylistheaders.WrapperView -> se.emilsjolander.stickylistheaders.u:
    android.view.View mItem -> a
    android.graphics.drawable.Drawable mDivider -> b
    int mDividerHeight -> c
    android.view.View mHeader -> d
    int mItemTop -> e
    boolean hasHeader() -> a
    android.view.View getItem() -> getItem
    android.view.View getHeader() -> getHeader
    void update(android.view.View,android.view.View,android.graphics.drawable.Drawable,int) -> a
    void onMeasure(int,int) -> onMeasure
    void onLayout(boolean,int,int,int,int) -> onLayout
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
se.emilsjolander.stickylistheaders.WrapperViewList -> se.emilsjolander.stickylistheaders.v:
    se.emilsjolander.stickylistheaders.WrapperViewList$LifeCycleListener mLifeCycleListener -> a
    java.util.List mFooterViews -> b
    int mTopClippingLength -> c
    android.graphics.Rect mSelectorRect -> d
    java.lang.reflect.Field mSelectorPositionField -> e
    boolean mClippingToPadding -> f
    boolean mBlockLayoutChildren -> g
    boolean performItemClick(android.view.View,int,long) -> performItemClick
    void positionSelectorRect() -> b
    int getSelectorPosition() -> c
    void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    void setLifeCycleListener(se.emilsjolander.stickylistheaders.WrapperViewList$LifeCycleListener) -> a
    void addFooterView(android.view.View) -> addFooterView
    void addFooterView(android.view.View,java.lang.Object,boolean) -> addFooterView
    void addInternalFooterView(android.view.View) -> b
    boolean removeFooterView(android.view.View) -> removeFooterView
    boolean containsFooterView(android.view.View) -> a
    void setTopClippingLength(int) -> a
    int getFixedFirstVisibleItem() -> a
    void setClipToPadding(boolean) -> setClipToPadding
    void setBlockLayoutChildren(boolean) -> a
    void layoutChildren() -> layoutChildren
se.emilsjolander.stickylistheaders.WrapperViewList$LifeCycleListener -> se.emilsjolander.stickylistheaders.w:
    void onDispatchDrawOccurred(android.graphics.Canvas) -> a
